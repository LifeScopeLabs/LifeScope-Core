{
  "{\"filename\":\"/app/scripts/seed.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/scripts\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongodb",
            "imported": [
              "MongoClient"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "MongoClient",
                "local": "MongoClient"
              }
            ]
          },
          {
            "source": "path",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "path"
              }
            ]
          },
          {
            "source": "fs",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "fs"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/scripts/seed.js",
      "filenameRelative": "/app/scripts/seed.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "seed.js",
      "sourceFileName": "seed.js",
      "sourceRoot": "/app/scripts",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/scripts",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "seed"
    },
    "ignored": false,
    "code": "'use strict';\n\nlet run = (() => {\n  var _ref = _asyncToGenerator(function* () {\n    db = yield _mongodb.MongoClient.connect(process.env.MONGODB_URI, { promiseLibrary: Promise });\n\n    console.log(`Starting seed...`);\n\n    const seedFile = _path2.default.resolve('./schema/data/seed.js');\n    try {\n      yield new Promise(function (resolve, reject) {\n        _fs2.default.access(seedFile, _fs2.default.F_OK, function (err) {\n          if (err) reject(err);else resolve();\n        });\n      });\n\n      // $FlowFixMe\n      const seedFn = require(seedFile).default;\n      yield seedFn(db); // eslint-disable-line\n    } catch (e) {\n      if (e.code === 'MODULE_NOT_FOUND' || e.code === 'ENOENT') {\n        console.log(`  file '${seedFile}' not found. Skipping...`);\n      } else {\n        console.log(e);\n      }\n    }\n\n    console.log('Seed competed!');\n    db.close();\n  });\n\n  return function run() {\n    return _ref.apply(this, arguments);\n  };\n})();\n\nvar _mongodb = require('mongodb');\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n/* eslint-disable no-await-in-loop */\n// This script scans `schema/data` folder for `schema/data/seed.js` files and run them for seeding DB.\n\nlet db;\n\nrun().catch(e => {\n  console.log(e);\n  process.exit(0);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlZWQuanMiXSwibmFtZXMiOlsiZGIiLCJjb25uZWN0IiwicHJvY2VzcyIsImVudiIsIk1PTkdPREJfVVJJIiwicHJvbWlzZUxpYnJhcnkiLCJQcm9taXNlIiwiY29uc29sZSIsImxvZyIsInNlZWRGaWxlIiwicmVzb2x2ZSIsInJlamVjdCIsImFjY2VzcyIsIkZfT0siLCJlcnIiLCJzZWVkRm4iLCJyZXF1aXJlIiwiZGVmYXVsdCIsImUiLCJjb2RlIiwiY2xvc2UiLCJydW4iLCJjYXRjaCIsImV4aXQiXSwibWFwcGluZ3MiOiI7OzsrQkFXQSxhQUFxQjtBQUNuQkEsU0FBSyxNQUFNLHFCQUFZQyxPQUFaLENBQW9CQyxRQUFRQyxHQUFSLENBQVlDLFdBQWhDLEVBQTZDLEVBQUVDLGdCQUFnQkMsT0FBbEIsRUFBN0MsQ0FBWDs7QUFFQUMsWUFBUUMsR0FBUixDQUFhLGtCQUFiOztBQUVBLFVBQU1DLFdBQVcsZUFBS0MsT0FBTCxDQUFhLHVCQUFiLENBQWpCO0FBQ0EsUUFBSTtBQUNGLFlBQU0sSUFBSUosT0FBSixDQUFZLFVBQUNJLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUNyQyxxQkFBR0MsTUFBSCxDQUFVSCxRQUFWLEVBQW9CLGFBQUdJLElBQXZCLEVBQTZCLGVBQU87QUFDbEMsY0FBSUMsR0FBSixFQUFTSCxPQUFPRyxHQUFQLEVBQVQsS0FDS0o7QUFDTixTQUhEO0FBSUQsT0FMSyxDQUFOOztBQU9BO0FBQ0EsWUFBTUssU0FBU0MsUUFBUVAsUUFBUixFQUFrQlEsT0FBakM7QUFDQSxZQUFNRixPQUFPZixFQUFQLENBQU4sQ0FWRSxDQVVnQjtBQUNuQixLQVhELENBV0UsT0FBT2tCLENBQVAsRUFBVTtBQUNWLFVBQUlBLEVBQUVDLElBQUYsS0FBVyxrQkFBWCxJQUFpQ0QsRUFBRUMsSUFBRixLQUFXLFFBQWhELEVBQTBEO0FBQ3hEWixnQkFBUUMsR0FBUixDQUFhLFdBQVVDLFFBQVMsMEJBQWhDO0FBQ0QsT0FGRCxNQUVPO0FBQ0xGLGdCQUFRQyxHQUFSLENBQVlVLENBQVo7QUFDRDtBQUNGOztBQUVEWCxZQUFRQyxHQUFSLENBQVksZ0JBQVo7QUFDQVIsT0FBR29CLEtBQUg7QUFDRCxHOztrQkEzQmNDLEc7Ozs7O0FBUGY7O0FBRUE7Ozs7QUFDQTs7Ozs7OztBQU5BO0FBQ0E7O0FBT0EsSUFBSXJCLEVBQUo7O0FBK0JBcUIsTUFBTUMsS0FBTixDQUFZSixLQUFLO0FBQ2ZYLFVBQVFDLEdBQVIsQ0FBWVUsQ0FBWjtBQUNBaEIsVUFBUXFCLElBQVIsQ0FBYSxDQUFiO0FBQ0QsQ0FIRCIsImZpbGUiOiJzZWVkLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2NyaXB0cyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1hd2FpdC1pbi1sb29wICovXG4vLyBUaGlzIHNjcmlwdCBzY2FucyBgc2NoZW1hL2RhdGFgIGZvbGRlciBmb3IgYHNjaGVtYS9kYXRhL3NlZWQuanNgIGZpbGVzIGFuZCBydW4gdGhlbSBmb3Igc2VlZGluZyBEQi5cblxuaW1wb3J0IHsgTW9uZ29DbGllbnQgfSBmcm9tICdtb25nb2RiJztcblxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xuXG5sZXQgZGI7XG5cbmFzeW5jIGZ1bmN0aW9uIHJ1bigpIHtcbiAgZGIgPSBhd2FpdCBNb25nb0NsaWVudC5jb25uZWN0KHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJLCB7IHByb21pc2VMaWJyYXJ5OiBQcm9taXNlIH0pO1xuXG4gIGNvbnNvbGUubG9nKGBTdGFydGluZyBzZWVkLi4uYCk7XG5cbiAgY29uc3Qgc2VlZEZpbGUgPSBwYXRoLnJlc29sdmUoJy4vc2NoZW1hL2RhdGEvc2VlZC5qcycpO1xuICB0cnkge1xuICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGZzLmFjY2VzcyhzZWVkRmlsZSwgZnMuRl9PSywgZXJyID0+IHtcbiAgICAgICAgaWYgKGVycikgcmVqZWN0KGVycik7XG4gICAgICAgIGVsc2UgcmVzb2x2ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgY29uc3Qgc2VlZEZuID0gcmVxdWlyZShzZWVkRmlsZSkuZGVmYXVsdDtcbiAgICBhd2FpdCBzZWVkRm4oZGIpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZS5jb2RlID09PSAnTU9EVUxFX05PVF9GT1VORCcgfHwgZS5jb2RlID09PSAnRU5PRU5UJykge1xuICAgICAgY29uc29sZS5sb2coYCAgZmlsZSAnJHtzZWVkRmlsZX0nIG5vdCBmb3VuZC4gU2tpcHBpbmcuLi5gKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coZSk7XG4gICAgfVxuICB9XG5cbiAgY29uc29sZS5sb2coJ1NlZWQgY29tcGV0ZWQhJyk7XG4gIGRiLmNsb3NlKCk7XG59XG5cbnJ1bigpLmNhdGNoKGUgPT4ge1xuICBjb25zb2xlLmxvZyhlKTtcbiAgcHJvY2Vzcy5leGl0KDApO1xufSk7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "seed.js"
      ],
      "names": [
        "db",
        "connect",
        "process",
        "env",
        "MONGODB_URI",
        "promiseLibrary",
        "Promise",
        "console",
        "log",
        "seedFile",
        "resolve",
        "reject",
        "access",
        "F_OK",
        "err",
        "seedFn",
        "require",
        "default",
        "e",
        "code",
        "close",
        "run",
        "catch",
        "exit"
      ],
      "mappings": ";;;+BAWA,aAAqB;AACnBA,SAAK,MAAM,qBAAYC,OAAZ,CAAoBC,QAAQC,GAAR,CAAYC,WAAhC,EAA6C,EAAEC,gBAAgBC,OAAlB,EAA7C,CAAX;;AAEAC,YAAQC,GAAR,CAAa,kBAAb;;AAEA,UAAMC,WAAW,eAAKC,OAAL,CAAa,uBAAb,CAAjB;AACA,QAAI;AACF,YAAM,IAAIJ,OAAJ,CAAY,UAACI,OAAD,EAAUC,MAAV,EAAqB;AACrC,qBAAGC,MAAH,CAAUH,QAAV,EAAoB,aAAGI,IAAvB,EAA6B,eAAO;AAClC,cAAIC,GAAJ,EAASH,OAAOG,GAAP,EAAT,KACKJ;AACN,SAHD;AAID,OALK,CAAN;;AAOA;AACA,YAAMK,SAASC,QAAQP,QAAR,EAAkBQ,OAAjC;AACA,YAAMF,OAAOf,EAAP,CAAN,CAVE,CAUgB;AACnB,KAXD,CAWE,OAAOkB,CAAP,EAAU;AACV,UAAIA,EAAEC,IAAF,KAAW,kBAAX,IAAiCD,EAAEC,IAAF,KAAW,QAAhD,EAA0D;AACxDZ,gBAAQC,GAAR,CAAa,WAAUC,QAAS,0BAAhC;AACD,OAFD,MAEO;AACLF,gBAAQC,GAAR,CAAYU,CAAZ;AACD;AACF;;AAEDX,YAAQC,GAAR,CAAY,gBAAZ;AACAR,OAAGoB,KAAH;AACD,G;;kBA3BcC,G;;;;;AAPf;;AAEA;;;;AACA;;;;;;;AANA;AACA;;AAOA,IAAIrB,EAAJ;;AA+BAqB,MAAMC,KAAN,CAAYJ,KAAK;AACfX,UAAQC,GAAR,CAAYU,CAAZ;AACAhB,UAAQqB,IAAR,CAAa,CAAb;AACD,CAHD",
      "file": "seed.js",
      "sourceRoot": "/app/scripts",
      "sourcesContent": [
        "/* @flow */\n/* eslint-disable no-await-in-loop */\n// This script scans `schema/data` folder for `schema/data/seed.js` files and run them for seeding DB.\n\nimport { MongoClient } from 'mongodb';\n\nimport path from 'path';\nimport fs from 'fs';\n\nlet db;\n\nasync function run() {\n  db = await MongoClient.connect(process.env.MONGODB_URI, { promiseLibrary: Promise });\n\n  console.log(`Starting seed...`);\n\n  const seedFile = path.resolve('./schema/data/seed.js');\n  try {\n    await new Promise((resolve, reject) => {\n      fs.access(seedFile, fs.F_OK, err => {\n        if (err) reject(err);\n        else resolve();\n      });\n    });\n\n    // $FlowFixMe\n    const seedFn = require(seedFile).default;\n    await seedFn(db); // eslint-disable-line\n  } catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND' || e.code === 'ENOENT') {\n      console.log(`  file '${seedFile}' not found. Skipping...`);\n    } else {\n      console.log(e);\n    }\n  }\n\n  console.log('Seed competed!');\n  db.close();\n}\n\nrun().catch(e => {\n  console.log(e);\n  process.exit(0);\n});"
      ]
    },
    "mtime": 1521190068267
  },
  "{\"filename\":\"/app/schema/data/seed.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/schema/data\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "fs",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "fs"
              }
            ]
          },
          {
            "source": "mongodb",
            "imported": [
              "ObjectID"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "ObjectID",
                "local": "ObjectID"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/schema/data/seed.js",
      "filenameRelative": "/app/schema/data/seed.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "seed.js",
      "sourceFileName": "seed.js",
      "sourceRoot": "/app/schema/data",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/schema/data",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "seed"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _mongodb = require('mongodb');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst collectionPrefix = 'user_';\n\nexports.default = (() => {\n  var _ref = _asyncToGenerator(function* (db) {\n    const files = ['users'];\n\n    const collectionNames = (yield db.listCollections().toArray()).map(function (o) {\n      return o.name;\n    });\n\n    return Promise.all(files.map(function (file) {\n      return _asyncToGenerator(function* () {\n        const colName = `${collectionPrefix || ''}${file}`;\n        const data = JSON.parse(_fs2.default.readFileSync(`${__dirname}/${file}.json`, 'utf8'));\n        data.forEach(function (d, i) {\n          data[i]._id = _mongodb.ObjectID.createFromHexString(data[i]._id);\n        });\n        if (collectionNames.indexOf(colName) > -1) {\n          console.log(`  '${colName}' dropped`);\n          yield db.dropCollection(colName);\n        }\n        const result = yield db.collection(colName).insertMany(data);\n        console.log(`  '${colName}' created with ${result.insertedCount} records`);\n      })();\n    }));\n  });\n\n  function seed(_x) {\n    return _ref.apply(this, arguments);\n  }\n\n  return seed;\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlZWQuanMiXSwibmFtZXMiOlsiY29sbGVjdGlvblByZWZpeCIsImRiIiwiZmlsZXMiLCJjb2xsZWN0aW9uTmFtZXMiLCJsaXN0Q29sbGVjdGlvbnMiLCJ0b0FycmF5IiwibWFwIiwibyIsIm5hbWUiLCJQcm9taXNlIiwiYWxsIiwiY29sTmFtZSIsImZpbGUiLCJkYXRhIiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiX19kaXJuYW1lIiwiZm9yRWFjaCIsImQiLCJpIiwiX2lkIiwiY3JlYXRlRnJvbUhleFN0cmluZyIsImluZGV4T2YiLCJjb25zb2xlIiwibG9nIiwiZHJvcENvbGxlY3Rpb24iLCJyZXN1bHQiLCJjb2xsZWN0aW9uIiwiaW5zZXJ0TWFueSIsImluc2VydGVkQ291bnQiLCJzZWVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQTs7OztBQUNBOzs7Ozs7QUFFQSxNQUFNQSxtQkFBbUIsT0FBekI7OzsrQkFFZSxXQUFvQkMsRUFBcEIsRUFBNkI7QUFDMUMsVUFBTUMsUUFBUSxDQUFDLE9BQUQsQ0FBZDs7QUFFQSxVQUFNQyxrQkFBa0IsQ0FBQyxNQUFNRixHQUFHRyxlQUFILEdBQXFCQyxPQUFyQixFQUFQLEVBQXVDQyxHQUF2QyxDQUEyQztBQUFBLGFBQUtDLEVBQUVDLElBQVA7QUFBQSxLQUEzQyxDQUF4Qjs7QUFFQSxXQUFPQyxRQUFRQyxHQUFSLENBQ0xSLE1BQU1JLEdBQU4sQ0FBVSxnQkFBUTtBQUNoQixhQUFPLGtCQUFDLGFBQWlCO0FBQ3ZCLGNBQU1LLFVBQVcsR0FBRVgsb0JBQW9CLEVBQUcsR0FBRVksSUFBSyxFQUFqRDtBQUNBLGNBQU1DLE9BQU9DLEtBQUtDLEtBQUwsQ0FBVyxhQUFHQyxZQUFILENBQWlCLEdBQUVDLFNBQVUsSUFBR0wsSUFBSyxPQUFyQyxFQUE2QyxNQUE3QyxDQUFYLENBQWI7QUFDQUMsYUFBS0ssT0FBTCxDQUFhLFVBQUNDLENBQUQsRUFBSUMsQ0FBSixFQUFVO0FBQ3JCUCxlQUFLTyxDQUFMLEVBQVFDLEdBQVIsR0FBYyxrQkFBU0MsbUJBQVQsQ0FBNkJULEtBQUtPLENBQUwsRUFBUUMsR0FBckMsQ0FBZDtBQUNELFNBRkQ7QUFHQSxZQUFJbEIsZ0JBQWdCb0IsT0FBaEIsQ0FBd0JaLE9BQXhCLElBQW1DLENBQUMsQ0FBeEMsRUFBMkM7QUFDekNhLGtCQUFRQyxHQUFSLENBQWEsTUFBS2QsT0FBUSxXQUExQjtBQUNBLGdCQUFNVixHQUFHeUIsY0FBSCxDQUFrQmYsT0FBbEIsQ0FBTjtBQUNEO0FBQ0QsY0FBTWdCLFNBQVMsTUFBTTFCLEdBQUcyQixVQUFILENBQWNqQixPQUFkLEVBQXVCa0IsVUFBdkIsQ0FBa0NoQixJQUFsQyxDQUFyQjtBQUNBVyxnQkFBUUMsR0FBUixDQUFhLE1BQUtkLE9BQVEsa0JBQWlCZ0IsT0FBT0csYUFBYyxVQUFoRTtBQUNELE9BWk0sR0FBUDtBQWFELEtBZEQsQ0FESyxDQUFQO0FBaUJELEc7O1dBdEI2QkMsSTs7OztTQUFBQSxJIiwiZmlsZSI6InNlZWQuanMiLCJzb3VyY2VSb290IjoiL2FwcC9zY2hlbWEvZGF0YSIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5cbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgeyBPYmplY3RJRCB9IGZyb20gJ21vbmdvZGInO1xuXG5jb25zdCBjb2xsZWN0aW9uUHJlZml4ID0gJ3VzZXJfJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gc2VlZChkYjogYW55KSB7XG4gIGNvbnN0IGZpbGVzID0gWyd1c2VycyddO1xuXG4gIGNvbnN0IGNvbGxlY3Rpb25OYW1lcyA9IChhd2FpdCBkYi5saXN0Q29sbGVjdGlvbnMoKS50b0FycmF5KCkpLm1hcChvID0+IG8ubmFtZSk7XG5cbiAgcmV0dXJuIFByb21pc2UuYWxsKFxuICAgIGZpbGVzLm1hcChmaWxlID0+IHtcbiAgICAgIHJldHVybiAoYXN5bmMgZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnN0IGNvbE5hbWUgPSBgJHtjb2xsZWN0aW9uUHJlZml4IHx8ICcnfSR7ZmlsZX1gO1xuICAgICAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShmcy5yZWFkRmlsZVN5bmMoYCR7X19kaXJuYW1lfS8ke2ZpbGV9Lmpzb25gLCAndXRmOCcpKTtcbiAgICAgICAgZGF0YS5mb3JFYWNoKChkLCBpKSA9PiB7XG4gICAgICAgICAgZGF0YVtpXS5faWQgPSBPYmplY3RJRC5jcmVhdGVGcm9tSGV4U3RyaW5nKGRhdGFbaV0uX2lkKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChjb2xsZWN0aW9uTmFtZXMuaW5kZXhPZihjb2xOYW1lKSA+IC0xKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coYCAgJyR7Y29sTmFtZX0nIGRyb3BwZWRgKTtcbiAgICAgICAgICBhd2FpdCBkYi5kcm9wQ29sbGVjdGlvbihjb2xOYW1lKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKGNvbE5hbWUpLmluc2VydE1hbnkoZGF0YSk7XG4gICAgICAgIGNvbnNvbGUubG9nKGAgICcke2NvbE5hbWV9JyBjcmVhdGVkIHdpdGggJHtyZXN1bHQuaW5zZXJ0ZWRDb3VudH0gcmVjb3Jkc2ApO1xuICAgICAgfSkoKTtcbiAgICB9KVxuICApO1xufSJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "seed.js"
      ],
      "names": [
        "collectionPrefix",
        "db",
        "files",
        "collectionNames",
        "listCollections",
        "toArray",
        "map",
        "o",
        "name",
        "Promise",
        "all",
        "colName",
        "file",
        "data",
        "JSON",
        "parse",
        "readFileSync",
        "__dirname",
        "forEach",
        "d",
        "i",
        "_id",
        "createFromHexString",
        "indexOf",
        "console",
        "log",
        "dropCollection",
        "result",
        "collection",
        "insertMany",
        "insertedCount",
        "seed"
      ],
      "mappings": ";;;;;;AAEA;;;;AACA;;;;;;AAEA,MAAMA,mBAAmB,OAAzB;;;+BAEe,WAAoBC,EAApB,EAA6B;AAC1C,UAAMC,QAAQ,CAAC,OAAD,CAAd;;AAEA,UAAMC,kBAAkB,CAAC,MAAMF,GAAGG,eAAH,GAAqBC,OAArB,EAAP,EAAuCC,GAAvC,CAA2C;AAAA,aAAKC,EAAEC,IAAP;AAAA,KAA3C,CAAxB;;AAEA,WAAOC,QAAQC,GAAR,CACLR,MAAMI,GAAN,CAAU,gBAAQ;AAChB,aAAO,kBAAC,aAAiB;AACvB,cAAMK,UAAW,GAAEX,oBAAoB,EAAG,GAAEY,IAAK,EAAjD;AACA,cAAMC,OAAOC,KAAKC,KAAL,CAAW,aAAGC,YAAH,CAAiB,GAAEC,SAAU,IAAGL,IAAK,OAArC,EAA6C,MAA7C,CAAX,CAAb;AACAC,aAAKK,OAAL,CAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACrBP,eAAKO,CAAL,EAAQC,GAAR,GAAc,kBAASC,mBAAT,CAA6BT,KAAKO,CAAL,EAAQC,GAArC,CAAd;AACD,SAFD;AAGA,YAAIlB,gBAAgBoB,OAAhB,CAAwBZ,OAAxB,IAAmC,CAAC,CAAxC,EAA2C;AACzCa,kBAAQC,GAAR,CAAa,MAAKd,OAAQ,WAA1B;AACA,gBAAMV,GAAGyB,cAAH,CAAkBf,OAAlB,CAAN;AACD;AACD,cAAMgB,SAAS,MAAM1B,GAAG2B,UAAH,CAAcjB,OAAd,EAAuBkB,UAAvB,CAAkChB,IAAlC,CAArB;AACAW,gBAAQC,GAAR,CAAa,MAAKd,OAAQ,kBAAiBgB,OAAOG,aAAc,UAAhE;AACD,OAZM,GAAP;AAaD,KAdD,CADK,CAAP;AAiBD,G;;WAtB6BC,I;;;;SAAAA,I",
      "file": "seed.js",
      "sourceRoot": "/app/schema/data",
      "sourcesContent": [
        "/* @flow */\n\nimport fs from 'fs';\nimport { ObjectID } from 'mongodb';\n\nconst collectionPrefix = 'user_';\n\nexport default async function seed(db: any) {\n  const files = ['users'];\n\n  const collectionNames = (await db.listCollections().toArray()).map(o => o.name);\n\n  return Promise.all(\n    files.map(file => {\n      return (async function() {\n        const colName = `${collectionPrefix || ''}${file}`;\n        const data = JSON.parse(fs.readFileSync(`${__dirname}/${file}.json`, 'utf8'));\n        data.forEach((d, i) => {\n          data[i]._id = ObjectID.createFromHexString(data[i]._id);\n        });\n        if (collectionNames.indexOf(colName) > -1) {\n          console.log(`  '${colName}' dropped`);\n          await db.dropCollection(colName);\n        }\n        const result = await db.collection(colName).insertMany(data);\n        console.log(`  '${colName}' created with ${result.insertedCount} records`);\n      })();\n    })\n  );\n}"
      ]
    },
    "mtime": 1521190125597
  },
  "{\"filename\":\"/app/server.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "body-parser",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "bodyParser"
              }
            ]
          },
          {
            "source": "cors",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "cors"
              }
            ]
          },
          {
            "source": "cookie-parser",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "cookieParser"
              }
            ]
          },
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          },
          {
            "source": "graphql-playground-middleware-express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "expressPlayground"
              }
            ]
          },
          {
            "source": "apollo-server-express",
            "imported": [
              "graphqlExpress",
              "graphiqlExpress"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "graphqlExpress",
                "local": "graphqlExpress"
              },
              {
                "kind": "named",
                "imported": "graphiqlExpress",
                "local": "graphiqlExpress"
              }
            ]
          },
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "./schema",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "lifescopeSchema"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server.js",
      "filenameRelative": "/app/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _bodyParser = require('body-parser');\n\nvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\nvar _cors = require('cors');\n\nvar _cors2 = _interopRequireDefault(_cors);\n\nvar _cookieParser = require('cookie-parser');\n\nvar _cookieParser2 = _interopRequireDefault(_cookieParser);\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _graphqlPlaygroundMiddlewareExpress = require('graphql-playground-middleware-express');\n\nvar _graphqlPlaygroundMiddlewareExpress2 = _interopRequireDefault(_graphqlPlaygroundMiddlewareExpress);\n\nvar _apolloServerExpress = require('apollo-server-express');\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _schema = require('./schema');\n\nvar _schema2 = _interopRequireDefault(_schema);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nconst server = (0, _express2.default)();\nconst opts = {\n  autoReconnect: true,\n  reconnectTries: Number.MAX_VALUE,\n  reconnectInterval: 1000\n};\n\nserver.use((0, _cors2.default)());\n\n_mongoose2.default.connect(MONGODB_URI, opts);\n\nconst mongooseConnect = _mongoose2.default.connection;\n\nmongooseConnect.on('error', e => {\n  if (e.message.code === 'ETIMEDOUT') {\n    console.log(e);\n    _mongoose2.default.connect(MONGODB_URI, opts);\n  }\n  console.log(e);\n});\n\nmongooseConnect.once('open', () => {\n  console.log(`MongoDB successfully connected to ${MONGODB_URI}`);\n});\n\nserver.use(_schema2.default.uri, _bodyParser2.default.json(), (0, _apolloServerExpress.graphqlExpress)({\n  schema: _schema2.default.schema,\n  tracing: true,\n  // formatError: error => ({\n  //   message: error.message,\n  //   stack: !error.message.match(/for security reason/i) ? error.stack.split('\\n') : null,\n  // }),\n  formatError: error => ({\n    message: error.message,\n    locations: error.locations,\n    stack: error.stack ? error.stack.split('\\n') : [],\n    path: error.path\n  })\n}));\n\n// http://localhost:3000/gql-i/\nserver.get(`${_schema2.default.uri}-i`, (0, _apolloServerExpress.graphiqlExpress)({ endpointURL: _schema2.default.uri }));\n\n// http://localhost:3000/gql-p/\nserver.get(`${_schema2.default.uri}-p`, (0, _graphqlPlaygroundMiddlewareExpress2.default)({ endpoint: _schema2.default.uri }));\n\n// http://localhost:3000/user/\nserver.listen(process.env.PORT);\n\nconsole.log('PORT: ' + process.env.PORT);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJNT05HT0RCX1VSSSIsInByb2Nlc3MiLCJlbnYiLCJzZXJ2ZXIiLCJvcHRzIiwiYXV0b1JlY29ubmVjdCIsInJlY29ubmVjdFRyaWVzIiwiTnVtYmVyIiwiTUFYX1ZBTFVFIiwicmVjb25uZWN0SW50ZXJ2YWwiLCJ1c2UiLCJjb25uZWN0IiwibW9uZ29vc2VDb25uZWN0IiwiY29ubmVjdGlvbiIsIm9uIiwiZSIsIm1lc3NhZ2UiLCJjb2RlIiwiY29uc29sZSIsImxvZyIsIm9uY2UiLCJ1cmkiLCJqc29uIiwic2NoZW1hIiwidHJhY2luZyIsImZvcm1hdEVycm9yIiwiZXJyb3IiLCJsb2NhdGlvbnMiLCJzdGFjayIsInNwbGl0IiwicGF0aCIsImdldCIsImVuZHBvaW50VVJMIiwiZW5kcG9pbnQiLCJsaXN0ZW4iLCJQT1JUIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7OztBQUVBOzs7Ozs7QUFFQSxNQUFNQSxjQUFjQyxRQUFRQyxHQUFSLENBQVlGLFdBQWhDOztBQUVBLE1BQU1HLFNBQVMsd0JBQWY7QUFDQSxNQUFNQyxPQUFPO0FBQ1hDLGlCQUFlLElBREo7QUFFWEMsa0JBQWdCQyxPQUFPQyxTQUZaO0FBR1hDLHFCQUFtQjtBQUhSLENBQWI7O0FBTUFOLE9BQU9PLEdBQVAsQ0FBVyxxQkFBWDs7QUFFQSxtQkFBU0MsT0FBVCxDQUFpQlgsV0FBakIsRUFBOEJJLElBQTlCOztBQUVBLE1BQU1RLGtCQUFrQixtQkFBU0MsVUFBakM7O0FBRUFELGdCQUFnQkUsRUFBaEIsQ0FBbUIsT0FBbkIsRUFBNEJDLEtBQUs7QUFDL0IsTUFBSUEsRUFBRUMsT0FBRixDQUFVQyxJQUFWLEtBQW1CLFdBQXZCLEVBQW9DO0FBQ2xDQyxZQUFRQyxHQUFSLENBQVlKLENBQVo7QUFDQSx1QkFBU0osT0FBVCxDQUFpQlgsV0FBakIsRUFBOEJJLElBQTlCO0FBQ0Q7QUFDRGMsVUFBUUMsR0FBUixDQUFZSixDQUFaO0FBQ0QsQ0FORDs7QUFRQUgsZ0JBQWdCUSxJQUFoQixDQUFxQixNQUFyQixFQUE2QixNQUFNO0FBQ2pDRixVQUFRQyxHQUFSLENBQWEscUNBQW9DbkIsV0FBWSxFQUE3RDtBQUNELENBRkQ7O0FBSUFHLE9BQU9PLEdBQVAsQ0FDRSxpQkFBZ0JXLEdBRGxCLEVBRUUscUJBQVdDLElBQVgsRUFGRixFQUdFLHlDQUFlO0FBQ2JDLFVBQVEsaUJBQWdCQSxNQURYO0FBRWJDLFdBQVMsSUFGSTtBQUdiO0FBQ0E7QUFDQTtBQUNBO0FBQ0FDLGVBQWFDLFVBQVU7QUFDckJWLGFBQVNVLE1BQU1WLE9BRE07QUFFckJXLGVBQVdELE1BQU1DLFNBRkk7QUFHckJDLFdBQU9GLE1BQU1FLEtBQU4sR0FBY0YsTUFBTUUsS0FBTixDQUFZQyxLQUFaLENBQWtCLElBQWxCLENBQWQsR0FBd0MsRUFIMUI7QUFJckJDLFVBQU1KLE1BQU1JO0FBSlMsR0FBVjtBQVBBLENBQWYsQ0FIRjs7QUFrQkE7QUFDQTNCLE9BQU80QixHQUFQLENBQVksR0FBRSxpQkFBZ0JWLEdBQUksSUFBbEMsRUFBdUMsMENBQWdCLEVBQUVXLGFBQWEsaUJBQWdCWCxHQUEvQixFQUFoQixDQUF2Qzs7QUFFQTtBQUNBbEIsT0FBTzRCLEdBQVAsQ0FBWSxHQUFFLGlCQUFnQlYsR0FBSSxJQUFsQyxFQUF1QyxrREFBa0IsRUFBRVksVUFBVSxpQkFBZ0JaLEdBQTVCLEVBQWxCLENBQXZDOztBQUVBO0FBQ0FsQixPQUFPK0IsTUFBUCxDQUFjakMsUUFBUUMsR0FBUixDQUFZaUMsSUFBMUI7O0FBRUFqQixRQUFRQyxHQUFSLENBQVksV0FBV2xCLFFBQVFDLEdBQVIsQ0FBWWlDLElBQW5DIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gJ2Nvb2tpZS1wYXJzZXInO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgZXhwcmVzc1BsYXlncm91bmQgZnJvbSAnZ3JhcGhxbC1wbGF5Z3JvdW5kLW1pZGRsZXdhcmUtZXhwcmVzcyc7XG5pbXBvcnQgeyBncmFwaHFsRXhwcmVzcywgZ3JhcGhpcWxFeHByZXNzIH0gZnJvbSAnYXBvbGxvLXNlcnZlci1leHByZXNzJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmltcG9ydCBsaWZlc2NvcGVTY2hlbWEgZnJvbSAnLi9zY2hlbWEnO1xuXG5jb25zdCBNT05HT0RCX1VSSSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJO1xuXG5jb25zdCBzZXJ2ZXIgPSBleHByZXNzKCk7XG5jb25zdCBvcHRzID0ge1xuICBhdXRvUmVjb25uZWN0OiB0cnVlLFxuICByZWNvbm5lY3RUcmllczogTnVtYmVyLk1BWF9WQUxVRSxcbiAgcmVjb25uZWN0SW50ZXJ2YWw6IDEwMDAsXG59O1xuXG5zZXJ2ZXIudXNlKGNvcnMoKSk7XG5cbm1vbmdvb3NlLmNvbm5lY3QoTU9OR09EQl9VUkksIG9wdHMpO1xuXG5jb25zdCBtb25nb29zZUNvbm5lY3QgPSBtb25nb29zZS5jb25uZWN0aW9uO1xuXG5tb25nb29zZUNvbm5lY3Qub24oJ2Vycm9yJywgZSA9PiB7XG4gIGlmIChlLm1lc3NhZ2UuY29kZSA9PT0gJ0VUSU1FRE9VVCcpIHtcbiAgICBjb25zb2xlLmxvZyhlKTtcbiAgICBtb25nb29zZS5jb25uZWN0KE1PTkdPREJfVVJJLCBvcHRzKTtcbiAgfVxuICBjb25zb2xlLmxvZyhlKTtcbn0pO1xuXG5tb25nb29zZUNvbm5lY3Qub25jZSgnb3BlbicsICgpID0+IHtcbiAgY29uc29sZS5sb2coYE1vbmdvREIgc3VjY2Vzc2Z1bGx5IGNvbm5lY3RlZCB0byAke01PTkdPREJfVVJJfWApO1xufSk7XG5cbnNlcnZlci51c2UoXG4gIGxpZmVzY29wZVNjaGVtYS51cmksIFxuICBib2R5UGFyc2VyLmpzb24oKSwgXG4gIGdyYXBocWxFeHByZXNzKHsgXG4gICAgc2NoZW1hOiBsaWZlc2NvcGVTY2hlbWEuc2NoZW1hLCBcbiAgICB0cmFjaW5nOiB0cnVlLFxuICAgIC8vIGZvcm1hdEVycm9yOiBlcnJvciA9PiAoe1xuICAgIC8vICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSxcbiAgICAvLyAgIHN0YWNrOiAhZXJyb3IubWVzc2FnZS5tYXRjaCgvZm9yIHNlY3VyaXR5IHJlYXNvbi9pKSA/IGVycm9yLnN0YWNrLnNwbGl0KCdcXG4nKSA6IG51bGwsXG4gICAgLy8gfSksXG4gICAgZm9ybWF0RXJyb3I6IGVycm9yID0+ICh7XG4gICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxuICAgICAgbG9jYXRpb25zOiBlcnJvci5sb2NhdGlvbnMsXG4gICAgICBzdGFjazogZXJyb3Iuc3RhY2sgPyBlcnJvci5zdGFjay5zcGxpdCgnXFxuJykgOiBbXSxcbiAgICAgIHBhdGg6IGVycm9yLnBhdGhcbiAgICB9KVxuICB9KSk7XG5cbi8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9ncWwtaS9cbnNlcnZlci5nZXQoYCR7bGlmZXNjb3BlU2NoZW1hLnVyaX0taWAsIGdyYXBoaXFsRXhwcmVzcyh7IGVuZHBvaW50VVJMOiBsaWZlc2NvcGVTY2hlbWEudXJpIH0pKTtcblxuLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL2dxbC1wL1xuc2VydmVyLmdldChgJHtsaWZlc2NvcGVTY2hlbWEudXJpfS1wYCwgZXhwcmVzc1BsYXlncm91bmQoeyBlbmRwb2ludDogbGlmZXNjb3BlU2NoZW1hLnVyaSB9KSk7XG5cbi8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c2VyL1xuc2VydmVyLmxpc3Rlbihwcm9jZXNzLmVudi5QT1JUKTtcblxuY29uc29sZS5sb2coJ1BPUlQ6ICcgKyBwcm9jZXNzLmVudi5QT1JUKTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "MONGODB_URI",
        "process",
        "env",
        "server",
        "opts",
        "autoReconnect",
        "reconnectTries",
        "Number",
        "MAX_VALUE",
        "reconnectInterval",
        "use",
        "connect",
        "mongooseConnect",
        "connection",
        "on",
        "e",
        "message",
        "code",
        "console",
        "log",
        "once",
        "uri",
        "json",
        "schema",
        "tracing",
        "formatError",
        "error",
        "locations",
        "stack",
        "split",
        "path",
        "get",
        "endpointURL",
        "endpoint",
        "listen",
        "PORT"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;;;;;AAEA,MAAMA,cAAcC,QAAQC,GAAR,CAAYF,WAAhC;;AAEA,MAAMG,SAAS,wBAAf;AACA,MAAMC,OAAO;AACXC,iBAAe,IADJ;AAEXC,kBAAgBC,OAAOC,SAFZ;AAGXC,qBAAmB;AAHR,CAAb;;AAMAN,OAAOO,GAAP,CAAW,qBAAX;;AAEA,mBAASC,OAAT,CAAiBX,WAAjB,EAA8BI,IAA9B;;AAEA,MAAMQ,kBAAkB,mBAASC,UAAjC;;AAEAD,gBAAgBE,EAAhB,CAAmB,OAAnB,EAA4BC,KAAK;AAC/B,MAAIA,EAAEC,OAAF,CAAUC,IAAV,KAAmB,WAAvB,EAAoC;AAClCC,YAAQC,GAAR,CAAYJ,CAAZ;AACA,uBAASJ,OAAT,CAAiBX,WAAjB,EAA8BI,IAA9B;AACD;AACDc,UAAQC,GAAR,CAAYJ,CAAZ;AACD,CAND;;AAQAH,gBAAgBQ,IAAhB,CAAqB,MAArB,EAA6B,MAAM;AACjCF,UAAQC,GAAR,CAAa,qCAAoCnB,WAAY,EAA7D;AACD,CAFD;;AAIAG,OAAOO,GAAP,CACE,iBAAgBW,GADlB,EAEE,qBAAWC,IAAX,EAFF,EAGE,yCAAe;AACbC,UAAQ,iBAAgBA,MADX;AAEbC,WAAS,IAFI;AAGb;AACA;AACA;AACA;AACAC,eAAaC,UAAU;AACrBV,aAASU,MAAMV,OADM;AAErBW,eAAWD,MAAMC,SAFI;AAGrBC,WAAOF,MAAME,KAAN,GAAcF,MAAME,KAAN,CAAYC,KAAZ,CAAkB,IAAlB,CAAd,GAAwC,EAH1B;AAIrBC,UAAMJ,MAAMI;AAJS,GAAV;AAPA,CAAf,CAHF;;AAkBA;AACA3B,OAAO4B,GAAP,CAAY,GAAE,iBAAgBV,GAAI,IAAlC,EAAuC,0CAAgB,EAAEW,aAAa,iBAAgBX,GAA/B,EAAhB,CAAvC;;AAEA;AACAlB,OAAO4B,GAAP,CAAY,GAAE,iBAAgBV,GAAI,IAAlC,EAAuC,kDAAkB,EAAEY,UAAU,iBAAgBZ,GAA5B,EAAlB,CAAvC;;AAEA;AACAlB,OAAO+B,MAAP,CAAcjC,QAAQC,GAAR,CAAYiC,IAA1B;;AAEAjB,QAAQC,GAAR,CAAY,WAAWlB,QAAQC,GAAR,CAAYiC,IAAnC",
      "file": "server.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "import bodyParser from 'body-parser';\nimport cors from 'cors';\nimport cookieParser from 'cookie-parser';\nimport express from 'express';\nimport expressPlayground from 'graphql-playground-middleware-express';\nimport { graphqlExpress, graphiqlExpress } from 'apollo-server-express';\nimport mongoose from 'mongoose';\n\nimport lifescopeSchema from './schema';\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nconst server = express();\nconst opts = {\n  autoReconnect: true,\n  reconnectTries: Number.MAX_VALUE,\n  reconnectInterval: 1000,\n};\n\nserver.use(cors());\n\nmongoose.connect(MONGODB_URI, opts);\n\nconst mongooseConnect = mongoose.connection;\n\nmongooseConnect.on('error', e => {\n  if (e.message.code === 'ETIMEDOUT') {\n    console.log(e);\n    mongoose.connect(MONGODB_URI, opts);\n  }\n  console.log(e);\n});\n\nmongooseConnect.once('open', () => {\n  console.log(`MongoDB successfully connected to ${MONGODB_URI}`);\n});\n\nserver.use(\n  lifescopeSchema.uri, \n  bodyParser.json(), \n  graphqlExpress({ \n    schema: lifescopeSchema.schema, \n    tracing: true,\n    // formatError: error => ({\n    //   message: error.message,\n    //   stack: !error.message.match(/for security reason/i) ? error.stack.split('\\n') : null,\n    // }),\n    formatError: error => ({\n      message: error.message,\n      locations: error.locations,\n      stack: error.stack ? error.stack.split('\\n') : [],\n      path: error.path\n    })\n  }));\n\n// http://localhost:3000/gql-i/\nserver.get(`${lifescopeSchema.uri}-i`, graphiqlExpress({ endpointURL: lifescopeSchema.uri }));\n\n// http://localhost:3000/gql-p/\nserver.get(`${lifescopeSchema.uri}-p`, expressPlayground({ endpoint: lifescopeSchema.uri }));\n\n// http://localhost:3000/user/\nserver.listen(process.env.PORT);\n\nconsole.log('PORT: ' + process.env.PORT);\n"
      ]
    },
    "mtime": 1521433748693
  },
  "{\"filename\":\"/app/schema/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/schema\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./schema",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "schema"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/schema/index.js",
      "filenameRelative": "/app/schema/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/schema",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/schema",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _schema = require('./schema');\n\nvar _schema2 = _interopRequireDefault(_schema);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst queries = [{\n  title: 'Find by id',\n  query: `\n{\n  userById(_id: \"57bb44dd21d2befb7ca3f010\") {\n    _id\n    name\n    languages {\n      language\n      skill\n    }\n    contacts {\n      email\n    }\n    gender\n    age\n  }\n}\n      `\n}, {\n  title: 'Find one User',\n  query: `\n{\n  userOne(filter: { age: 18 }, sort: _ID_ASC) {\n    name\n    languages {\n      language\n      skill\n    }\n    contacts {\n      email\n    }\n    gender\n    age\n  }\n}\n      `\n}, {\n  title: 'Find many Users',\n  query: `\n{\n  userMany(filter: { gender: male }, limit: 5, sort: _ID_ASC) {\n    name\n    languages {\n      language\n      skill\n    }\n    contacts {\n      email\n    }\n    gender\n    age\n  }\n}\n      `\n}, {\n  title: 'Find many Users (by geo distance)',\n  query: `\n{\n  distance_5_km: userMany(filter: {\n    geoDistance: {\n      lng: 76.911982,\n      lat: 43.233893,\n      distance: 5000,\n    }\n  }) {\n    name\n    address {\n      geo\n    }\n  }\n  distance_100_km: userMany(filter: {\n    geoDistance: {\n      lng: 76.911982,\n      lat: 43.233893,\n      distance: 100000,\n    }\n  }) {\n    name\n    address {\n      geo\n    }\n  }\n}\n      `\n}, {\n  title: 'Find User with field of MIXED type',\n  query: `\n{\n  userById(_id: \"57bb44dd21d2befb7ca3f001\") {\n    _id\n    name\n    someMixed\n  }\n}\n      `\n}, {\n  title: 'Create user mutation (with arg of MIXED type)',\n  query: `\nmutation {\n  userCreate(record: {\n    name: \"My Name\",\n    age: 24,\n    gender: ladyboy,\n    contacts: {\n      email: \"mail@example.com\",\n      phones: [\n        \"111-222-333-444\",\n        \"444-555-666-777\"\n      ]\n    },\n    someMixed: {\n      a: 1,\n      b: 2,\n      c: [ 1, 2, 3, true, false, { sub: 1 }]\n    }\n  }) {\n    recordId\n    record {\n      name\n      age\n      gender\n      contacts {\n        email\n        phones\n      }\n      someMixed\n    }\n  }\n}\n      `\n}, {\n  title: 'Pagination',\n  query: `\n{\n  userPagination(filter: { gender: male }, perPage: 2, page: 2, sort: _ID_ASC) {\n    items {\n      name\n      languages {\n        language\n        skill\n      }\n      contacts {\n        email\n      }\n      gender\n      age\n    }\n    count\n    pageInfo {\n      currentPage\n      perPage\n      itemCount\n      pageCount\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n}\n      `\n}];\n\nexports.default = {\n  uri: '/gql',\n  schema: _schema2.default,\n  title: 'LifeScope GraphQL API',\n  description: 'This schema implements all data collected, organized, and analyzed by the LifeScope platform',\n  github: 'https://github.com/bitscooplabs/lifescope',\n  queries: queries\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInF1ZXJpZXMiLCJ0aXRsZSIsInF1ZXJ5IiwidXJpIiwic2NoZW1hIiwiZGVzY3JpcHRpb24iLCJnaXRodWIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBOzs7Ozs7QUFFQSxNQUFNQSxVQUFVLENBQ1o7QUFDRUMsU0FBTyxZQURUO0FBRUVDLFNBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRlYsQ0FEWSxFQXFCWjtBQUNFRCxTQUFPLGVBRFQ7QUFFRUMsU0FBUTs7Ozs7Ozs7Ozs7Ozs7OztBQUZWLENBckJZLEVBd0NaO0FBQ0VELFNBQU8saUJBRFQ7QUFFRUMsU0FBUTs7Ozs7Ozs7Ozs7Ozs7OztBQUZWLENBeENZLEVBMkRaO0FBQ0VELFNBQU8sbUNBRFQ7QUFFRUMsU0FBUTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUZWLENBM0RZLEVBMEZaO0FBQ0VELFNBQU8sb0NBRFQ7QUFFRUMsU0FBUTs7Ozs7Ozs7O0FBRlYsQ0ExRlksRUFzR1o7QUFDRUQsU0FBTywrQ0FEVDtBQUVFQyxTQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFGVixDQXRHWSxFQTBJWjtBQUNFRCxTQUFPLFlBRFQ7QUFFRUMsU0FBUTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRlYsQ0ExSVksQ0FBaEI7O2tCQTJLZTtBQUNiQyxPQUFLLE1BRFE7QUFFYkMsMEJBRmE7QUFHYkgsU0FBTyx1QkFITTtBQUliSSxlQUNFLDhGQUxXO0FBTWJDLFVBQVEsMkNBTks7QUFPYk4sV0FBU0E7QUFQSSxDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2NoZW1hIiwic291cmNlc0NvbnRlbnQiOlsiLyogQGZsb3cgKi9cblxuaW1wb3J0IHNjaGVtYSBmcm9tICcuL3NjaGVtYSc7XG5cbmNvbnN0IHF1ZXJpZXMgPSBbXG4gICAge1xuICAgICAgdGl0bGU6ICdGaW5kIGJ5IGlkJyxcbiAgICAgIHF1ZXJ5OiBgXG57XG4gIHVzZXJCeUlkKF9pZDogXCI1N2JiNDRkZDIxZDJiZWZiN2NhM2YwMTBcIikge1xuICAgIF9pZFxuICAgIG5hbWVcbiAgICBsYW5ndWFnZXMge1xuICAgICAgbGFuZ3VhZ2VcbiAgICAgIHNraWxsXG4gICAgfVxuICAgIGNvbnRhY3RzIHtcbiAgICAgIGVtYWlsXG4gICAgfVxuICAgIGdlbmRlclxuICAgIGFnZVxuICB9XG59XG4gICAgICBgLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdGaW5kIG9uZSBVc2VyJyxcbiAgICAgIHF1ZXJ5OiBgXG57XG4gIHVzZXJPbmUoZmlsdGVyOiB7IGFnZTogMTggfSwgc29ydDogX0lEX0FTQykge1xuICAgIG5hbWVcbiAgICBsYW5ndWFnZXMge1xuICAgICAgbGFuZ3VhZ2VcbiAgICAgIHNraWxsXG4gICAgfVxuICAgIGNvbnRhY3RzIHtcbiAgICAgIGVtYWlsXG4gICAgfVxuICAgIGdlbmRlclxuICAgIGFnZVxuICB9XG59XG4gICAgICBgLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdGaW5kIG1hbnkgVXNlcnMnLFxuICAgICAgcXVlcnk6IGBcbntcbiAgdXNlck1hbnkoZmlsdGVyOiB7IGdlbmRlcjogbWFsZSB9LCBsaW1pdDogNSwgc29ydDogX0lEX0FTQykge1xuICAgIG5hbWVcbiAgICBsYW5ndWFnZXMge1xuICAgICAgbGFuZ3VhZ2VcbiAgICAgIHNraWxsXG4gICAgfVxuICAgIGNvbnRhY3RzIHtcbiAgICAgIGVtYWlsXG4gICAgfVxuICAgIGdlbmRlclxuICAgIGFnZVxuICB9XG59XG4gICAgICBgLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdGaW5kIG1hbnkgVXNlcnMgKGJ5IGdlbyBkaXN0YW5jZSknLFxuICAgICAgcXVlcnk6IGBcbntcbiAgZGlzdGFuY2VfNV9rbTogdXNlck1hbnkoZmlsdGVyOiB7XG4gICAgZ2VvRGlzdGFuY2U6IHtcbiAgICAgIGxuZzogNzYuOTExOTgyLFxuICAgICAgbGF0OiA0My4yMzM4OTMsXG4gICAgICBkaXN0YW5jZTogNTAwMCxcbiAgICB9XG4gIH0pIHtcbiAgICBuYW1lXG4gICAgYWRkcmVzcyB7XG4gICAgICBnZW9cbiAgICB9XG4gIH1cbiAgZGlzdGFuY2VfMTAwX2ttOiB1c2VyTWFueShmaWx0ZXI6IHtcbiAgICBnZW9EaXN0YW5jZToge1xuICAgICAgbG5nOiA3Ni45MTE5ODIsXG4gICAgICBsYXQ6IDQzLjIzMzg5MyxcbiAgICAgIGRpc3RhbmNlOiAxMDAwMDAsXG4gICAgfVxuICB9KSB7XG4gICAgbmFtZVxuICAgIGFkZHJlc3Mge1xuICAgICAgZ2VvXG4gICAgfVxuICB9XG59XG4gICAgICBgLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdGaW5kIFVzZXIgd2l0aCBmaWVsZCBvZiBNSVhFRCB0eXBlJyxcbiAgICAgIHF1ZXJ5OiBgXG57XG4gIHVzZXJCeUlkKF9pZDogXCI1N2JiNDRkZDIxZDJiZWZiN2NhM2YwMDFcIikge1xuICAgIF9pZFxuICAgIG5hbWVcbiAgICBzb21lTWl4ZWRcbiAgfVxufVxuICAgICAgYCxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnQ3JlYXRlIHVzZXIgbXV0YXRpb24gKHdpdGggYXJnIG9mIE1JWEVEIHR5cGUpJyxcbiAgICAgIHF1ZXJ5OiBgXG5tdXRhdGlvbiB7XG4gIHVzZXJDcmVhdGUocmVjb3JkOiB7XG4gICAgbmFtZTogXCJNeSBOYW1lXCIsXG4gICAgYWdlOiAyNCxcbiAgICBnZW5kZXI6IGxhZHlib3ksXG4gICAgY29udGFjdHM6IHtcbiAgICAgIGVtYWlsOiBcIm1haWxAZXhhbXBsZS5jb21cIixcbiAgICAgIHBob25lczogW1xuICAgICAgICBcIjExMS0yMjItMzMzLTQ0NFwiLFxuICAgICAgICBcIjQ0NC01NTUtNjY2LTc3N1wiXG4gICAgICBdXG4gICAgfSxcbiAgICBzb21lTWl4ZWQ6IHtcbiAgICAgIGE6IDEsXG4gICAgICBiOiAyLFxuICAgICAgYzogWyAxLCAyLCAzLCB0cnVlLCBmYWxzZSwgeyBzdWI6IDEgfV1cbiAgICB9XG4gIH0pIHtcbiAgICByZWNvcmRJZFxuICAgIHJlY29yZCB7XG4gICAgICBuYW1lXG4gICAgICBhZ2VcbiAgICAgIGdlbmRlclxuICAgICAgY29udGFjdHMge1xuICAgICAgICBlbWFpbFxuICAgICAgICBwaG9uZXNcbiAgICAgIH1cbiAgICAgIHNvbWVNaXhlZFxuICAgIH1cbiAgfVxufVxuICAgICAgYCxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnUGFnaW5hdGlvbicsXG4gICAgICBxdWVyeTogYFxue1xuICB1c2VyUGFnaW5hdGlvbihmaWx0ZXI6IHsgZ2VuZGVyOiBtYWxlIH0sIHBlclBhZ2U6IDIsIHBhZ2U6IDIsIHNvcnQ6IF9JRF9BU0MpIHtcbiAgICBpdGVtcyB7XG4gICAgICBuYW1lXG4gICAgICBsYW5ndWFnZXMge1xuICAgICAgICBsYW5ndWFnZVxuICAgICAgICBza2lsbFxuICAgICAgfVxuICAgICAgY29udGFjdHMge1xuICAgICAgICBlbWFpbFxuICAgICAgfVxuICAgICAgZ2VuZGVyXG4gICAgICBhZ2VcbiAgICB9XG4gICAgY291bnRcbiAgICBwYWdlSW5mbyB7XG4gICAgICBjdXJyZW50UGFnZVxuICAgICAgcGVyUGFnZVxuICAgICAgaXRlbUNvdW50XG4gICAgICBwYWdlQ291bnRcbiAgICAgIGhhc1ByZXZpb3VzUGFnZVxuICAgICAgaGFzTmV4dFBhZ2VcbiAgICB9XG4gIH1cbn1cbiAgICAgIGAsXG4gICAgfSxcbiAgXVxuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdXJpOiAnL2dxbCcsXG4gIHNjaGVtYSxcbiAgdGl0bGU6ICdMaWZlU2NvcGUgR3JhcGhRTCBBUEknLFxuICBkZXNjcmlwdGlvbjpcbiAgICAnVGhpcyBzY2hlbWEgaW1wbGVtZW50cyBhbGwgZGF0YSBjb2xsZWN0ZWQsIG9yZ2FuaXplZCwgYW5kIGFuYWx5emVkIGJ5IHRoZSBMaWZlU2NvcGUgcGxhdGZvcm0nLFxuICBnaXRodWI6ICdodHRwczovL2dpdGh1Yi5jb20vYml0c2Nvb3BsYWJzL2xpZmVzY29wZScsXG4gIHF1ZXJpZXM6IHF1ZXJpZXMsXG59OyJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "queries",
        "title",
        "query",
        "uri",
        "schema",
        "description",
        "github"
      ],
      "mappings": ";;;;;;AAEA;;;;;;AAEA,MAAMA,UAAU,CACZ;AACEC,SAAO,YADT;AAEEC,SAAQ;;;;;;;;;;;;;;;;;AAFV,CADY,EAqBZ;AACED,SAAO,eADT;AAEEC,SAAQ;;;;;;;;;;;;;;;;AAFV,CArBY,EAwCZ;AACED,SAAO,iBADT;AAEEC,SAAQ;;;;;;;;;;;;;;;;AAFV,CAxCY,EA2DZ;AACED,SAAO,mCADT;AAEEC,SAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFV,CA3DY,EA0FZ;AACED,SAAO,oCADT;AAEEC,SAAQ;;;;;;;;;AAFV,CA1FY,EAsGZ;AACED,SAAO,+CADT;AAEEC,SAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFV,CAtGY,EA0IZ;AACED,SAAO,YADT;AAEEC,SAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFV,CA1IY,CAAhB;;kBA2Ke;AACbC,OAAK,MADQ;AAEbC,0BAFa;AAGbH,SAAO,uBAHM;AAIbI,eACE,8FALW;AAMbC,UAAQ,2CANK;AAObN,WAASA;AAPI,C",
      "file": "index.js",
      "sourceRoot": "/app/schema",
      "sourcesContent": [
        "/* @flow */\n\nimport schema from './schema';\n\nconst queries = [\n    {\n      title: 'Find by id',\n      query: `\n{\n  userById(_id: \"57bb44dd21d2befb7ca3f010\") {\n    _id\n    name\n    languages {\n      language\n      skill\n    }\n    contacts {\n      email\n    }\n    gender\n    age\n  }\n}\n      `,\n    },\n    {\n      title: 'Find one User',\n      query: `\n{\n  userOne(filter: { age: 18 }, sort: _ID_ASC) {\n    name\n    languages {\n      language\n      skill\n    }\n    contacts {\n      email\n    }\n    gender\n    age\n  }\n}\n      `,\n    },\n    {\n      title: 'Find many Users',\n      query: `\n{\n  userMany(filter: { gender: male }, limit: 5, sort: _ID_ASC) {\n    name\n    languages {\n      language\n      skill\n    }\n    contacts {\n      email\n    }\n    gender\n    age\n  }\n}\n      `,\n    },\n    {\n      title: 'Find many Users (by geo distance)',\n      query: `\n{\n  distance_5_km: userMany(filter: {\n    geoDistance: {\n      lng: 76.911982,\n      lat: 43.233893,\n      distance: 5000,\n    }\n  }) {\n    name\n    address {\n      geo\n    }\n  }\n  distance_100_km: userMany(filter: {\n    geoDistance: {\n      lng: 76.911982,\n      lat: 43.233893,\n      distance: 100000,\n    }\n  }) {\n    name\n    address {\n      geo\n    }\n  }\n}\n      `,\n    },\n    {\n      title: 'Find User with field of MIXED type',\n      query: `\n{\n  userById(_id: \"57bb44dd21d2befb7ca3f001\") {\n    _id\n    name\n    someMixed\n  }\n}\n      `,\n    },\n    {\n      title: 'Create user mutation (with arg of MIXED type)',\n      query: `\nmutation {\n  userCreate(record: {\n    name: \"My Name\",\n    age: 24,\n    gender: ladyboy,\n    contacts: {\n      email: \"mail@example.com\",\n      phones: [\n        \"111-222-333-444\",\n        \"444-555-666-777\"\n      ]\n    },\n    someMixed: {\n      a: 1,\n      b: 2,\n      c: [ 1, 2, 3, true, false, { sub: 1 }]\n    }\n  }) {\n    recordId\n    record {\n      name\n      age\n      gender\n      contacts {\n        email\n        phones\n      }\n      someMixed\n    }\n  }\n}\n      `,\n    },\n    {\n      title: 'Pagination',\n      query: `\n{\n  userPagination(filter: { gender: male }, perPage: 2, page: 2, sort: _ID_ASC) {\n    items {\n      name\n      languages {\n        language\n        skill\n      }\n      contacts {\n        email\n      }\n      gender\n      age\n    }\n    count\n    pageInfo {\n      currentPage\n      perPage\n      itemCount\n      pageCount\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n}\n      `,\n    },\n  ]\n\n\nexport default {\n  uri: '/gql',\n  schema,\n  title: 'LifeScope GraphQL API',\n  description:\n    'This schema implements all data collected, organized, and analyzed by the LifeScope platform',\n  github: 'https://github.com/bitscooplabs/lifescope',\n  queries: queries,\n};"
      ]
    },
    "mtime": 1521430958026
  },
  "{\"filename\":\"/app/schema/schema.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/schema\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "graphql-compose",
            "imported": [
              "SchemaComposer"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "SchemaComposer",
                "local": "SchemaComposer"
              }
            ]
          },
          {
            "source": "./models/user",
            "imported": [
              "UserTC"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "UserTC",
                "local": "UserTC"
              }
            ]
          },
          {
            "source": "./models/session",
            "imported": [
              "SessionTC"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "SessionTC",
                "local": "SessionTC"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/schema/schema.js",
      "filenameRelative": "/app/schema/schema.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "schema.js",
      "sourceFileName": "schema.js",
      "sourceRoot": "/app/schema",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/schema",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "schema"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _graphqlCompose = require('graphql-compose');\n\nvar _user = require('./models/user');\n\nvar _session = require('./models/session');\n\nconst GQC = new _graphqlCompose.SchemaComposer();\n\n// create GraphQL Schema with all available resolvers\n\n\nGQC.rootQuery().addFields({\n  userById: _user.UserTC.getResolver('findById'),\n  userByIds: _user.UserTC.getResolver('findByIds'),\n  userOne: _user.UserTC.getResolver('findOne'),\n  userMany: _user.UserTC.getResolver('findMany'), // .debug(), // debug info to console for this resolver\n  userTotal: _user.UserTC.getResolver('count'),\n  userConnection: _user.UserTC.getResolver('connection'),\n  userPagination: _user.UserTC.getResolver('pagination'),\n\n  sessionMany: _session.SessionTC.getResolver('findMany')\n});\n// For debug purposes you may display resolver internals in the following manner:\n// console.log(UserTC.getResolver('findMany').toString());\n\nGQC.rootMutation().addFields({\n  userCreate: _user.UserTC.getResolver('createOne'),\n  userUpdateById: _user.UserTC.getResolver('updateById'),\n  userUpdateOne: _user.UserTC.getResolver('updateOne'),\n  userUpdateMany: _user.UserTC.getResolver('updateMany'),\n  userRemoveById: _user.UserTC.getResolver('removeById'),\n  userRemoveOne: _user.UserTC.getResolver('removeOne'),\n  userRemoveMany: _user.UserTC.getResolver('removeMany')\n});\n\nconst graphqlSchema = GQC.buildSchema();\n\nexports.default = graphqlSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJHUUMiLCJyb290UXVlcnkiLCJhZGRGaWVsZHMiLCJ1c2VyQnlJZCIsImdldFJlc29sdmVyIiwidXNlckJ5SWRzIiwidXNlck9uZSIsInVzZXJNYW55IiwidXNlclRvdGFsIiwidXNlckNvbm5lY3Rpb24iLCJ1c2VyUGFnaW5hdGlvbiIsInNlc3Npb25NYW55Iiwicm9vdE11dGF0aW9uIiwidXNlckNyZWF0ZSIsInVzZXJVcGRhdGVCeUlkIiwidXNlclVwZGF0ZU9uZSIsInVzZXJVcGRhdGVNYW55IiwidXNlclJlbW92ZUJ5SWQiLCJ1c2VyUmVtb3ZlT25lIiwidXNlclJlbW92ZU1hbnkiLCJncmFwaHFsU2NoZW1hIiwiYnVpbGRTY2hlbWEiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBOztBQUNBOztBQUNBOztBQUVBLE1BQU1BLE1BQU0sb0NBQVo7O0FBRUE7OztBQUNBQSxJQUFJQyxTQUFKLEdBQWdCQyxTQUFoQixDQUEwQjtBQUN4QkMsWUFBVSxhQUFPQyxXQUFQLENBQW1CLFVBQW5CLENBRGM7QUFFeEJDLGFBQVcsYUFBT0QsV0FBUCxDQUFtQixXQUFuQixDQUZhO0FBR3hCRSxXQUFTLGFBQU9GLFdBQVAsQ0FBbUIsU0FBbkIsQ0FIZTtBQUl4QkcsWUFBVSxhQUFPSCxXQUFQLENBQW1CLFVBQW5CLENBSmMsRUFJa0I7QUFDMUNJLGFBQVcsYUFBT0osV0FBUCxDQUFtQixPQUFuQixDQUxhO0FBTXhCSyxrQkFBZ0IsYUFBT0wsV0FBUCxDQUFtQixZQUFuQixDQU5RO0FBT3hCTSxrQkFBZ0IsYUFBT04sV0FBUCxDQUFtQixZQUFuQixDQVBROztBQVN4Qk8sZUFBYSxtQkFBVVAsV0FBVixDQUFzQixVQUF0QjtBQVRXLENBQTFCO0FBV0E7QUFDQTs7QUFFQUosSUFBSVksWUFBSixHQUFtQlYsU0FBbkIsQ0FBNkI7QUFDM0JXLGNBQVksYUFBT1QsV0FBUCxDQUFtQixXQUFuQixDQURlO0FBRTNCVSxrQkFBZ0IsYUFBT1YsV0FBUCxDQUFtQixZQUFuQixDQUZXO0FBRzNCVyxpQkFBZSxhQUFPWCxXQUFQLENBQW1CLFdBQW5CLENBSFk7QUFJM0JZLGtCQUFnQixhQUFPWixXQUFQLENBQW1CLFlBQW5CLENBSlc7QUFLM0JhLGtCQUFnQixhQUFPYixXQUFQLENBQW1CLFlBQW5CLENBTFc7QUFNM0JjLGlCQUFlLGFBQU9kLFdBQVAsQ0FBbUIsV0FBbkIsQ0FOWTtBQU8zQmUsa0JBQWdCLGFBQU9mLFdBQVAsQ0FBbUIsWUFBbkI7QUFQVyxDQUE3Qjs7QUFVQSxNQUFNZ0IsZ0JBQWdCcEIsSUFBSXFCLFdBQUosRUFBdEI7O2tCQUVlRCxhIiwiZmlsZSI6InNjaGVtYS5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL3NjaGVtYSIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5cbmltcG9ydCB7IFNjaGVtYUNvbXBvc2VyIH0gZnJvbSAnZ3JhcGhxbC1jb21wb3NlJztcbmltcG9ydCB7IFVzZXJUQyB9IGZyb20gJy4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IHsgU2Vzc2lvblRDIH0gZnJvbSAnLi9tb2RlbHMvc2Vzc2lvbic7XG5cbmNvbnN0IEdRQyA9IG5ldyBTY2hlbWFDb21wb3NlcigpO1xuXG4vLyBjcmVhdGUgR3JhcGhRTCBTY2hlbWEgd2l0aCBhbGwgYXZhaWxhYmxlIHJlc29sdmVyc1xuR1FDLnJvb3RRdWVyeSgpLmFkZEZpZWxkcyh7XG4gIHVzZXJCeUlkOiBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ2ZpbmRCeUlkJyksXG4gIHVzZXJCeUlkczogVXNlclRDLmdldFJlc29sdmVyKCdmaW5kQnlJZHMnKSxcbiAgdXNlck9uZTogVXNlclRDLmdldFJlc29sdmVyKCdmaW5kT25lJyksXG4gIHVzZXJNYW55OiBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ2ZpbmRNYW55JyksIC8vIC5kZWJ1ZygpLCAvLyBkZWJ1ZyBpbmZvIHRvIGNvbnNvbGUgZm9yIHRoaXMgcmVzb2x2ZXJcbiAgdXNlclRvdGFsOiBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ2NvdW50JyksXG4gIHVzZXJDb25uZWN0aW9uOiBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ2Nvbm5lY3Rpb24nKSxcbiAgdXNlclBhZ2luYXRpb246IFVzZXJUQy5nZXRSZXNvbHZlcigncGFnaW5hdGlvbicpLFxuICBcbiAgc2Vzc2lvbk1hbnk6IFNlc3Npb25UQy5nZXRSZXNvbHZlcignZmluZE1hbnknKVxufSk7XG4vLyBGb3IgZGVidWcgcHVycG9zZXMgeW91IG1heSBkaXNwbGF5IHJlc29sdmVyIGludGVybmFscyBpbiB0aGUgZm9sbG93aW5nIG1hbm5lcjpcbi8vIGNvbnNvbGUubG9nKFVzZXJUQy5nZXRSZXNvbHZlcignZmluZE1hbnknKS50b1N0cmluZygpKTtcblxuR1FDLnJvb3RNdXRhdGlvbigpLmFkZEZpZWxkcyh7XG4gIHVzZXJDcmVhdGU6IFVzZXJUQy5nZXRSZXNvbHZlcignY3JlYXRlT25lJyksXG4gIHVzZXJVcGRhdGVCeUlkOiBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ3VwZGF0ZUJ5SWQnKSxcbiAgdXNlclVwZGF0ZU9uZTogVXNlclRDLmdldFJlc29sdmVyKCd1cGRhdGVPbmUnKSxcbiAgdXNlclVwZGF0ZU1hbnk6IFVzZXJUQy5nZXRSZXNvbHZlcigndXBkYXRlTWFueScpLFxuICB1c2VyUmVtb3ZlQnlJZDogVXNlclRDLmdldFJlc29sdmVyKCdyZW1vdmVCeUlkJyksXG4gIHVzZXJSZW1vdmVPbmU6IFVzZXJUQy5nZXRSZXNvbHZlcigncmVtb3ZlT25lJyksXG4gIHVzZXJSZW1vdmVNYW55OiBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ3JlbW92ZU1hbnknKSxcbn0pO1xuXG5jb25zdCBncmFwaHFsU2NoZW1hID0gR1FDLmJ1aWxkU2NoZW1hKCk7XG5cbmV4cG9ydCBkZWZhdWx0IGdyYXBocWxTY2hlbWE7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "GQC",
        "rootQuery",
        "addFields",
        "userById",
        "getResolver",
        "userByIds",
        "userOne",
        "userMany",
        "userTotal",
        "userConnection",
        "userPagination",
        "sessionMany",
        "rootMutation",
        "userCreate",
        "userUpdateById",
        "userUpdateOne",
        "userUpdateMany",
        "userRemoveById",
        "userRemoveOne",
        "userRemoveMany",
        "graphqlSchema",
        "buildSchema"
      ],
      "mappings": ";;;;;;AAEA;;AACA;;AACA;;AAEA,MAAMA,MAAM,oCAAZ;;AAEA;;;AACAA,IAAIC,SAAJ,GAAgBC,SAAhB,CAA0B;AACxBC,YAAU,aAAOC,WAAP,CAAmB,UAAnB,CADc;AAExBC,aAAW,aAAOD,WAAP,CAAmB,WAAnB,CAFa;AAGxBE,WAAS,aAAOF,WAAP,CAAmB,SAAnB,CAHe;AAIxBG,YAAU,aAAOH,WAAP,CAAmB,UAAnB,CAJc,EAIkB;AAC1CI,aAAW,aAAOJ,WAAP,CAAmB,OAAnB,CALa;AAMxBK,kBAAgB,aAAOL,WAAP,CAAmB,YAAnB,CANQ;AAOxBM,kBAAgB,aAAON,WAAP,CAAmB,YAAnB,CAPQ;;AASxBO,eAAa,mBAAUP,WAAV,CAAsB,UAAtB;AATW,CAA1B;AAWA;AACA;;AAEAJ,IAAIY,YAAJ,GAAmBV,SAAnB,CAA6B;AAC3BW,cAAY,aAAOT,WAAP,CAAmB,WAAnB,CADe;AAE3BU,kBAAgB,aAAOV,WAAP,CAAmB,YAAnB,CAFW;AAG3BW,iBAAe,aAAOX,WAAP,CAAmB,WAAnB,CAHY;AAI3BY,kBAAgB,aAAOZ,WAAP,CAAmB,YAAnB,CAJW;AAK3Ba,kBAAgB,aAAOb,WAAP,CAAmB,YAAnB,CALW;AAM3Bc,iBAAe,aAAOd,WAAP,CAAmB,WAAnB,CANY;AAO3Be,kBAAgB,aAAOf,WAAP,CAAmB,YAAnB;AAPW,CAA7B;;AAUA,MAAMgB,gBAAgBpB,IAAIqB,WAAJ,EAAtB;;kBAEeD,a",
      "file": "schema.js",
      "sourceRoot": "/app/schema",
      "sourcesContent": [
        "/* @flow */\n\nimport { SchemaComposer } from 'graphql-compose';\nimport { UserTC } from './models/user';\nimport { SessionTC } from './models/session';\n\nconst GQC = new SchemaComposer();\n\n// create GraphQL Schema with all available resolvers\nGQC.rootQuery().addFields({\n  userById: UserTC.getResolver('findById'),\n  userByIds: UserTC.getResolver('findByIds'),\n  userOne: UserTC.getResolver('findOne'),\n  userMany: UserTC.getResolver('findMany'), // .debug(), // debug info to console for this resolver\n  userTotal: UserTC.getResolver('count'),\n  userConnection: UserTC.getResolver('connection'),\n  userPagination: UserTC.getResolver('pagination'),\n  \n  sessionMany: SessionTC.getResolver('findMany')\n});\n// For debug purposes you may display resolver internals in the following manner:\n// console.log(UserTC.getResolver('findMany').toString());\n\nGQC.rootMutation().addFields({\n  userCreate: UserTC.getResolver('createOne'),\n  userUpdateById: UserTC.getResolver('updateById'),\n  userUpdateOne: UserTC.getResolver('updateOne'),\n  userUpdateMany: UserTC.getResolver('updateMany'),\n  userRemoveById: UserTC.getResolver('removeById'),\n  userRemoveOne: UserTC.getResolver('removeOne'),\n  userRemoveMany: UserTC.getResolver('removeMany'),\n});\n\nconst graphqlSchema = GQC.buildSchema();\n\nexport default graphqlSchema;"
      ]
    },
    "mtime": 1521437105713
  },
  "{\"filename\":\"/app/schema/models/user.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/schema/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "graphql-compose-mongoose/node8",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "composeWithMongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "UserSchema",
            "User",
            "UserTC"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "UserSchema",
              "exported": "UserSchema"
            },
            {
              "kind": "local",
              "local": "User",
              "exported": "User"
            },
            {
              "kind": "local",
              "local": "UserTC",
              "exported": "UserTC"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/schema/models/user.js",
      "filenameRelative": "/app/schema/models/user.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.js",
      "sourceFileName": "user.js",
      "sourceRoot": "/app/schema/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/schema/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserTC = exports.User = exports.UserSchema = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _node = require('graphql-compose-mongoose/node8');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst AccountTypeSchema = new _mongoose2.default.Schema({\n  language: String,\n  skill: {\n    type: String,\n    enum: ['free', 'plus', 'pro']\n  }\n}, {\n  _id: false\n});\n\nconst AddressSchema = new _mongoose2.default.Schema({\n  street: String,\n  geo: {\n    type: [Number], // [<longitude>, <latitude>]\n    index: '2dsphere' // create the geospatial index\n  }\n});\n\nconst UserSchema = exports.UserSchema = new _mongoose2.default.Schema({\n  meta: {\n    type: Object\n  },\n  _id: {\n    type: Buffer\n  },\n  name: {\n    type: String,\n    index: true\n  },\n  is_active: {\n    type: Boolean,\n    index: true\n  },\n  joined: {\n    type: Date,\n    index: false\n  },\n  last_login: {\n    type: Date,\n    index: false\n  },\n  settings: {\n    explorer: {\n      initial_searches: {\n        type: Boolean,\n        index: false\n      }\n    }\n  },\n  social_accounts: {\n    type: Array,\n    index: false\n  },\n  subscriptions: {\n    type: Array,\n    index: false\n  },\n  age: {\n    type: Number,\n    index: true\n  },\n  accountType: {\n    type: [AccountTypeSchema],\n    default: []\n  },\n  contacts: {\n    // another mongoose way for providing embedded documents\n    email: String,\n    phones: [String] // array of strings\n  },\n  gender: {\n    // enum field with values\n    type: String,\n    enum: ['male', 'female', 'ladyboy', 'ai', 'animal', 'mineral', 'other']\n  },\n  address: {\n    type: AddressSchema\n  },\n  otherData: {\n    type: _mongoose2.default.Schema.Types.Mixed,\n    description: 'Some dynamic data'\n  }\n}, {\n  collection: 'users'\n});\n\nUserSchema.index({ gender: 1, age: -1 });\n\nconst User = exports.User = _mongoose2.default.model('User', UserSchema);\n\nconst UserTC = exports.UserTC = (0, _node2.default)(User);\n\n// TODO: Buffer to Base64 encoding fix.\n\n// UserTC.addFields({\n//   id: { // extended\n//     type: 'String', // String, Int, Float, Boolean, ID, Json, array []\n//     description: 'uuid4 id',\n//     resolve: (source, args, context, info) => {\n//         console.log(source._id.buffer);\n//         // console.log(Buffer.from(source._id.buffer, 'base64').toString());\n//         // Buffer.from(source._id.buffer, 'base64').toString();\n//       },\n//     },\n// });\n\nUserTC.setResolver('findMany', UserTC.getResolver('findMany').addFilterArg({\n  name: 'geoDistance',\n  type: `input GeoDistance {\n      lng: Float!\n      lat: Float!\n      # Distance in meters\n      distance: Float!\n    }`,\n  description: 'Search by distance in meters',\n  query: (rawQuery, value, resolveParams) => {\n    // eslint-disable-line\n    if (!value.lng || !value.lat || !value.distance) return;\n    // read more https://docs.mongodb.com/manual/tutorial/query-a-2dsphere-index/\n    rawQuery['address.geo'] = {\n      $near: {\n        $geometry: {\n          type: 'Point',\n          coordinates: [value.lng, value.lat]\n        },\n        $maxDistance: value.distance // <distance in meters>\n      }\n    };\n  }\n})\n// /* FOR DEBUG */\n//   .debug()\n// /* OR MORE PRECISELY */\n//   .debugParams()\n//   .debugPayload()\n//   .debugExecTime()\n);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "AccountTypeSchema",
        "Schema",
        "language",
        "String",
        "skill",
        "type",
        "enum",
        "_id",
        "AddressSchema",
        "street",
        "geo",
        "Number",
        "index",
        "UserSchema",
        "meta",
        "Object",
        "Buffer",
        "name",
        "is_active",
        "Boolean",
        "joined",
        "Date",
        "last_login",
        "settings",
        "explorer",
        "initial_searches",
        "social_accounts",
        "Array",
        "subscriptions",
        "age",
        "accountType",
        "default",
        "contacts",
        "email",
        "phones",
        "gender",
        "address",
        "otherData",
        "Types",
        "Mixed",
        "description",
        "collection",
        "User",
        "model",
        "UserTC",
        "setResolver",
        "getResolver",
        "addFilterArg",
        "query",
        "rawQuery",
        "value",
        "resolveParams",
        "lng",
        "lat",
        "distance",
        "$near",
        "$geometry",
        "coordinates",
        "$maxDistance"
      ],
      "mappings": ";;;;;;;AAEA;;;;AACA;;;;;;AAEA,MAAMA,oBAAoB,IAAI,mBAASC,MAAb,CACxB;AACEC,YAAUC,MADZ;AAEEC,SAAO;AACLC,UAAMF,MADD;AAELG,UAAM,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB;AAFD;AAFT,CADwB,EAQxB;AACEC,OAAK;AADP,CARwB,CAA1B;;AAaA,MAAMC,gBAAgB,IAAI,mBAASP,MAAb,CAAoB;AACxCQ,UAAQN,MADgC;AAExCO,OAAK;AACHL,UAAM,CAACM,MAAD,CADH,EACa;AAChBC,WAAO,UAFJ,CAEgB;AAFhB;AAFmC,CAApB,CAAtB;;AAQO,MAAMC,kCAAa,IAAI,mBAASZ,MAAb,CACxB;AACEa,QAAM;AACJT,UAAMU;AADF,GADR;AAIER,OAAI;AACFF,UAAMW;AADJ,GAJN;AAOEC,QAAM;AACJZ,UAAMF,MADF;AAEJS,WAAO;AAFH,GAPR;AAWEM,aAAW;AACTb,UAAMc,OADG;AAETP,WAAO;AAFE,GAXb;AAeEQ,UAAQ;AACNf,UAAMgB,IADA;AAENT,WAAO;AAFD,GAfV;AAmBEU,cAAY;AACVjB,UAAMgB,IADI;AAEVT,WAAO;AAFG,GAnBd;AAuBEW,YAAU;AACRC,cAAU;AACRC,wBAAkB;AAChBpB,cAAMc,OADU;AAEhBP,eAAO;AAFS;AADV;AADF,GAvBZ;AA+BEc,mBAAiB;AACfrB,UAAMsB,KADS;AAEff,WAAO;AAFQ,GA/BnB;AAmCEgB,iBAAe;AACbvB,UAAMsB,KADO;AAEbf,WAAO;AAFM,GAnCjB;AAuCEiB,OAAK;AACHxB,UAAMM,MADH;AAEHC,WAAO;AAFJ,GAvCP;AA2CEkB,eAAa;AACXzB,UAAM,CAACL,iBAAD,CADK;AAEX+B,aAAS;AAFE,GA3Cf;AA+CEC,YAAU;AACR;AACAC,WAAO9B,MAFC;AAGR+B,YAAQ,CAAC/B,MAAD,CAHA,CAGU;AAHV,GA/CZ;AAoDEgC,UAAQ;AACN;AACA9B,UAAMF,MAFA;AAGNG,UAAM,CAAC,MAAD,EAAS,QAAT,EAAmB,SAAnB,EAA8B,IAA9B,EAAoC,QAApC,EAA8C,SAA9C,EAAyD,OAAzD;AAHA,GApDV;AAyDE8B,WAAS;AACP/B,UAAMG;AADC,GAzDX;AA4DE6B,aAAW;AACThC,UAAM,mBAASJ,MAAT,CAAgBqC,KAAhB,CAAsBC,KADnB;AAETC,iBAAa;AAFJ;AA5Db,CADwB,EAkExB;AACEC,cAAY;AADd,CAlEwB,CAAnB;;AAuEP5B,WAAWD,KAAX,CAAiB,EAAEuB,QAAQ,CAAV,EAAaN,KAAK,CAAC,CAAnB,EAAjB;;AAEO,MAAMa,sBAAO,mBAASC,KAAT,CAAe,MAAf,EAAuB9B,UAAvB,CAAb;;AAEA,MAAM+B,0BAAS,oBAAoBF,IAApB,CAAf;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAE,OAAOC,WAAP,CACE,UADF,EAEED,OAAOE,WAAP,CAAmB,UAAnB,EAA+BC,YAA/B,CAA4C;AAC1C9B,QAAM,aADoC;AAE1CZ,QAAO;;;;;MAFmC;AAQ1CmC,eAAa,8BAR6B;AAS1CQ,SAAO,CAACC,QAAD,EAAWC,KAAX,EAAkBC,aAAlB,KAAoC;AAAE;AAC3C,QAAI,CAACD,MAAME,GAAP,IAAc,CAACF,MAAMG,GAArB,IAA4B,CAACH,MAAMI,QAAvC,EAAiD;AACjD;AACAL,aAAS,aAAT,IAA0B;AACxBM,aAAO;AACLC,mBAAW;AACTnD,gBAAM,OADG;AAEToD,uBAAa,CAACP,MAAME,GAAP,EAAYF,MAAMG,GAAlB;AAFJ,SADN;AAKLK,sBAAcR,MAAMI,QALf,CAKyB;AALzB;AADiB,KAA1B;AASD;AArByC,CAA5C;AAuBA;AACA;AACA;AACA;AACA;AACA;AA9BF",
      "file": "user.js",
      "sourceRoot": "/app/schema/models",
      "sourcesContent": [
        "/* @flow */\n\nimport mongoose from 'mongoose';\nimport composeWithMongoose from 'graphql-compose-mongoose/node8';\n\nconst AccountTypeSchema = new mongoose.Schema(\n  {\n    language: String,\n    skill: {\n      type: String,\n      enum: ['free', 'plus', 'pro'],\n    },\n  },\n  {\n    _id: false,\n  }\n);\n\nconst AddressSchema = new mongoose.Schema({\n  street: String,\n  geo: {\n    type: [Number], // [<longitude>, <latitude>]\n    index: '2dsphere', // create the geospatial index\n  },\n});\n\nexport const UserSchema = new mongoose.Schema(\n  {\n    meta: {\n      type: Object\n    },\n    _id:{\n      type: Buffer,\n    },\n    name: {\n      type: String,\n      index: true,\n    },\n    is_active: {\n      type: Boolean,\n      index: true,\n    },\n    joined: {\n      type: Date,\n      index: false\n    },\n    last_login: {\n      type: Date,\n      index: false\n    },\n    settings: {\n      explorer: {\n        initial_searches: {\n          type: Boolean,\n          index: false\n        }\n      }\n    },\n    social_accounts: {\n      type: Array,\n      index: false\n    },\n    subscriptions: {\n      type: Array,\n      index: false\n    },\n    age: {\n      type: Number,\n      index: true,\n    },\n    accountType: {\n      type: [AccountTypeSchema],\n      default: [],\n    }, \n    contacts: {\n      // another mongoose way for providing embedded documents\n      email: String,\n      phones: [String], // array of strings\n    },\n    gender: {\n      // enum field with values\n      type: String,\n      enum: ['male', 'female', 'ladyboy', 'ai', 'animal', 'mineral', 'other'],\n    },\n    address: {\n      type: AddressSchema,\n    },\n    otherData: {\n      type: mongoose.Schema.Types.Mixed,\n      description: 'Some dynamic data',\n    },\n  },\n  {\n    collection: 'users',\n  }\n);\n\nUserSchema.index({ gender: 1, age: -1 });\n\nexport const User = mongoose.model('User', UserSchema);\n\nexport const UserTC = composeWithMongoose(User);\n\n// TODO: Buffer to Base64 encoding fix.\n\n// UserTC.addFields({\n//   id: { // extended\n//     type: 'String', // String, Int, Float, Boolean, ID, Json, array []\n//     description: 'uuid4 id',\n//     resolve: (source, args, context, info) => {\n//         console.log(source._id.buffer);\n//         // console.log(Buffer.from(source._id.buffer, 'base64').toString());\n//         // Buffer.from(source._id.buffer, 'base64').toString();\n//       },\n//     },\n// });\n\nUserTC.setResolver(\n  'findMany',\n  UserTC.getResolver('findMany').addFilterArg({\n    name: 'geoDistance',\n    type: `input GeoDistance {\n      lng: Float!\n      lat: Float!\n      # Distance in meters\n      distance: Float!\n    }`,\n    description: 'Search by distance in meters',\n    query: (rawQuery, value, resolveParams) => { // eslint-disable-line\n      if (!value.lng || !value.lat || !value.distance) return;\n      // read more https://docs.mongodb.com/manual/tutorial/query-a-2dsphere-index/\n      rawQuery['address.geo'] = {\n        $near: {\n          $geometry: {\n            type: 'Point',\n            coordinates: [value.lng, value.lat],\n          },\n          $maxDistance: value.distance, // <distance in meters>\n        },\n      };\n    },\n  })\n  // /* FOR DEBUG */\n  //   .debug()\n  // /* OR MORE PRECISELY */\n  //   .debugParams()\n  //   .debugPayload()\n  //   .debugExecTime()\n);"
      ]
    },
    "mtime": 1521439147914
  },
  "{\"filename\":\"/app/schema/models/session.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/schema/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "graphql-compose-mongoose/node8",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "composeWithMongoose"
              }
            ]
          },
          {
            "source": "./user",
            "imported": [
              "UserTC"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "UserTC",
                "local": "UserTC"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "SessionSchema",
            "Session",
            "SessionTC"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "SessionSchema",
              "exported": "SessionSchema"
            },
            {
              "kind": "local",
              "local": "Session",
              "exported": "Session"
            },
            {
              "kind": "local",
              "local": "SessionTC",
              "exported": "SessionTC"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/schema/models/session.js",
      "filenameRelative": "/app/schema/models/session.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "session.js",
      "sourceFileName": "session.js",
      "sourceRoot": "/app/schema/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/schema/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "session"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SessionTC = exports.Session = exports.SessionSchema = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _node = require('graphql-compose-mongoose/node8');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _user = require('./user');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst SessionSchema = exports.SessionSchema = new _mongoose2.default.Schema({\n  meta: {\n    type: Object\n  },\n  token: {\n    type: String\n  },\n  csrf_secret: {\n    type: String\n  },\n  created: {\n    type: Date\n  },\n  expires: {\n    type: Date\n  },\n  persist: {\n    type: Boolean\n  },\n  ttl: {\n    type: Date\n  },\n  user_id: {\n    type: Buffer\n  }\n}, {\n  collection: 'sessions'\n});\n\nconst Session = exports.Session = _mongoose2.default.model('Session', SessionSchema);\n\nconst SessionTC = exports.SessionTC = (0, _node2.default)(Session);\n\nSessionTC.addRelation('user', {\n  resolver: () => _user.UserTC.getResolver('findById'),\n  prepareArgs: {\n    filter: source => ({ _id: source.user_id })\n  },\n  projection: { user_id: true }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlc3Npb24uanMiXSwibmFtZXMiOlsiU2Vzc2lvblNjaGVtYSIsIlNjaGVtYSIsIm1ldGEiLCJ0eXBlIiwiT2JqZWN0IiwidG9rZW4iLCJTdHJpbmciLCJjc3JmX3NlY3JldCIsImNyZWF0ZWQiLCJEYXRlIiwiZXhwaXJlcyIsInBlcnNpc3QiLCJCb29sZWFuIiwidHRsIiwidXNlcl9pZCIsIkJ1ZmZlciIsImNvbGxlY3Rpb24iLCJTZXNzaW9uIiwibW9kZWwiLCJTZXNzaW9uVEMiLCJhZGRSZWxhdGlvbiIsInJlc29sdmVyIiwiZ2V0UmVzb2x2ZXIiLCJwcmVwYXJlQXJncyIsImZpbHRlciIsInNvdXJjZSIsIl9pZCIsInByb2plY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7OztBQUNBOzs7O0FBRUE7Ozs7QUFFTyxNQUFNQSx3Q0FBZ0IsSUFBSSxtQkFBU0MsTUFBYixDQUMzQjtBQUNFQyxRQUFNO0FBQ0pDLFVBQU1DO0FBREYsR0FEUjtBQUlFQyxTQUFPO0FBQ0xGLFVBQU1HO0FBREQsR0FKVDtBQU9FQyxlQUFhO0FBQ1hKLFVBQU1HO0FBREssR0FQZjtBQVVFRSxXQUFTO0FBQ1BMLFVBQU1NO0FBREMsR0FWWDtBQWFFQyxXQUFTO0FBQ1BQLFVBQU1NO0FBREMsR0FiWDtBQWdCRUUsV0FBUztBQUNQUixVQUFNUztBQURDLEdBaEJYO0FBbUJFQyxPQUFLO0FBQ0hWLFVBQU1NO0FBREgsR0FuQlA7QUFzQkVLLFdBQVM7QUFDUFgsVUFBTVk7QUFEQztBQXRCWCxDQUQyQixFQTJCM0I7QUFDRUMsY0FBWTtBQURkLENBM0IyQixDQUF0Qjs7QUFnQ0EsTUFBTUMsNEJBQVUsbUJBQVNDLEtBQVQsQ0FBZSxTQUFmLEVBQTBCbEIsYUFBMUIsQ0FBaEI7O0FBRUEsTUFBTW1CLGdDQUFZLG9CQUFvQkYsT0FBcEIsQ0FBbEI7O0FBRVBFLFVBQVVDLFdBQVYsQ0FBc0IsTUFBdEIsRUFBOEI7QUFDNUJDLFlBQVUsTUFBTSxhQUFPQyxXQUFQLENBQW1CLFVBQW5CLENBRFk7QUFFNUJDLGVBQWE7QUFDWEMsWUFBUUMsV0FBVyxFQUFFQyxLQUFLRCxPQUFPWCxPQUFkLEVBQVg7QUFERyxHQUZlO0FBSzVCYSxjQUFZLEVBQUViLFNBQVMsSUFBWDtBQUxnQixDQUE5QiIsImZpbGUiOiJzZXNzaW9uLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2NoZW1hL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5cbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgY29tcG9zZVdpdGhNb25nb29zZSBmcm9tICdncmFwaHFsLWNvbXBvc2UtbW9uZ29vc2Uvbm9kZTgnO1xuXG5pbXBvcnQgeyBVc2VyVEMgfSBmcm9tICcuL3VzZXInO1xuXG5leHBvcnQgY29uc3QgU2Vzc2lvblNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoXG4gIHtcbiAgICBtZXRhOiB7XG4gICAgICB0eXBlOiBPYmplY3RcbiAgICB9LFxuICAgIHRva2VuOiB7XG4gICAgICB0eXBlOiBTdHJpbmdcbiAgICB9LFxuICAgIGNzcmZfc2VjcmV0OiB7XG4gICAgICB0eXBlOiBTdHJpbmdcbiAgICB9LFxuICAgIGNyZWF0ZWQ6IHtcbiAgICAgIHR5cGU6IERhdGVcbiAgICB9LFxuICAgIGV4cGlyZXM6IHtcbiAgICAgIHR5cGU6IERhdGVcbiAgICB9LFxuICAgIHBlcnNpc3Q6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW5cbiAgICB9LFxuICAgIHR0bDoge1xuICAgICAgdHlwZTogRGF0ZVxuICAgIH0sXG4gICAgdXNlcl9pZDoge1xuICAgICAgdHlwZTogQnVmZmVyXG4gICAgfVxuICB9LFxuICB7XG4gICAgY29sbGVjdGlvbjogJ3Nlc3Npb25zJyxcbiAgfVxuKTtcblxuZXhwb3J0IGNvbnN0IFNlc3Npb24gPSBtb25nb29zZS5tb2RlbCgnU2Vzc2lvbicsIFNlc3Npb25TY2hlbWEpO1xuXG5leHBvcnQgY29uc3QgU2Vzc2lvblRDID0gY29tcG9zZVdpdGhNb25nb29zZShTZXNzaW9uKTtcblxuU2Vzc2lvblRDLmFkZFJlbGF0aW9uKCd1c2VyJywge1xuICByZXNvbHZlcjogKCkgPT4gVXNlclRDLmdldFJlc29sdmVyKCdmaW5kQnlJZCcpLFxuICBwcmVwYXJlQXJnczoge1xuICAgIGZpbHRlcjogc291cmNlID0+ICh7IF9pZDogc291cmNlLnVzZXJfaWQgfSksXG4gIH0sXG4gIHByb2plY3Rpb246IHsgdXNlcl9pZDogdHJ1ZSB9LFxufSk7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "session.js"
      ],
      "names": [
        "SessionSchema",
        "Schema",
        "meta",
        "type",
        "Object",
        "token",
        "String",
        "csrf_secret",
        "created",
        "Date",
        "expires",
        "persist",
        "Boolean",
        "ttl",
        "user_id",
        "Buffer",
        "collection",
        "Session",
        "model",
        "SessionTC",
        "addRelation",
        "resolver",
        "getResolver",
        "prepareArgs",
        "filter",
        "source",
        "_id",
        "projection"
      ],
      "mappings": ";;;;;;;AAEA;;;;AACA;;;;AAEA;;;;AAEO,MAAMA,wCAAgB,IAAI,mBAASC,MAAb,CAC3B;AACEC,QAAM;AACJC,UAAMC;AADF,GADR;AAIEC,SAAO;AACLF,UAAMG;AADD,GAJT;AAOEC,eAAa;AACXJ,UAAMG;AADK,GAPf;AAUEE,WAAS;AACPL,UAAMM;AADC,GAVX;AAaEC,WAAS;AACPP,UAAMM;AADC,GAbX;AAgBEE,WAAS;AACPR,UAAMS;AADC,GAhBX;AAmBEC,OAAK;AACHV,UAAMM;AADH,GAnBP;AAsBEK,WAAS;AACPX,UAAMY;AADC;AAtBX,CAD2B,EA2B3B;AACEC,cAAY;AADd,CA3B2B,CAAtB;;AAgCA,MAAMC,4BAAU,mBAASC,KAAT,CAAe,SAAf,EAA0BlB,aAA1B,CAAhB;;AAEA,MAAMmB,gCAAY,oBAAoBF,OAApB,CAAlB;;AAEPE,UAAUC,WAAV,CAAsB,MAAtB,EAA8B;AAC5BC,YAAU,MAAM,aAAOC,WAAP,CAAmB,UAAnB,CADY;AAE5BC,eAAa;AACXC,YAAQC,WAAW,EAAEC,KAAKD,OAAOX,OAAd,EAAX;AADG,GAFe;AAK5Ba,cAAY,EAAEb,SAAS,IAAX;AALgB,CAA9B",
      "file": "session.js",
      "sourceRoot": "/app/schema/models",
      "sourcesContent": [
        "/* @flow */\n\nimport mongoose from 'mongoose';\nimport composeWithMongoose from 'graphql-compose-mongoose/node8';\n\nimport { UserTC } from './user';\n\nexport const SessionSchema = new mongoose.Schema(\n  {\n    meta: {\n      type: Object\n    },\n    token: {\n      type: String\n    },\n    csrf_secret: {\n      type: String\n    },\n    created: {\n      type: Date\n    },\n    expires: {\n      type: Date\n    },\n    persist: {\n      type: Boolean\n    },\n    ttl: {\n      type: Date\n    },\n    user_id: {\n      type: Buffer\n    }\n  },\n  {\n    collection: 'sessions',\n  }\n);\n\nexport const Session = mongoose.model('Session', SessionSchema);\n\nexport const SessionTC = composeWithMongoose(Session);\n\nSessionTC.addRelation('user', {\n  resolver: () => UserTC.getResolver('findById'),\n  prepareArgs: {\n    filter: source => ({ _id: source.user_id }),\n  },\n  projection: { user_id: true },\n});"
      ]
    },
    "mtime": 1521479315873
  }
}