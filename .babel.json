{
  "{\"filename\":\"/app/server.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "babel-core/register",
            "imported": [],
            "specifiers": []
          },
          {
            "source": "babel-polyfill",
            "imported": [],
            "specifiers": []
          },
          {
            "source": "mongodb",
            "imported": [
              "MongoClient",
              "ObjectId"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "MongoClient",
                "local": "MongoClient"
              },
              {
                "kind": "named",
                "imported": "ObjectId",
                "local": "ObjectId"
              }
            ]
          },
          {
            "source": "graphql-server-express",
            "imported": [
              "graphqlExpress",
              "graphiqlExpress"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "graphqlExpress",
                "local": "graphqlExpress"
              },
              {
                "kind": "named",
                "imported": "graphiqlExpress",
                "local": "graphiqlExpress"
              }
            ]
          },
          {
            "source": "graphql-tools",
            "imported": [
              "makeExecutableSchema"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "makeExecutableSchema",
                "local": "makeExecutableSchema"
              }
            ]
          },
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          },
          {
            "source": "body-parser",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "bodyParser"
              }
            ]
          },
          {
            "source": "cors",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "cors"
              }
            ]
          },
          {
            "source": "./data/schema",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "schema"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "start"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "start",
              "exported": "start"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/server.js",
      "filenameRelative": "/app/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.start = undefined;\n\nrequire('babel-core/register');\n\nrequire('babel-polyfill');\n\nvar _mongodb = require('mongodb');\n\nvar _graphqlServerExpress = require('graphql-server-express');\n\nvar _graphqlTools = require('graphql-tools');\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _bodyParser = require('body-parser');\n\nvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\nvar _cors = require('cors');\n\nvar _cors2 = _interopRequireDefault(_cors);\n\nvar _schema2 = require('./data/schema');\n\nvar _schema3 = _interopRequireDefault(_schema2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar URL = process.env.PROJECT_DOMAIN;\nvar PORT = process.env.PORT;\nvar MONGO_URL = 'mongodb://localhost:27017/blog';\n\nconsole.log(\"GRAPHQL_PORT: \" + PORT);\n\nvar graphQLServer = (0, _express2.default)();\n\nvar prepare = function prepare(o) {\n  o._id = o._id.toString();\n  return o;\n};\n\nvar start = exports.start = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n    var db, Posts, Comments, typeDefs, resolvers, _schema, app, homePath;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return _mongodb.MongoClient.connect(MONGO_URL);\n\n          case 3:\n            db = _context8.sent;\n            Posts = db.collection('posts');\n            Comments = db.collection('comments');\n            typeDefs = ['\\n      type Query {\\n        post(_id: String): Post\\n        posts: [Post]\\n        comment(_id: String): Comment\\n      }\\n      type Post {\\n        _id: String\\n        title: String\\n        content: String\\n        comments: [Comment]\\n      }\\n      type Comment {\\n        _id: String\\n        postId: String\\n        content: String\\n        post: Post\\n      }\\n      type Mutation {\\n        createPost(title: String, content: String): Post\\n        createComment(postId: String, content: String): Comment\\n      }\\n      schema {\\n        query: Query\\n        mutation: Mutation\\n      }\\n    '];\n            resolvers = {\n              Query: {\n                post: function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(root, _ref2) {\n                    var _id = _ref2._id;\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.t0 = prepare;\n                            _context.next = 3;\n                            return Posts.findOne((0, _mongodb.ObjectId)(_id));\n\n                          case 3:\n                            _context.t1 = _context.sent;\n                            return _context.abrupt('return', (0, _context.t0)(_context.t1));\n\n                          case 5:\n                          case 'end':\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, undefined);\n                  }));\n\n                  function post(_x, _x2) {\n                    return _ref3.apply(this, arguments);\n                  }\n\n                  return post;\n                }(),\n                posts: function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return Posts.find({}).toArray();\n\n                          case 2:\n                            _context2.t0 = prepare;\n                            return _context2.abrupt('return', _context2.sent.map(_context2.t0));\n\n                          case 4:\n                          case 'end':\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, undefined);\n                  }));\n\n                  function posts() {\n                    return _ref4.apply(this, arguments);\n                  }\n\n                  return posts;\n                }(),\n                comment: function () {\n                  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(root, _ref5) {\n                    var _id = _ref5._id;\n                    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            _context3.t0 = prepare;\n                            _context3.next = 3;\n                            return Comments.findOne((0, _mongodb.ObjectId)(_id));\n\n                          case 3:\n                            _context3.t1 = _context3.sent;\n                            return _context3.abrupt('return', (0, _context3.t0)(_context3.t1));\n\n                          case 5:\n                          case 'end':\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3, undefined);\n                  }));\n\n                  function comment(_x3, _x4) {\n                    return _ref6.apply(this, arguments);\n                  }\n\n                  return comment;\n                }()\n              },\n              Post: {\n                comments: function () {\n                  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref7) {\n                    var _id = _ref7._id;\n                    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            _context4.next = 2;\n                            return Comments.find({ postId: _id }).toArray();\n\n                          case 2:\n                            _context4.t0 = prepare;\n                            return _context4.abrupt('return', _context4.sent.map(_context4.t0));\n\n                          case 4:\n                          case 'end':\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4, undefined);\n                  }));\n\n                  function comments(_x5) {\n                    return _ref8.apply(this, arguments);\n                  }\n\n                  return comments;\n                }()\n              },\n              Comment: {\n                post: function () {\n                  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref9) {\n                    var postId = _ref9.postId;\n                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.t0 = prepare;\n                            _context5.next = 3;\n                            return Posts.findOne((0, _mongodb.ObjectId)(postId));\n\n                          case 3:\n                            _context5.t1 = _context5.sent;\n                            return _context5.abrupt('return', (0, _context5.t0)(_context5.t1));\n\n                          case 5:\n                          case 'end':\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5, undefined);\n                  }));\n\n                  function post(_x6) {\n                    return _ref10.apply(this, arguments);\n                  }\n\n                  return post;\n                }()\n              },\n              Mutation: {\n                createPost: function () {\n                  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(root, args, context, info) {\n                    var res;\n                    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            _context6.next = 2;\n                            return Posts.insert(args);\n\n                          case 2:\n                            res = _context6.sent;\n                            _context6.t0 = prepare;\n                            _context6.next = 6;\n                            return Posts.findOne({ _id: res.insertedIds[1] });\n\n                          case 6:\n                            _context6.t1 = _context6.sent;\n                            return _context6.abrupt('return', (0, _context6.t0)(_context6.t1));\n\n                          case 8:\n                          case 'end':\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6, undefined);\n                  }));\n\n                  function createPost(_x7, _x8, _x9, _x10) {\n                    return _ref11.apply(this, arguments);\n                  }\n\n                  return createPost;\n                }(),\n                createComment: function () {\n                  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(root, args) {\n                    var res;\n                    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                      while (1) {\n                        switch (_context7.prev = _context7.next) {\n                          case 0:\n                            _context7.next = 2;\n                            return Comments.insert(args);\n\n                          case 2:\n                            res = _context7.sent;\n                            _context7.t0 = prepare;\n                            _context7.next = 6;\n                            return Comments.findOne({ _id: res.insertedIds[1] });\n\n                          case 6:\n                            _context7.t1 = _context7.sent;\n                            return _context7.abrupt('return', (0, _context7.t0)(_context7.t1));\n\n                          case 8:\n                          case 'end':\n                            return _context7.stop();\n                        }\n                      }\n                    }, _callee7, undefined);\n                  }));\n\n                  function createComment(_x11, _x12) {\n                    return _ref12.apply(this, arguments);\n                  }\n\n                  return createComment;\n                }()\n              }\n            };\n            _schema = (0, _graphqlTools.makeExecutableSchema)({\n              typeDefs: typeDefs,\n              resolvers: resolvers\n            });\n            app = (0, _express2.default)();\n\n\n            app.use((0, _cors2.default)());\n\n            app.use('/graphql', _bodyParser2.default.json(), (0, _graphqlServerExpress.graphqlExpress)({ schema: _schema }));\n\n            homePath = '/graphiql';\n\n\n            app.use(homePath, (0, _graphqlServerExpress.graphiqlExpress)({\n              endpointURL: '/graphql'\n            }));\n\n            app.listen(PORT, function () {\n              console.log('Visit ' + URL + ':' + PORT + homePath);\n            });\n\n            _context8.next = 20;\n            break;\n\n          case 17:\n            _context8.prev = 17;\n            _context8.t0 = _context8['catch'](0);\n\n            console.log(_context8.t0);\n\n          case 20:\n          case 'end':\n            return _context8.stop();\n        }\n      }\n    }, _callee8, undefined, [[0, 17]]);\n  }));\n\n  return function start() {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "URL",
        "process",
        "env",
        "PROJECT_DOMAIN",
        "PORT",
        "MONGO_URL",
        "console",
        "log",
        "graphQLServer",
        "prepare",
        "o",
        "_id",
        "toString",
        "start",
        "connect",
        "db",
        "Posts",
        "collection",
        "Comments",
        "typeDefs",
        "resolvers",
        "Query",
        "post",
        "root",
        "findOne",
        "posts",
        "find",
        "toArray",
        "map",
        "comment",
        "Post",
        "comments",
        "postId",
        "Comment",
        "Mutation",
        "createPost",
        "args",
        "context",
        "info",
        "insert",
        "res",
        "insertedIds",
        "createComment",
        "schema",
        "app",
        "use",
        "json",
        "homePath",
        "endpointURL",
        "listen"
      ],
      "mappings": "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",
      "file": "server.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "import 'babel-core/register'\nimport 'babel-polyfill'\n\nimport {MongoClient, ObjectId} from 'mongodb'\nimport {graphqlExpress, graphiqlExpress} from 'graphql-server-express'\nimport {makeExecutableSchema} from 'graphql-tools'\n\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\n\nimport schema from './data/schema';\n\nconst URL = process.env.PROJECT_DOMAIN\nconst PORT = process.env.PORT;\nconst MONGO_URL = 'mongodb://localhost:27017/blog'\n\nconsole.log(\"GRAPHQL_PORT: \" + PORT);\n\nconst graphQLServer = express();\n\n\nconst prepare = (o) => {\n  o._id = o._id.toString()\n  return o\n}\n\nexport const start = async () => {\n  try {\n    const db = await MongoClient.connect(MONGO_URL)\n\n    const Posts = db.collection('posts')\n    const Comments = db.collection('comments')\n\n    const typeDefs = [`\n      type Query {\n        post(_id: String): Post\n        posts: [Post]\n        comment(_id: String): Comment\n      }\n      type Post {\n        _id: String\n        title: String\n        content: String\n        comments: [Comment]\n      }\n      type Comment {\n        _id: String\n        postId: String\n        content: String\n        post: Post\n      }\n      type Mutation {\n        createPost(title: String, content: String): Post\n        createComment(postId: String, content: String): Comment\n      }\n      schema {\n        query: Query\n        mutation: Mutation\n      }\n    `];\n\n    const resolvers = {\n      Query: {\n        post: async (root, {_id}) => {\n          return prepare(await Posts.findOne(ObjectId(_id)))\n        },\n        posts: async () => {\n          return (await Posts.find({}).toArray()).map(prepare)\n        },\n        comment: async (root, {_id}) => {\n          return prepare(await Comments.findOne(ObjectId(_id)))\n        },\n      },\n      Post: {\n        comments: async ({_id}) => {\n          return (await Comments.find({postId: _id}).toArray()).map(prepare)\n        }\n      },\n      Comment: {\n        post: async ({postId}) => {\n          return prepare(await Posts.findOne(ObjectId(postId)))\n        }\n      },\n      Mutation: {\n        createPost: async (root, args, context, info) => {\n          const res = await Posts.insert(args)\n          return prepare(await Posts.findOne({_id: res.insertedIds[1]}))\n        },\n        createComment: async (root, args) => {\n          const res = await Comments.insert(args)\n          return prepare(await Comments.findOne({_id: res.insertedIds[1]}))\n        },\n      },\n    }\n\n    const schema = makeExecutableSchema({\n      typeDefs,\n      resolvers\n    })\n\n    const app = express()\n\n    app.use(cors())\n\n    app.use('/graphql', bodyParser.json(), graphqlExpress({schema}))\n\n    const homePath = '/graphiql'\n\n    app.use(homePath, graphiqlExpress({\n      endpointURL: '/graphql'\n    }))\n\n    app.listen(PORT, () => {\n      console.log(`Visit ${URL}:${PORT}${homePath}`)\n    })\n\n  } catch (e) {\n    console.log(e)\n  }\n\n}"
      ]
    },
    "mtime": 1521162394557
  },
  "{\"filename\":\"/app/data/schema.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/data\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "graphql-tools",
            "imported": [
              "makeExecutableSchema",
              "addMockFunctionsToSchema"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "makeExecutableSchema",
                "local": "makeExecutableSchema"
              },
              {
                "kind": "named",
                "imported": "addMockFunctionsToSchema",
                "local": "addMockFunctionsToSchema"
              }
            ]
          },
          {
            "source": "./mocks",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mocks"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/data/schema.js",
      "filenameRelative": "/app/data/schema.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "schema.js",
      "sourceFileName": "schema.js",
      "sourceRoot": "/app/data",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/data",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "schema"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _graphqlTools = require('graphql-tools');\n\nvar _mocks = require('./mocks');\n\nvar _mocks2 = _interopRequireDefault(_mocks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar typeDefs = '\\ntype Query {\\n  testString: String\\n}\\n';\n\nvar schema = (0, _graphqlTools.makeExecutableSchema)({ typeDefs: typeDefs });\n\n(0, _graphqlTools.addMockFunctionsToSchema)({ schema: schema, mocks: _mocks2.default });\n\nexports.default = schema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJ0eXBlRGVmcyIsInNjaGVtYSIsIm1vY2tzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsc0RBQU47O0FBTUEsSUFBTUMsU0FBUyx3Q0FBcUIsRUFBRUQsa0JBQUYsRUFBckIsQ0FBZjs7QUFFQSw0Q0FBeUIsRUFBRUMsY0FBRixFQUFVQyxzQkFBVixFQUF6Qjs7a0JBRWVELE0iLCJmaWxlIjoic2NoZW1hLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvZGF0YSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1ha2VFeGVjdXRhYmxlU2NoZW1hLCBhZGRNb2NrRnVuY3Rpb25zVG9TY2hlbWEgfSBmcm9tICdncmFwaHFsLXRvb2xzJztcbmltcG9ydCBtb2NrcyBmcm9tICcuL21vY2tzJztcblxuY29uc3QgdHlwZURlZnMgPSBgXG50eXBlIFF1ZXJ5IHtcbiAgdGVzdFN0cmluZzogU3RyaW5nXG59XG5gO1xuXG5jb25zdCBzY2hlbWEgPSBtYWtlRXhlY3V0YWJsZVNjaGVtYSh7IHR5cGVEZWZzIH0pO1xuXG5hZGRNb2NrRnVuY3Rpb25zVG9TY2hlbWEoeyBzY2hlbWEsIG1vY2tzIH0pO1xuXG5leHBvcnQgZGVmYXVsdCBzY2hlbWE7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "typeDefs",
        "schema",
        "mocks"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;;;;;AAEA,IAAMA,sDAAN;;AAMA,IAAMC,SAAS,wCAAqB,EAAED,kBAAF,EAArB,CAAf;;AAEA,4CAAyB,EAAEC,cAAF,EAAUC,sBAAV,EAAzB;;kBAEeD,M",
      "file": "schema.js",
      "sourceRoot": "/app/data",
      "sourcesContent": [
        "import { makeExecutableSchema, addMockFunctionsToSchema } from 'graphql-tools';\nimport mocks from './mocks';\n\nconst typeDefs = `\ntype Query {\n  testString: String\n}\n`;\n\nconst schema = makeExecutableSchema({ typeDefs });\n\naddMockFunctionsToSchema({ schema, mocks });\n\nexport default schema;\n"
      ]
    },
    "mtime": 1521004562057
  },
  "{\"filename\":\"/app/data/mocks.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/data\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/data/mocks.js",
      "filenameRelative": "/app/data/mocks.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "mocks.js",
      "sourceFileName": "mocks.js",
      "sourceRoot": "/app/data",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/data",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "mocks"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar mocks = {\n  String: function String() {\n    return 'It works!';\n  }\n};\n\nexports.default = mocks;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vY2tzLmpzIl0sIm5hbWVzIjpbIm1vY2tzIiwiU3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQU1BLFFBQVE7QUFDWkMsVUFBUTtBQUFBLFdBQU0sV0FBTjtBQUFBO0FBREksQ0FBZDs7a0JBSWVELEsiLCJmaWxlIjoibW9ja3MuanMiLCJzb3VyY2VSb290IjoiL2FwcC9kYXRhIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9ja3MgPSB7XG4gIFN0cmluZzogKCkgPT4gJ0l0IHdvcmtzISdcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1vY2tzO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "mocks.js"
      ],
      "names": [
        "mocks",
        "String"
      ],
      "mappings": ";;;;;AAAA,IAAMA,QAAQ;AACZC,UAAQ;AAAA,WAAM,WAAN;AAAA;AADI,CAAd;;kBAIeD,K",
      "file": "mocks.js",
      "sourceRoot": "/app/data",
      "sourcesContent": [
        "const mocks = {\n  String: () => 'It works!'\n};\n\nexport default mocks;\n"
      ]
    },
    "mtime": 1521004562053
  }
}