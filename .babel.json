{
  "{\"filename\":\"/app/scripts/seed.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/scripts\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongodb",
            "imported": [
              "MongoClient"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "MongoClient",
                "local": "MongoClient"
              }
            ]
          },
          {
            "source": "path",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "path"
              }
            ]
          },
          {
            "source": "fs",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "fs"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/scripts/seed.js",
      "filenameRelative": "/app/scripts/seed.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "seed.js",
      "sourceFileName": "seed.js",
      "sourceRoot": "/app/scripts",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/scripts",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "seed"
    },
    "ignored": false,
    "code": "'use strict';\n\nlet run = (() => {\n  var _ref = _asyncToGenerator(function* () {\n    db = yield _mongodb.MongoClient.connect(process.env.MONGODB_URI, { promiseLibrary: Promise });\n\n    console.log(`Starting seed...`);\n\n    const seedFile = _path2.default.resolve('./schema/data/seed.js');\n    try {\n      yield new Promise(function (resolve, reject) {\n        _fs2.default.access(seedFile, _fs2.default.F_OK, function (err) {\n          if (err) reject(err);else resolve();\n        });\n      });\n\n      // $FlowFixMe\n      const seedFn = require(seedFile).default;\n      yield seedFn(db); // eslint-disable-line\n    } catch (e) {\n      if (e.code === 'MODULE_NOT_FOUND' || e.code === 'ENOENT') {\n        console.log(`  file '${seedFile}' not found. Skipping...`);\n      } else {\n        console.log(e);\n      }\n    }\n\n    console.log('Seed competed!');\n    db.close();\n  });\n\n  return function run() {\n    return _ref.apply(this, arguments);\n  };\n})();\n\nvar _mongodb = require('mongodb');\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n/* eslint-disable no-await-in-loop */\n// This script scans `schema/data` folder for `schema/data/seed.js` files and run them for seeding DB.\n\nlet db;\n\nrun().catch(e => {\n  console.log(e);\n  process.exit(0);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlZWQuanMiXSwibmFtZXMiOlsiZGIiLCJjb25uZWN0IiwicHJvY2VzcyIsImVudiIsIk1PTkdPREJfVVJJIiwicHJvbWlzZUxpYnJhcnkiLCJQcm9taXNlIiwiY29uc29sZSIsImxvZyIsInNlZWRGaWxlIiwicmVzb2x2ZSIsInJlamVjdCIsImFjY2VzcyIsIkZfT0siLCJlcnIiLCJzZWVkRm4iLCJyZXF1aXJlIiwiZGVmYXVsdCIsImUiLCJjb2RlIiwiY2xvc2UiLCJydW4iLCJjYXRjaCIsImV4aXQiXSwibWFwcGluZ3MiOiI7OzsrQkFXQSxhQUFxQjtBQUNuQkEsU0FBSyxNQUFNLHFCQUFZQyxPQUFaLENBQW9CQyxRQUFRQyxHQUFSLENBQVlDLFdBQWhDLEVBQTZDLEVBQUVDLGdCQUFnQkMsT0FBbEIsRUFBN0MsQ0FBWDs7QUFFQUMsWUFBUUMsR0FBUixDQUFhLGtCQUFiOztBQUVBLFVBQU1DLFdBQVcsZUFBS0MsT0FBTCxDQUFhLHVCQUFiLENBQWpCO0FBQ0EsUUFBSTtBQUNGLFlBQU0sSUFBSUosT0FBSixDQUFZLFVBQUNJLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUNyQyxxQkFBR0MsTUFBSCxDQUFVSCxRQUFWLEVBQW9CLGFBQUdJLElBQXZCLEVBQTZCLGVBQU87QUFDbEMsY0FBSUMsR0FBSixFQUFTSCxPQUFPRyxHQUFQLEVBQVQsS0FDS0o7QUFDTixTQUhEO0FBSUQsT0FMSyxDQUFOOztBQU9BO0FBQ0EsWUFBTUssU0FBU0MsUUFBUVAsUUFBUixFQUFrQlEsT0FBakM7QUFDQSxZQUFNRixPQUFPZixFQUFQLENBQU4sQ0FWRSxDQVVnQjtBQUNuQixLQVhELENBV0UsT0FBT2tCLENBQVAsRUFBVTtBQUNWLFVBQUlBLEVBQUVDLElBQUYsS0FBVyxrQkFBWCxJQUFpQ0QsRUFBRUMsSUFBRixLQUFXLFFBQWhELEVBQTBEO0FBQ3hEWixnQkFBUUMsR0FBUixDQUFhLFdBQVVDLFFBQVMsMEJBQWhDO0FBQ0QsT0FGRCxNQUVPO0FBQ0xGLGdCQUFRQyxHQUFSLENBQVlVLENBQVo7QUFDRDtBQUNGOztBQUVEWCxZQUFRQyxHQUFSLENBQVksZ0JBQVo7QUFDQVIsT0FBR29CLEtBQUg7QUFDRCxHOztrQkEzQmNDLEc7Ozs7O0FBUGY7O0FBRUE7Ozs7QUFDQTs7Ozs7OztBQU5BO0FBQ0E7O0FBT0EsSUFBSXJCLEVBQUo7O0FBK0JBcUIsTUFBTUMsS0FBTixDQUFZSixLQUFLO0FBQ2ZYLFVBQVFDLEdBQVIsQ0FBWVUsQ0FBWjtBQUNBaEIsVUFBUXFCLElBQVIsQ0FBYSxDQUFiO0FBQ0QsQ0FIRCIsImZpbGUiOiJzZWVkLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2NyaXB0cyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1hd2FpdC1pbi1sb29wICovXG4vLyBUaGlzIHNjcmlwdCBzY2FucyBgc2NoZW1hL2RhdGFgIGZvbGRlciBmb3IgYHNjaGVtYS9kYXRhL3NlZWQuanNgIGZpbGVzIGFuZCBydW4gdGhlbSBmb3Igc2VlZGluZyBEQi5cblxuaW1wb3J0IHsgTW9uZ29DbGllbnQgfSBmcm9tICdtb25nb2RiJztcblxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xuXG5sZXQgZGI7XG5cbmFzeW5jIGZ1bmN0aW9uIHJ1bigpIHtcbiAgZGIgPSBhd2FpdCBNb25nb0NsaWVudC5jb25uZWN0KHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJLCB7IHByb21pc2VMaWJyYXJ5OiBQcm9taXNlIH0pO1xuXG4gIGNvbnNvbGUubG9nKGBTdGFydGluZyBzZWVkLi4uYCk7XG5cbiAgY29uc3Qgc2VlZEZpbGUgPSBwYXRoLnJlc29sdmUoJy4vc2NoZW1hL2RhdGEvc2VlZC5qcycpO1xuICB0cnkge1xuICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGZzLmFjY2VzcyhzZWVkRmlsZSwgZnMuRl9PSywgZXJyID0+IHtcbiAgICAgICAgaWYgKGVycikgcmVqZWN0KGVycik7XG4gICAgICAgIGVsc2UgcmVzb2x2ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgY29uc3Qgc2VlZEZuID0gcmVxdWlyZShzZWVkRmlsZSkuZGVmYXVsdDtcbiAgICBhd2FpdCBzZWVkRm4oZGIpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZS5jb2RlID09PSAnTU9EVUxFX05PVF9GT1VORCcgfHwgZS5jb2RlID09PSAnRU5PRU5UJykge1xuICAgICAgY29uc29sZS5sb2coYCAgZmlsZSAnJHtzZWVkRmlsZX0nIG5vdCBmb3VuZC4gU2tpcHBpbmcuLi5gKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coZSk7XG4gICAgfVxuICB9XG5cbiAgY29uc29sZS5sb2coJ1NlZWQgY29tcGV0ZWQhJyk7XG4gIGRiLmNsb3NlKCk7XG59XG5cbnJ1bigpLmNhdGNoKGUgPT4ge1xuICBjb25zb2xlLmxvZyhlKTtcbiAgcHJvY2Vzcy5leGl0KDApO1xufSk7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "seed.js"
      ],
      "names": [
        "db",
        "connect",
        "process",
        "env",
        "MONGODB_URI",
        "promiseLibrary",
        "Promise",
        "console",
        "log",
        "seedFile",
        "resolve",
        "reject",
        "access",
        "F_OK",
        "err",
        "seedFn",
        "require",
        "default",
        "e",
        "code",
        "close",
        "run",
        "catch",
        "exit"
      ],
      "mappings": ";;;+BAWA,aAAqB;AACnBA,SAAK,MAAM,qBAAYC,OAAZ,CAAoBC,QAAQC,GAAR,CAAYC,WAAhC,EAA6C,EAAEC,gBAAgBC,OAAlB,EAA7C,CAAX;;AAEAC,YAAQC,GAAR,CAAa,kBAAb;;AAEA,UAAMC,WAAW,eAAKC,OAAL,CAAa,uBAAb,CAAjB;AACA,QAAI;AACF,YAAM,IAAIJ,OAAJ,CAAY,UAACI,OAAD,EAAUC,MAAV,EAAqB;AACrC,qBAAGC,MAAH,CAAUH,QAAV,EAAoB,aAAGI,IAAvB,EAA6B,eAAO;AAClC,cAAIC,GAAJ,EAASH,OAAOG,GAAP,EAAT,KACKJ;AACN,SAHD;AAID,OALK,CAAN;;AAOA;AACA,YAAMK,SAASC,QAAQP,QAAR,EAAkBQ,OAAjC;AACA,YAAMF,OAAOf,EAAP,CAAN,CAVE,CAUgB;AACnB,KAXD,CAWE,OAAOkB,CAAP,EAAU;AACV,UAAIA,EAAEC,IAAF,KAAW,kBAAX,IAAiCD,EAAEC,IAAF,KAAW,QAAhD,EAA0D;AACxDZ,gBAAQC,GAAR,CAAa,WAAUC,QAAS,0BAAhC;AACD,OAFD,MAEO;AACLF,gBAAQC,GAAR,CAAYU,CAAZ;AACD;AACF;;AAEDX,YAAQC,GAAR,CAAY,gBAAZ;AACAR,OAAGoB,KAAH;AACD,G;;kBA3BcC,G;;;;;AAPf;;AAEA;;;;AACA;;;;;;;AANA;AACA;;AAOA,IAAIrB,EAAJ;;AA+BAqB,MAAMC,KAAN,CAAYJ,KAAK;AACfX,UAAQC,GAAR,CAAYU,CAAZ;AACAhB,UAAQqB,IAAR,CAAa,CAAb;AACD,CAHD",
      "file": "seed.js",
      "sourceRoot": "/app/scripts",
      "sourcesContent": [
        "/* @flow */\n/* eslint-disable no-await-in-loop */\n// This script scans `schema/data` folder for `schema/data/seed.js` files and run them for seeding DB.\n\nimport { MongoClient } from 'mongodb';\n\nimport path from 'path';\nimport fs from 'fs';\n\nlet db;\n\nasync function run() {\n  db = await MongoClient.connect(process.env.MONGODB_URI, { promiseLibrary: Promise });\n\n  console.log(`Starting seed...`);\n\n  const seedFile = path.resolve('./schema/data/seed.js');\n  try {\n    await new Promise((resolve, reject) => {\n      fs.access(seedFile, fs.F_OK, err => {\n        if (err) reject(err);\n        else resolve();\n      });\n    });\n\n    // $FlowFixMe\n    const seedFn = require(seedFile).default;\n    await seedFn(db); // eslint-disable-line\n  } catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND' || e.code === 'ENOENT') {\n      console.log(`  file '${seedFile}' not found. Skipping...`);\n    } else {\n      console.log(e);\n    }\n  }\n\n  console.log('Seed competed!');\n  db.close();\n}\n\nrun().catch(e => {\n  console.log(e);\n  process.exit(0);\n});"
      ]
    },
    "mtime": 1521190068267
  },
  "{\"filename\":\"/app/schema/data/seed.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/schema/data\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "fs",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "fs"
              }
            ]
          },
          {
            "source": "mongodb",
            "imported": [
              "ObjectID"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "ObjectID",
                "local": "ObjectID"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/schema/data/seed.js",
      "filenameRelative": "/app/schema/data/seed.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "seed.js",
      "sourceFileName": "seed.js",
      "sourceRoot": "/app/schema/data",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/schema/data",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "seed"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _mongodb = require('mongodb');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nconst collectionPrefix = 'user_';\n\nexports.default = (() => {\n  var _ref = _asyncToGenerator(function* (db) {\n    const files = ['users'];\n\n    const collectionNames = (yield db.listCollections().toArray()).map(function (o) {\n      return o.name;\n    });\n\n    return Promise.all(files.map(function (file) {\n      return _asyncToGenerator(function* () {\n        const colName = `${collectionPrefix || ''}${file}`;\n        const data = JSON.parse(_fs2.default.readFileSync(`${__dirname}/${file}.json`, 'utf8'));\n        data.forEach(function (d, i) {\n          data[i]._id = _mongodb.ObjectID.createFromHexString(data[i]._id);\n        });\n        if (collectionNames.indexOf(colName) > -1) {\n          console.log(`  '${colName}' dropped`);\n          yield db.dropCollection(colName);\n        }\n        const result = yield db.collection(colName).insertMany(data);\n        console.log(`  '${colName}' created with ${result.insertedCount} records`);\n      })();\n    }));\n  });\n\n  function seed(_x) {\n    return _ref.apply(this, arguments);\n  }\n\n  return seed;\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlZWQuanMiXSwibmFtZXMiOlsiY29sbGVjdGlvblByZWZpeCIsImRiIiwiZmlsZXMiLCJjb2xsZWN0aW9uTmFtZXMiLCJsaXN0Q29sbGVjdGlvbnMiLCJ0b0FycmF5IiwibWFwIiwibyIsIm5hbWUiLCJQcm9taXNlIiwiYWxsIiwiY29sTmFtZSIsImZpbGUiLCJkYXRhIiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiX19kaXJuYW1lIiwiZm9yRWFjaCIsImQiLCJpIiwiX2lkIiwiY3JlYXRlRnJvbUhleFN0cmluZyIsImluZGV4T2YiLCJjb25zb2xlIiwibG9nIiwiZHJvcENvbGxlY3Rpb24iLCJyZXN1bHQiLCJjb2xsZWN0aW9uIiwiaW5zZXJ0TWFueSIsImluc2VydGVkQ291bnQiLCJzZWVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQTs7OztBQUNBOzs7Ozs7QUFFQSxNQUFNQSxtQkFBbUIsT0FBekI7OzsrQkFFZSxXQUFvQkMsRUFBcEIsRUFBNkI7QUFDMUMsVUFBTUMsUUFBUSxDQUFDLE9BQUQsQ0FBZDs7QUFFQSxVQUFNQyxrQkFBa0IsQ0FBQyxNQUFNRixHQUFHRyxlQUFILEdBQXFCQyxPQUFyQixFQUFQLEVBQXVDQyxHQUF2QyxDQUEyQztBQUFBLGFBQUtDLEVBQUVDLElBQVA7QUFBQSxLQUEzQyxDQUF4Qjs7QUFFQSxXQUFPQyxRQUFRQyxHQUFSLENBQ0xSLE1BQU1JLEdBQU4sQ0FBVSxnQkFBUTtBQUNoQixhQUFPLGtCQUFDLGFBQWlCO0FBQ3ZCLGNBQU1LLFVBQVcsR0FBRVgsb0JBQW9CLEVBQUcsR0FBRVksSUFBSyxFQUFqRDtBQUNBLGNBQU1DLE9BQU9DLEtBQUtDLEtBQUwsQ0FBVyxhQUFHQyxZQUFILENBQWlCLEdBQUVDLFNBQVUsSUFBR0wsSUFBSyxPQUFyQyxFQUE2QyxNQUE3QyxDQUFYLENBQWI7QUFDQUMsYUFBS0ssT0FBTCxDQUFhLFVBQUNDLENBQUQsRUFBSUMsQ0FBSixFQUFVO0FBQ3JCUCxlQUFLTyxDQUFMLEVBQVFDLEdBQVIsR0FBYyxrQkFBU0MsbUJBQVQsQ0FBNkJULEtBQUtPLENBQUwsRUFBUUMsR0FBckMsQ0FBZDtBQUNELFNBRkQ7QUFHQSxZQUFJbEIsZ0JBQWdCb0IsT0FBaEIsQ0FBd0JaLE9BQXhCLElBQW1DLENBQUMsQ0FBeEMsRUFBMkM7QUFDekNhLGtCQUFRQyxHQUFSLENBQWEsTUFBS2QsT0FBUSxXQUExQjtBQUNBLGdCQUFNVixHQUFHeUIsY0FBSCxDQUFrQmYsT0FBbEIsQ0FBTjtBQUNEO0FBQ0QsY0FBTWdCLFNBQVMsTUFBTTFCLEdBQUcyQixVQUFILENBQWNqQixPQUFkLEVBQXVCa0IsVUFBdkIsQ0FBa0NoQixJQUFsQyxDQUFyQjtBQUNBVyxnQkFBUUMsR0FBUixDQUFhLE1BQUtkLE9BQVEsa0JBQWlCZ0IsT0FBT0csYUFBYyxVQUFoRTtBQUNELE9BWk0sR0FBUDtBQWFELEtBZEQsQ0FESyxDQUFQO0FBaUJELEc7O1dBdEI2QkMsSTs7OztTQUFBQSxJIiwiZmlsZSI6InNlZWQuanMiLCJzb3VyY2VSb290IjoiL2FwcC9zY2hlbWEvZGF0YSIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5cbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgeyBPYmplY3RJRCB9IGZyb20gJ21vbmdvZGInO1xuXG5jb25zdCBjb2xsZWN0aW9uUHJlZml4ID0gJ3VzZXJfJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gc2VlZChkYjogYW55KSB7XG4gIGNvbnN0IGZpbGVzID0gWyd1c2VycyddO1xuXG4gIGNvbnN0IGNvbGxlY3Rpb25OYW1lcyA9IChhd2FpdCBkYi5saXN0Q29sbGVjdGlvbnMoKS50b0FycmF5KCkpLm1hcChvID0+IG8ubmFtZSk7XG5cbiAgcmV0dXJuIFByb21pc2UuYWxsKFxuICAgIGZpbGVzLm1hcChmaWxlID0+IHtcbiAgICAgIHJldHVybiAoYXN5bmMgZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnN0IGNvbE5hbWUgPSBgJHtjb2xsZWN0aW9uUHJlZml4IHx8ICcnfSR7ZmlsZX1gO1xuICAgICAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShmcy5yZWFkRmlsZVN5bmMoYCR7X19kaXJuYW1lfS8ke2ZpbGV9Lmpzb25gLCAndXRmOCcpKTtcbiAgICAgICAgZGF0YS5mb3JFYWNoKChkLCBpKSA9PiB7XG4gICAgICAgICAgZGF0YVtpXS5faWQgPSBPYmplY3RJRC5jcmVhdGVGcm9tSGV4U3RyaW5nKGRhdGFbaV0uX2lkKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChjb2xsZWN0aW9uTmFtZXMuaW5kZXhPZihjb2xOYW1lKSA+IC0xKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coYCAgJyR7Y29sTmFtZX0nIGRyb3BwZWRgKTtcbiAgICAgICAgICBhd2FpdCBkYi5kcm9wQ29sbGVjdGlvbihjb2xOYW1lKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKGNvbE5hbWUpLmluc2VydE1hbnkoZGF0YSk7XG4gICAgICAgIGNvbnNvbGUubG9nKGAgICcke2NvbE5hbWV9JyBjcmVhdGVkIHdpdGggJHtyZXN1bHQuaW5zZXJ0ZWRDb3VudH0gcmVjb3Jkc2ApO1xuICAgICAgfSkoKTtcbiAgICB9KVxuICApO1xufSJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "seed.js"
      ],
      "names": [
        "collectionPrefix",
        "db",
        "files",
        "collectionNames",
        "listCollections",
        "toArray",
        "map",
        "o",
        "name",
        "Promise",
        "all",
        "colName",
        "file",
        "data",
        "JSON",
        "parse",
        "readFileSync",
        "__dirname",
        "forEach",
        "d",
        "i",
        "_id",
        "createFromHexString",
        "indexOf",
        "console",
        "log",
        "dropCollection",
        "result",
        "collection",
        "insertMany",
        "insertedCount",
        "seed"
      ],
      "mappings": ";;;;;;AAEA;;;;AACA;;;;;;AAEA,MAAMA,mBAAmB,OAAzB;;;+BAEe,WAAoBC,EAApB,EAA6B;AAC1C,UAAMC,QAAQ,CAAC,OAAD,CAAd;;AAEA,UAAMC,kBAAkB,CAAC,MAAMF,GAAGG,eAAH,GAAqBC,OAArB,EAAP,EAAuCC,GAAvC,CAA2C;AAAA,aAAKC,EAAEC,IAAP;AAAA,KAA3C,CAAxB;;AAEA,WAAOC,QAAQC,GAAR,CACLR,MAAMI,GAAN,CAAU,gBAAQ;AAChB,aAAO,kBAAC,aAAiB;AACvB,cAAMK,UAAW,GAAEX,oBAAoB,EAAG,GAAEY,IAAK,EAAjD;AACA,cAAMC,OAAOC,KAAKC,KAAL,CAAW,aAAGC,YAAH,CAAiB,GAAEC,SAAU,IAAGL,IAAK,OAArC,EAA6C,MAA7C,CAAX,CAAb;AACAC,aAAKK,OAAL,CAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACrBP,eAAKO,CAAL,EAAQC,GAAR,GAAc,kBAASC,mBAAT,CAA6BT,KAAKO,CAAL,EAAQC,GAArC,CAAd;AACD,SAFD;AAGA,YAAIlB,gBAAgBoB,OAAhB,CAAwBZ,OAAxB,IAAmC,CAAC,CAAxC,EAA2C;AACzCa,kBAAQC,GAAR,CAAa,MAAKd,OAAQ,WAA1B;AACA,gBAAMV,GAAGyB,cAAH,CAAkBf,OAAlB,CAAN;AACD;AACD,cAAMgB,SAAS,MAAM1B,GAAG2B,UAAH,CAAcjB,OAAd,EAAuBkB,UAAvB,CAAkChB,IAAlC,CAArB;AACAW,gBAAQC,GAAR,CAAa,MAAKd,OAAQ,kBAAiBgB,OAAOG,aAAc,UAAhE;AACD,OAZM,GAAP;AAaD,KAdD,CADK,CAAP;AAiBD,G;;WAtB6BC,I;;;;SAAAA,I",
      "file": "seed.js",
      "sourceRoot": "/app/schema/data",
      "sourcesContent": [
        "/* @flow */\n\nimport fs from 'fs';\nimport { ObjectID } from 'mongodb';\n\nconst collectionPrefix = 'user_';\n\nexport default async function seed(db: any) {\n  const files = ['users'];\n\n  const collectionNames = (await db.listCollections().toArray()).map(o => o.name);\n\n  return Promise.all(\n    files.map(file => {\n      return (async function() {\n        const colName = `${collectionPrefix || ''}${file}`;\n        const data = JSON.parse(fs.readFileSync(`${__dirname}/${file}.json`, 'utf8'));\n        data.forEach((d, i) => {\n          data[i]._id = ObjectID.createFromHexString(data[i]._id);\n        });\n        if (collectionNames.indexOf(colName) > -1) {\n          console.log(`  '${colName}' dropped`);\n          await db.dropCollection(colName);\n        }\n        const result = await db.collection(colName).insertMany(data);\n        console.log(`  '${colName}' created with ${result.insertedCount} records`);\n      })();\n    })\n  );\n}"
      ]
    },
    "mtime": 1521190125597
  },
  "{\"filename\":\"/app/server.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server.js",
      "filenameRelative": "/app/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst express = require('express');\n\nconst cors = require('cors');\nconst graphqlHTTP = require('express-graphql');\nconst expressPlayground = require('graphql-playground-middleware-express');\nconst mongoose = require('mongoose');\n\nconst lifescopeSchema = require('./schema');\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nconst server = express();\nserver.use(cors());\n\nconst opts = {\n  autoReconnect: true,\n  reconnectTries: Number.MAX_VALUE,\n  reconnectInterval: 1000\n};\n\nmongoose.connect(MONGODB_URI, opts);\n\nconst mongooseConnect = mongoose.connection;\n\nmongooseConnect.on('error', e => {\n  if (e.message.code === 'ETIMEDOUT') {\n    console.log(e);\n    mongoose.connect(MONGODB_URI, opts);\n  }\n  console.log(e);\n});\n\nmongooseConnect.once('open', () => {\n  console.log(`MongoDB successfully connected to ${MONGODB_URI}`);\n});\n\nserver.use(lifescopeSchema.default.uri, graphqlHTTP(() => ({\n  schema: lifescopeSchema.schema,\n  graphiql: true,\n  formatError: error => ({\n    message: error.message,\n    stack: !error.message.match(/for security reason/i) ? error.stack.split('\\n') : null\n  })\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNvcnMiLCJncmFwaHFsSFRUUCIsImV4cHJlc3NQbGF5Z3JvdW5kIiwibW9uZ29vc2UiLCJsaWZlc2NvcGVTY2hlbWEiLCJNT05HT0RCX1VSSSIsInByb2Nlc3MiLCJlbnYiLCJzZXJ2ZXIiLCJ1c2UiLCJvcHRzIiwiYXV0b1JlY29ubmVjdCIsInJlY29ubmVjdFRyaWVzIiwiTnVtYmVyIiwiTUFYX1ZBTFVFIiwicmVjb25uZWN0SW50ZXJ2YWwiLCJjb25uZWN0IiwibW9uZ29vc2VDb25uZWN0IiwiY29ubmVjdGlvbiIsIm9uIiwiZSIsIm1lc3NhZ2UiLCJjb2RlIiwiY29uc29sZSIsImxvZyIsIm9uY2UiLCJkZWZhdWx0IiwidXJpIiwic2NoZW1hIiwiZ3JhcGhpcWwiLCJmb3JtYXRFcnJvciIsImVycm9yIiwic3RhY2siLCJtYXRjaCIsInNwbGl0Il0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLFVBQVVDLFFBQVEsU0FBUixDQUFoQjs7QUFFQSxNQUFNQyxPQUFPRCxRQUFRLE1BQVIsQ0FBYjtBQUNBLE1BQU1FLGNBQWNGLFFBQVEsaUJBQVIsQ0FBcEI7QUFDQSxNQUFNRyxvQkFBb0JILFFBQVEsdUNBQVIsQ0FBMUI7QUFDQSxNQUFNSSxXQUFXSixRQUFRLFVBQVIsQ0FBakI7O0FBRUEsTUFBTUssa0JBQWtCTCxRQUFRLFVBQVIsQ0FBeEI7O0FBRUEsTUFBTU0sY0FBY0MsUUFBUUMsR0FBUixDQUFZRixXQUFoQzs7QUFFQSxNQUFNRyxTQUFTVixTQUFmO0FBQ0FVLE9BQU9DLEdBQVAsQ0FBV1QsTUFBWDs7QUFFQSxNQUFNVSxPQUFPO0FBQ1hDLGlCQUFlLElBREo7QUFFWEMsa0JBQWdCQyxPQUFPQyxTQUZaO0FBR1hDLHFCQUFtQjtBQUhSLENBQWI7O0FBTUFaLFNBQVNhLE9BQVQsQ0FBaUJYLFdBQWpCLEVBQThCSyxJQUE5Qjs7QUFFQSxNQUFNTyxrQkFBa0JkLFNBQVNlLFVBQWpDOztBQUVBRCxnQkFBZ0JFLEVBQWhCLENBQW1CLE9BQW5CLEVBQTRCQyxLQUFLO0FBQy9CLE1BQUlBLEVBQUVDLE9BQUYsQ0FBVUMsSUFBVixLQUFtQixXQUF2QixFQUFvQztBQUNsQ0MsWUFBUUMsR0FBUixDQUFZSixDQUFaO0FBQ0FqQixhQUFTYSxPQUFULENBQWlCWCxXQUFqQixFQUE4QkssSUFBOUI7QUFDRDtBQUNEYSxVQUFRQyxHQUFSLENBQVlKLENBQVo7QUFDRCxDQU5EOztBQVFBSCxnQkFBZ0JRLElBQWhCLENBQXFCLE1BQXJCLEVBQTZCLE1BQU07QUFDakNGLFVBQVFDLEdBQVIsQ0FBYSxxQ0FBb0NuQixXQUFZLEVBQTdEO0FBQ0QsQ0FGRDs7QUFJQUcsT0FBT0MsR0FBUCxDQUNJTCxnQkFBZ0JzQixPQUFoQixDQUF3QkMsR0FENUIsRUFFSTFCLFlBQVksT0FBTztBQUNqQjJCLFVBQVF4QixnQkFBZ0J3QixNQURQO0FBRWpCQyxZQUFVLElBRk87QUFHakJDLGVBQWFDLFVBQVU7QUFDckJWLGFBQVNVLE1BQU1WLE9BRE07QUFFckJXLFdBQU8sQ0FBQ0QsTUFBTVYsT0FBTixDQUFjWSxLQUFkLENBQW9CLHNCQUFwQixDQUFELEdBQStDRixNQUFNQyxLQUFOLENBQVlFLEtBQVosQ0FBa0IsSUFBbEIsQ0FBL0MsR0FBeUU7QUFGM0QsR0FBVjtBQUhJLENBQVAsQ0FBWixDQUZKIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcblxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcbmNvbnN0IGdyYXBocWxIVFRQID0gcmVxdWlyZSgnZXhwcmVzcy1ncmFwaHFsJyk7XG5jb25zdCBleHByZXNzUGxheWdyb3VuZCA9IHJlcXVpcmUoJ2dyYXBocWwtcGxheWdyb3VuZC1taWRkbGV3YXJlLWV4cHJlc3MnKTtcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcblxuY29uc3QgbGlmZXNjb3BlU2NoZW1hID0gcmVxdWlyZSgnLi9zY2hlbWEnKTtcblxuY29uc3QgTU9OR09EQl9VUkkgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSSTtcblxuY29uc3Qgc2VydmVyID0gZXhwcmVzcygpO1xuc2VydmVyLnVzZShjb3JzKCkpO1xuXG5jb25zdCBvcHRzID0ge1xuICBhdXRvUmVjb25uZWN0OiB0cnVlLFxuICByZWNvbm5lY3RUcmllczogTnVtYmVyLk1BWF9WQUxVRSxcbiAgcmVjb25uZWN0SW50ZXJ2YWw6IDEwMDAsXG59O1xuXG5tb25nb29zZS5jb25uZWN0KE1PTkdPREJfVVJJLCBvcHRzKTtcblxuY29uc3QgbW9uZ29vc2VDb25uZWN0ID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcblxubW9uZ29vc2VDb25uZWN0Lm9uKCdlcnJvcicsIGUgPT4ge1xuICBpZiAoZS5tZXNzYWdlLmNvZGUgPT09ICdFVElNRURPVVQnKSB7XG4gICAgY29uc29sZS5sb2coZSk7XG4gICAgbW9uZ29vc2UuY29ubmVjdChNT05HT0RCX1VSSSwgb3B0cyk7XG4gIH1cbiAgY29uc29sZS5sb2coZSk7XG59KTtcblxubW9uZ29vc2VDb25uZWN0Lm9uY2UoJ29wZW4nLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKGBNb25nb0RCIHN1Y2Nlc3NmdWxseSBjb25uZWN0ZWQgdG8gJHtNT05HT0RCX1VSSX1gKTtcbn0pO1xuXG5zZXJ2ZXIudXNlKFxuICAgIGxpZmVzY29wZVNjaGVtYS5kZWZhdWx0LnVyaSxcbiAgICBncmFwaHFsSFRUUCgoKSA9PiAoe1xuICAgICAgc2NoZW1hOiBsaWZlc2NvcGVTY2hlbWEuc2NoZW1hLFxuICAgICAgZ3JhcGhpcWw6IHRydWUsXG4gICAgICBmb3JtYXRFcnJvcjogZXJyb3IgPT4gKHtcbiAgICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgc3RhY2s6ICFlcnJvci5tZXNzYWdlLm1hdGNoKC9mb3Igc2VjdXJpdHkgcmVhc29uL2kpID8gZXJyb3Iuc3RhY2suc3BsaXQoJ1xcbicpIDogbnVsbCxcbiAgICAgIH0pLFxuICAgIH0pKVxuKTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "cors",
        "graphqlHTTP",
        "expressPlayground",
        "mongoose",
        "lifescopeSchema",
        "MONGODB_URI",
        "process",
        "env",
        "server",
        "use",
        "opts",
        "autoReconnect",
        "reconnectTries",
        "Number",
        "MAX_VALUE",
        "reconnectInterval",
        "connect",
        "mongooseConnect",
        "connection",
        "on",
        "e",
        "message",
        "code",
        "console",
        "log",
        "once",
        "default",
        "uri",
        "schema",
        "graphiql",
        "formatError",
        "error",
        "stack",
        "match",
        "split"
      ],
      "mappings": ";;AAAA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;;AAEA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,cAAcF,QAAQ,iBAAR,CAApB;AACA,MAAMG,oBAAoBH,QAAQ,uCAAR,CAA1B;AACA,MAAMI,WAAWJ,QAAQ,UAAR,CAAjB;;AAEA,MAAMK,kBAAkBL,QAAQ,UAAR,CAAxB;;AAEA,MAAMM,cAAcC,QAAQC,GAAR,CAAYF,WAAhC;;AAEA,MAAMG,SAASV,SAAf;AACAU,OAAOC,GAAP,CAAWT,MAAX;;AAEA,MAAMU,OAAO;AACXC,iBAAe,IADJ;AAEXC,kBAAgBC,OAAOC,SAFZ;AAGXC,qBAAmB;AAHR,CAAb;;AAMAZ,SAASa,OAAT,CAAiBX,WAAjB,EAA8BK,IAA9B;;AAEA,MAAMO,kBAAkBd,SAASe,UAAjC;;AAEAD,gBAAgBE,EAAhB,CAAmB,OAAnB,EAA4BC,KAAK;AAC/B,MAAIA,EAAEC,OAAF,CAAUC,IAAV,KAAmB,WAAvB,EAAoC;AAClCC,YAAQC,GAAR,CAAYJ,CAAZ;AACAjB,aAASa,OAAT,CAAiBX,WAAjB,EAA8BK,IAA9B;AACD;AACDa,UAAQC,GAAR,CAAYJ,CAAZ;AACD,CAND;;AAQAH,gBAAgBQ,IAAhB,CAAqB,MAArB,EAA6B,MAAM;AACjCF,UAAQC,GAAR,CAAa,qCAAoCnB,WAAY,EAA7D;AACD,CAFD;;AAIAG,OAAOC,GAAP,CACIL,gBAAgBsB,OAAhB,CAAwBC,GAD5B,EAEI1B,YAAY,OAAO;AACjB2B,UAAQxB,gBAAgBwB,MADP;AAEjBC,YAAU,IAFO;AAGjBC,eAAaC,UAAU;AACrBV,aAASU,MAAMV,OADM;AAErBW,WAAO,CAACD,MAAMV,OAAN,CAAcY,KAAd,CAAoB,sBAApB,CAAD,GAA+CF,MAAMC,KAAN,CAAYE,KAAZ,CAAkB,IAAlB,CAA/C,GAAyE;AAF3D,GAAV;AAHI,CAAP,CAAZ,CAFJ",
      "file": "server.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "const express = require('express');\n\nconst cors = require('cors');\nconst graphqlHTTP = require('express-graphql');\nconst expressPlayground = require('graphql-playground-middleware-express');\nconst mongoose = require('mongoose');\n\nconst lifescopeSchema = require('./schema');\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nconst server = express();\nserver.use(cors());\n\nconst opts = {\n  autoReconnect: true,\n  reconnectTries: Number.MAX_VALUE,\n  reconnectInterval: 1000,\n};\n\nmongoose.connect(MONGODB_URI, opts);\n\nconst mongooseConnect = mongoose.connection;\n\nmongooseConnect.on('error', e => {\n  if (e.message.code === 'ETIMEDOUT') {\n    console.log(e);\n    mongoose.connect(MONGODB_URI, opts);\n  }\n  console.log(e);\n});\n\nmongooseConnect.once('open', () => {\n  console.log(`MongoDB successfully connected to ${MONGODB_URI}`);\n});\n\nserver.use(\n    lifescopeSchema.default.uri,\n    graphqlHTTP(() => ({\n      schema: lifescopeSchema.schema,\n      graphiql: true,\n      formatError: error => ({\n        message: error.message,\n        stack: !error.message.match(/for security reason/i) ? error.stack.split('\\n') : null,\n      }),\n    }))\n);\n"
      ]
    },
    "mtime": 1521240655892
  },
  "{\"filename\":\"/app/schema/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/schema\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./schema",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "schema"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/schema/index.js",
      "filenameRelative": "/app/schema/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/schema",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/schema",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _schema = require('./schema');\n\nvar _schema2 = _interopRequireDefault(_schema);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  uri: '/user',\n  schema: _schema2.default,\n  title: 'User: simple schema with one type.',\n  description: 'This schema implements all 13 CRUD operations available in graphql-compose-mongoose.',\n  github: 'https://github.com/nodkz/graphql-compose-examples/tree/master/examples/user',\n  queries: [{\n    title: 'Find by id',\n    query: `\n{\n  userById(_id: \"57bb44dd21d2befb7ca3f010\") {\n    _id\n    name\n    languages {\n      language\n      skill\n    }\n    contacts {\n      email\n    }\n    gender\n    age\n  }\n}\n      `\n  }, {\n    title: 'Find one User',\n    query: `\n{\n  userOne(filter: { age: 18 }, sort: _ID_ASC) {\n    name\n    languages {\n      language\n      skill\n    }\n    contacts {\n      email\n    }\n    gender\n    age\n  }\n}\n      `\n  }, {\n    title: 'Find many Users',\n    query: `\n{\n  userMany(filter: { gender: male }, limit: 5, sort: _ID_ASC) {\n    name\n    languages {\n      language\n      skill\n    }\n    contacts {\n      email\n    }\n    gender\n    age\n  }\n}\n      `\n  }, {\n    title: 'Find many Users (by geo distance)',\n    query: `\n{\n  distance_5_km: userMany(filter: {\n    geoDistance: {\n      lng: 76.911982,\n      lat: 43.233893,\n      distance: 5000,\n    }\n  }) {\n    name\n    address {\n      geo\n    }\n  }\n  distance_100_km: userMany(filter: {\n    geoDistance: {\n      lng: 76.911982,\n      lat: 43.233893,\n      distance: 100000,\n    }\n  }) {\n    name\n    address {\n      geo\n    }\n  }\n}\n      `\n  }, {\n    title: 'Find User with field of MIXED type',\n    query: `\n{\n  userById(_id: \"57bb44dd21d2befb7ca3f001\") {\n    _id\n    name\n    someMixed\n  }\n}\n      `\n  }, {\n    title: 'Create user mutation (with arg of MIXED type)',\n    query: `\nmutation {\n  userCreate(record: {\n    name: \"My Name\",\n    age: 24,\n    gender: ladyboy,\n    contacts: {\n      email: \"mail@example.com\",\n      phones: [\n        \"111-222-333-444\",\n        \"444-555-666-777\"\n      ]\n    },\n    someMixed: {\n      a: 1,\n      b: 2,\n      c: [ 1, 2, 3, true, false, { sub: 1 }]\n    }\n  }) {\n    recordId\n    record {\n      name\n      age\n      gender\n      contacts {\n        email\n        phones\n      }\n      someMixed\n    }\n  }\n}\n      `\n  }, {\n    title: 'Pagination',\n    query: `\n{\n  userPagination(filter: { gender: male }, perPage: 2, page: 2, sort: _ID_ASC) {\n    items {\n      name\n      languages {\n        language\n        skill\n      }\n      contacts {\n        email\n      }\n      gender\n      age\n    }\n    count\n    pageInfo {\n      currentPage\n      perPage\n      itemCount\n      pageCount\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n}\n      `\n  }]\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInVyaSIsInNjaGVtYSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJnaXRodWIiLCJxdWVyaWVzIiwicXVlcnkiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBOzs7Ozs7a0JBRWU7QUFDYkEsT0FBSyxPQURRO0FBRWJDLDBCQUZhO0FBR2JDLFNBQU8sb0NBSE07QUFJYkMsZUFDRSxzRkFMVztBQU1iQyxVQUFRLDZFQU5LO0FBT2JDLFdBQVMsQ0FDUDtBQUNFSCxXQUFPLFlBRFQ7QUFFRUksV0FBUTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFGVixHQURPLEVBcUJQO0FBQ0VKLFdBQU8sZUFEVDtBQUVFSSxXQUFROzs7Ozs7Ozs7Ozs7Ozs7O0FBRlYsR0FyQk8sRUF3Q1A7QUFDRUosV0FBTyxpQkFEVDtBQUVFSSxXQUFROzs7Ozs7Ozs7Ozs7Ozs7O0FBRlYsR0F4Q08sRUEyRFA7QUFDRUosV0FBTyxtQ0FEVDtBQUVFSSxXQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRlYsR0EzRE8sRUEwRlA7QUFDRUosV0FBTyxvQ0FEVDtBQUVFSSxXQUFROzs7Ozs7Ozs7QUFGVixHQTFGTyxFQXNHUDtBQUNFSixXQUFPLCtDQURUO0FBRUVJLFdBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUZWLEdBdEdPLEVBMElQO0FBQ0VKLFdBQU8sWUFEVDtBQUVFSSxXQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFGVixHQTFJTztBQVBJLEMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2FwcC9zY2hlbWEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuXG5pbXBvcnQgc2NoZW1hIGZyb20gJy4vc2NoZW1hJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICB1cmk6ICcvdXNlcicsXG4gIHNjaGVtYSxcbiAgdGl0bGU6ICdVc2VyOiBzaW1wbGUgc2NoZW1hIHdpdGggb25lIHR5cGUuJyxcbiAgZGVzY3JpcHRpb246XG4gICAgJ1RoaXMgc2NoZW1hIGltcGxlbWVudHMgYWxsIDEzIENSVUQgb3BlcmF0aW9ucyBhdmFpbGFibGUgaW4gZ3JhcGhxbC1jb21wb3NlLW1vbmdvb3NlLicsXG4gIGdpdGh1YjogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ub2Rrei9ncmFwaHFsLWNvbXBvc2UtZXhhbXBsZXMvdHJlZS9tYXN0ZXIvZXhhbXBsZXMvdXNlcicsXG4gIHF1ZXJpZXM6IFtcbiAgICB7XG4gICAgICB0aXRsZTogJ0ZpbmQgYnkgaWQnLFxuICAgICAgcXVlcnk6IGBcbntcbiAgdXNlckJ5SWQoX2lkOiBcIjU3YmI0NGRkMjFkMmJlZmI3Y2EzZjAxMFwiKSB7XG4gICAgX2lkXG4gICAgbmFtZVxuICAgIGxhbmd1YWdlcyB7XG4gICAgICBsYW5ndWFnZVxuICAgICAgc2tpbGxcbiAgICB9XG4gICAgY29udGFjdHMge1xuICAgICAgZW1haWxcbiAgICB9XG4gICAgZ2VuZGVyXG4gICAgYWdlXG4gIH1cbn1cbiAgICAgIGAsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ0ZpbmQgb25lIFVzZXInLFxuICAgICAgcXVlcnk6IGBcbntcbiAgdXNlck9uZShmaWx0ZXI6IHsgYWdlOiAxOCB9LCBzb3J0OiBfSURfQVNDKSB7XG4gICAgbmFtZVxuICAgIGxhbmd1YWdlcyB7XG4gICAgICBsYW5ndWFnZVxuICAgICAgc2tpbGxcbiAgICB9XG4gICAgY29udGFjdHMge1xuICAgICAgZW1haWxcbiAgICB9XG4gICAgZ2VuZGVyXG4gICAgYWdlXG4gIH1cbn1cbiAgICAgIGAsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ0ZpbmQgbWFueSBVc2VycycsXG4gICAgICBxdWVyeTogYFxue1xuICB1c2VyTWFueShmaWx0ZXI6IHsgZ2VuZGVyOiBtYWxlIH0sIGxpbWl0OiA1LCBzb3J0OiBfSURfQVNDKSB7XG4gICAgbmFtZVxuICAgIGxhbmd1YWdlcyB7XG4gICAgICBsYW5ndWFnZVxuICAgICAgc2tpbGxcbiAgICB9XG4gICAgY29udGFjdHMge1xuICAgICAgZW1haWxcbiAgICB9XG4gICAgZ2VuZGVyXG4gICAgYWdlXG4gIH1cbn1cbiAgICAgIGAsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ0ZpbmQgbWFueSBVc2VycyAoYnkgZ2VvIGRpc3RhbmNlKScsXG4gICAgICBxdWVyeTogYFxue1xuICBkaXN0YW5jZV81X2ttOiB1c2VyTWFueShmaWx0ZXI6IHtcbiAgICBnZW9EaXN0YW5jZToge1xuICAgICAgbG5nOiA3Ni45MTE5ODIsXG4gICAgICBsYXQ6IDQzLjIzMzg5MyxcbiAgICAgIGRpc3RhbmNlOiA1MDAwLFxuICAgIH1cbiAgfSkge1xuICAgIG5hbWVcbiAgICBhZGRyZXNzIHtcbiAgICAgIGdlb1xuICAgIH1cbiAgfVxuICBkaXN0YW5jZV8xMDBfa206IHVzZXJNYW55KGZpbHRlcjoge1xuICAgIGdlb0Rpc3RhbmNlOiB7XG4gICAgICBsbmc6IDc2LjkxMTk4MixcbiAgICAgIGxhdDogNDMuMjMzODkzLFxuICAgICAgZGlzdGFuY2U6IDEwMDAwMCxcbiAgICB9XG4gIH0pIHtcbiAgICBuYW1lXG4gICAgYWRkcmVzcyB7XG4gICAgICBnZW9cbiAgICB9XG4gIH1cbn1cbiAgICAgIGAsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ0ZpbmQgVXNlciB3aXRoIGZpZWxkIG9mIE1JWEVEIHR5cGUnLFxuICAgICAgcXVlcnk6IGBcbntcbiAgdXNlckJ5SWQoX2lkOiBcIjU3YmI0NGRkMjFkMmJlZmI3Y2EzZjAwMVwiKSB7XG4gICAgX2lkXG4gICAgbmFtZVxuICAgIHNvbWVNaXhlZFxuICB9XG59XG4gICAgICBgLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdDcmVhdGUgdXNlciBtdXRhdGlvbiAod2l0aCBhcmcgb2YgTUlYRUQgdHlwZSknLFxuICAgICAgcXVlcnk6IGBcbm11dGF0aW9uIHtcbiAgdXNlckNyZWF0ZShyZWNvcmQ6IHtcbiAgICBuYW1lOiBcIk15IE5hbWVcIixcbiAgICBhZ2U6IDI0LFxuICAgIGdlbmRlcjogbGFkeWJveSxcbiAgICBjb250YWN0czoge1xuICAgICAgZW1haWw6IFwibWFpbEBleGFtcGxlLmNvbVwiLFxuICAgICAgcGhvbmVzOiBbXG4gICAgICAgIFwiMTExLTIyMi0zMzMtNDQ0XCIsXG4gICAgICAgIFwiNDQ0LTU1NS02NjYtNzc3XCJcbiAgICAgIF1cbiAgICB9LFxuICAgIHNvbWVNaXhlZDoge1xuICAgICAgYTogMSxcbiAgICAgIGI6IDIsXG4gICAgICBjOiBbIDEsIDIsIDMsIHRydWUsIGZhbHNlLCB7IHN1YjogMSB9XVxuICAgIH1cbiAgfSkge1xuICAgIHJlY29yZElkXG4gICAgcmVjb3JkIHtcbiAgICAgIG5hbWVcbiAgICAgIGFnZVxuICAgICAgZ2VuZGVyXG4gICAgICBjb250YWN0cyB7XG4gICAgICAgIGVtYWlsXG4gICAgICAgIHBob25lc1xuICAgICAgfVxuICAgICAgc29tZU1peGVkXG4gICAgfVxuICB9XG59XG4gICAgICBgLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdQYWdpbmF0aW9uJyxcbiAgICAgIHF1ZXJ5OiBgXG57XG4gIHVzZXJQYWdpbmF0aW9uKGZpbHRlcjogeyBnZW5kZXI6IG1hbGUgfSwgcGVyUGFnZTogMiwgcGFnZTogMiwgc29ydDogX0lEX0FTQykge1xuICAgIGl0ZW1zIHtcbiAgICAgIG5hbWVcbiAgICAgIGxhbmd1YWdlcyB7XG4gICAgICAgIGxhbmd1YWdlXG4gICAgICAgIHNraWxsXG4gICAgICB9XG4gICAgICBjb250YWN0cyB7XG4gICAgICAgIGVtYWlsXG4gICAgICB9XG4gICAgICBnZW5kZXJcbiAgICAgIGFnZVxuICAgIH1cbiAgICBjb3VudFxuICAgIHBhZ2VJbmZvIHtcbiAgICAgIGN1cnJlbnRQYWdlXG4gICAgICBwZXJQYWdlXG4gICAgICBpdGVtQ291bnRcbiAgICAgIHBhZ2VDb3VudFxuICAgICAgaGFzUHJldmlvdXNQYWdlXG4gICAgICBoYXNOZXh0UGFnZVxuICAgIH1cbiAgfVxufVxuICAgICAgYCxcbiAgICB9LFxuICBdLFxufTsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "uri",
        "schema",
        "title",
        "description",
        "github",
        "queries",
        "query"
      ],
      "mappings": ";;;;;;AAEA;;;;;;kBAEe;AACbA,OAAK,OADQ;AAEbC,0BAFa;AAGbC,SAAO,oCAHM;AAIbC,eACE,sFALW;AAMbC,UAAQ,6EANK;AAObC,WAAS,CACP;AACEH,WAAO,YADT;AAEEI,WAAQ;;;;;;;;;;;;;;;;;AAFV,GADO,EAqBP;AACEJ,WAAO,eADT;AAEEI,WAAQ;;;;;;;;;;;;;;;;AAFV,GArBO,EAwCP;AACEJ,WAAO,iBADT;AAEEI,WAAQ;;;;;;;;;;;;;;;;AAFV,GAxCO,EA2DP;AACEJ,WAAO,mCADT;AAEEI,WAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFV,GA3DO,EA0FP;AACEJ,WAAO,oCADT;AAEEI,WAAQ;;;;;;;;;AAFV,GA1FO,EAsGP;AACEJ,WAAO,+CADT;AAEEI,WAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFV,GAtGO,EA0IP;AACEJ,WAAO,YADT;AAEEI,WAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFV,GA1IO;AAPI,C",
      "file": "index.js",
      "sourceRoot": "/app/schema",
      "sourcesContent": [
        "/* @flow */\n\nimport schema from './schema';\n\nexport default {\n  uri: '/user',\n  schema,\n  title: 'User: simple schema with one type.',\n  description:\n    'This schema implements all 13 CRUD operations available in graphql-compose-mongoose.',\n  github: 'https://github.com/nodkz/graphql-compose-examples/tree/master/examples/user',\n  queries: [\n    {\n      title: 'Find by id',\n      query: `\n{\n  userById(_id: \"57bb44dd21d2befb7ca3f010\") {\n    _id\n    name\n    languages {\n      language\n      skill\n    }\n    contacts {\n      email\n    }\n    gender\n    age\n  }\n}\n      `,\n    },\n    {\n      title: 'Find one User',\n      query: `\n{\n  userOne(filter: { age: 18 }, sort: _ID_ASC) {\n    name\n    languages {\n      language\n      skill\n    }\n    contacts {\n      email\n    }\n    gender\n    age\n  }\n}\n      `,\n    },\n    {\n      title: 'Find many Users',\n      query: `\n{\n  userMany(filter: { gender: male }, limit: 5, sort: _ID_ASC) {\n    name\n    languages {\n      language\n      skill\n    }\n    contacts {\n      email\n    }\n    gender\n    age\n  }\n}\n      `,\n    },\n    {\n      title: 'Find many Users (by geo distance)',\n      query: `\n{\n  distance_5_km: userMany(filter: {\n    geoDistance: {\n      lng: 76.911982,\n      lat: 43.233893,\n      distance: 5000,\n    }\n  }) {\n    name\n    address {\n      geo\n    }\n  }\n  distance_100_km: userMany(filter: {\n    geoDistance: {\n      lng: 76.911982,\n      lat: 43.233893,\n      distance: 100000,\n    }\n  }) {\n    name\n    address {\n      geo\n    }\n  }\n}\n      `,\n    },\n    {\n      title: 'Find User with field of MIXED type',\n      query: `\n{\n  userById(_id: \"57bb44dd21d2befb7ca3f001\") {\n    _id\n    name\n    someMixed\n  }\n}\n      `,\n    },\n    {\n      title: 'Create user mutation (with arg of MIXED type)',\n      query: `\nmutation {\n  userCreate(record: {\n    name: \"My Name\",\n    age: 24,\n    gender: ladyboy,\n    contacts: {\n      email: \"mail@example.com\",\n      phones: [\n        \"111-222-333-444\",\n        \"444-555-666-777\"\n      ]\n    },\n    someMixed: {\n      a: 1,\n      b: 2,\n      c: [ 1, 2, 3, true, false, { sub: 1 }]\n    }\n  }) {\n    recordId\n    record {\n      name\n      age\n      gender\n      contacts {\n        email\n        phones\n      }\n      someMixed\n    }\n  }\n}\n      `,\n    },\n    {\n      title: 'Pagination',\n      query: `\n{\n  userPagination(filter: { gender: male }, perPage: 2, page: 2, sort: _ID_ASC) {\n    items {\n      name\n      languages {\n        language\n        skill\n      }\n      contacts {\n        email\n      }\n      gender\n      age\n    }\n    count\n    pageInfo {\n      currentPage\n      perPage\n      itemCount\n      pageCount\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n}\n      `,\n    },\n  ],\n};"
      ]
    },
    "mtime": 1521176138312
  },
  "{\"filename\":\"/app/schema/schema.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/schema\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "graphql-compose",
            "imported": [
              "SchemaComposer"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "SchemaComposer",
                "local": "SchemaComposer"
              }
            ]
          },
          {
            "source": "./models/user",
            "imported": [
              "UserTC"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "UserTC",
                "local": "UserTC"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/schema/schema.js",
      "filenameRelative": "/app/schema/schema.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "schema.js",
      "sourceFileName": "schema.js",
      "sourceRoot": "/app/schema",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/schema",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "schema"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _graphqlCompose = require('graphql-compose');\n\nvar _user = require('./models/user');\n\n// SINGLE SCHEMA ON SERVER\n// import { GQC } from 'graphql-compose';\n\n// MULTI SCHEMA MODE IN ONE SERVER\n// create new GQC from SchemaComposer\nconst GQC = new _graphqlCompose.SchemaComposer();\n\n// create GraphQL Schema with all available resolvers for User Type\nGQC.rootQuery().addFields({\n  userById: _user.UserTC.getResolver('findById'),\n  userByIds: _user.UserTC.getResolver('findByIds'),\n  userOne: _user.UserTC.getResolver('findOne'),\n  userMany: _user.UserTC.getResolver('findMany'), // .debug(), // debug info to console for this resolver\n  userTotal: _user.UserTC.getResolver('count'),\n  userConnection: _user.UserTC.getResolver('connection'),\n  userPagination: _user.UserTC.getResolver('pagination')\n});\n// For debug purposes you may display resolver internals in the following manner:\n// console.log(UserTC.getResolver('findMany').toString());\n\nGQC.rootMutation().addFields({\n  userCreate: _user.UserTC.getResolver('createOne'),\n  userUpdateById: _user.UserTC.getResolver('updateById'),\n  userUpdateOne: _user.UserTC.getResolver('updateOne'),\n  userUpdateMany: _user.UserTC.getResolver('updateMany'),\n  userRemoveById: _user.UserTC.getResolver('removeById'),\n  userRemoveOne: _user.UserTC.getResolver('removeOne'),\n  userRemoveMany: _user.UserTC.getResolver('removeMany')\n});\n\nconst graphqlSchema = GQC.buildSchema();\n\ngraphqlSchema.uri = '/user';\n\nexports.default = graphqlSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJHUUMiLCJyb290UXVlcnkiLCJhZGRGaWVsZHMiLCJ1c2VyQnlJZCIsImdldFJlc29sdmVyIiwidXNlckJ5SWRzIiwidXNlck9uZSIsInVzZXJNYW55IiwidXNlclRvdGFsIiwidXNlckNvbm5lY3Rpb24iLCJ1c2VyUGFnaW5hdGlvbiIsInJvb3RNdXRhdGlvbiIsInVzZXJDcmVhdGUiLCJ1c2VyVXBkYXRlQnlJZCIsInVzZXJVcGRhdGVPbmUiLCJ1c2VyVXBkYXRlTWFueSIsInVzZXJSZW1vdmVCeUlkIiwidXNlclJlbW92ZU9uZSIsInVzZXJSZW1vdmVNYW55IiwiZ3JhcGhxbFNjaGVtYSIsImJ1aWxkU2NoZW1hIiwidXJpIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFNQTs7QUFDQTs7QUFOQTtBQUNBOztBQUVBO0FBQ0E7QUFJQSxNQUFNQSxNQUFNLG9DQUFaOztBQUVBO0FBQ0FBLElBQUlDLFNBQUosR0FBZ0JDLFNBQWhCLENBQTBCO0FBQ3hCQyxZQUFVLGFBQU9DLFdBQVAsQ0FBbUIsVUFBbkIsQ0FEYztBQUV4QkMsYUFBVyxhQUFPRCxXQUFQLENBQW1CLFdBQW5CLENBRmE7QUFHeEJFLFdBQVMsYUFBT0YsV0FBUCxDQUFtQixTQUFuQixDQUhlO0FBSXhCRyxZQUFVLGFBQU9ILFdBQVAsQ0FBbUIsVUFBbkIsQ0FKYyxFQUlrQjtBQUMxQ0ksYUFBVyxhQUFPSixXQUFQLENBQW1CLE9BQW5CLENBTGE7QUFNeEJLLGtCQUFnQixhQUFPTCxXQUFQLENBQW1CLFlBQW5CLENBTlE7QUFPeEJNLGtCQUFnQixhQUFPTixXQUFQLENBQW1CLFlBQW5CO0FBUFEsQ0FBMUI7QUFTQTtBQUNBOztBQUVBSixJQUFJVyxZQUFKLEdBQW1CVCxTQUFuQixDQUE2QjtBQUMzQlUsY0FBWSxhQUFPUixXQUFQLENBQW1CLFdBQW5CLENBRGU7QUFFM0JTLGtCQUFnQixhQUFPVCxXQUFQLENBQW1CLFlBQW5CLENBRlc7QUFHM0JVLGlCQUFlLGFBQU9WLFdBQVAsQ0FBbUIsV0FBbkIsQ0FIWTtBQUkzQlcsa0JBQWdCLGFBQU9YLFdBQVAsQ0FBbUIsWUFBbkIsQ0FKVztBQUszQlksa0JBQWdCLGFBQU9aLFdBQVAsQ0FBbUIsWUFBbkIsQ0FMVztBQU0zQmEsaUJBQWUsYUFBT2IsV0FBUCxDQUFtQixXQUFuQixDQU5ZO0FBTzNCYyxrQkFBZ0IsYUFBT2QsV0FBUCxDQUFtQixZQUFuQjtBQVBXLENBQTdCOztBQVVBLE1BQU1lLGdCQUFnQm5CLElBQUlvQixXQUFKLEVBQXRCOztBQUVBRCxjQUFjRSxHQUFkLEdBQW9CLE9BQXBCOztrQkFFZUYsYSIsImZpbGUiOiJzY2hlbWEuanMiLCJzb3VyY2VSb290IjoiL2FwcC9zY2hlbWEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuLy8gU0lOR0xFIFNDSEVNQSBPTiBTRVJWRVJcbi8vIGltcG9ydCB7IEdRQyB9IGZyb20gJ2dyYXBocWwtY29tcG9zZSc7XG5cbi8vIE1VTFRJIFNDSEVNQSBNT0RFIElOIE9ORSBTRVJWRVJcbi8vIGNyZWF0ZSBuZXcgR1FDIGZyb20gU2NoZW1hQ29tcG9zZXJcbmltcG9ydCB7IFNjaGVtYUNvbXBvc2VyIH0gZnJvbSAnZ3JhcGhxbC1jb21wb3NlJztcbmltcG9ydCB7IFVzZXJUQyB9IGZyb20gJy4vbW9kZWxzL3VzZXInO1xuXG5jb25zdCBHUUMgPSBuZXcgU2NoZW1hQ29tcG9zZXIoKTtcblxuLy8gY3JlYXRlIEdyYXBoUUwgU2NoZW1hIHdpdGggYWxsIGF2YWlsYWJsZSByZXNvbHZlcnMgZm9yIFVzZXIgVHlwZVxuR1FDLnJvb3RRdWVyeSgpLmFkZEZpZWxkcyh7XG4gIHVzZXJCeUlkOiBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ2ZpbmRCeUlkJyksXG4gIHVzZXJCeUlkczogVXNlclRDLmdldFJlc29sdmVyKCdmaW5kQnlJZHMnKSxcbiAgdXNlck9uZTogVXNlclRDLmdldFJlc29sdmVyKCdmaW5kT25lJyksXG4gIHVzZXJNYW55OiBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ2ZpbmRNYW55JyksIC8vIC5kZWJ1ZygpLCAvLyBkZWJ1ZyBpbmZvIHRvIGNvbnNvbGUgZm9yIHRoaXMgcmVzb2x2ZXJcbiAgdXNlclRvdGFsOiBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ2NvdW50JyksXG4gIHVzZXJDb25uZWN0aW9uOiBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ2Nvbm5lY3Rpb24nKSxcbiAgdXNlclBhZ2luYXRpb246IFVzZXJUQy5nZXRSZXNvbHZlcigncGFnaW5hdGlvbicpLFxufSk7XG4vLyBGb3IgZGVidWcgcHVycG9zZXMgeW91IG1heSBkaXNwbGF5IHJlc29sdmVyIGludGVybmFscyBpbiB0aGUgZm9sbG93aW5nIG1hbm5lcjpcbi8vIGNvbnNvbGUubG9nKFVzZXJUQy5nZXRSZXNvbHZlcignZmluZE1hbnknKS50b1N0cmluZygpKTtcblxuR1FDLnJvb3RNdXRhdGlvbigpLmFkZEZpZWxkcyh7XG4gIHVzZXJDcmVhdGU6IFVzZXJUQy5nZXRSZXNvbHZlcignY3JlYXRlT25lJyksXG4gIHVzZXJVcGRhdGVCeUlkOiBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ3VwZGF0ZUJ5SWQnKSxcbiAgdXNlclVwZGF0ZU9uZTogVXNlclRDLmdldFJlc29sdmVyKCd1cGRhdGVPbmUnKSxcbiAgdXNlclVwZGF0ZU1hbnk6IFVzZXJUQy5nZXRSZXNvbHZlcigndXBkYXRlTWFueScpLFxuICB1c2VyUmVtb3ZlQnlJZDogVXNlclRDLmdldFJlc29sdmVyKCdyZW1vdmVCeUlkJyksXG4gIHVzZXJSZW1vdmVPbmU6IFVzZXJUQy5nZXRSZXNvbHZlcigncmVtb3ZlT25lJyksXG4gIHVzZXJSZW1vdmVNYW55OiBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ3JlbW92ZU1hbnknKSxcbn0pO1xuXG5jb25zdCBncmFwaHFsU2NoZW1hID0gR1FDLmJ1aWxkU2NoZW1hKCk7XG5cbmdyYXBocWxTY2hlbWEudXJpID0gJy91c2VyJztcblxuZXhwb3J0IGRlZmF1bHQgZ3JhcGhxbFNjaGVtYTsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "GQC",
        "rootQuery",
        "addFields",
        "userById",
        "getResolver",
        "userByIds",
        "userOne",
        "userMany",
        "userTotal",
        "userConnection",
        "userPagination",
        "rootMutation",
        "userCreate",
        "userUpdateById",
        "userUpdateOne",
        "userUpdateMany",
        "userRemoveById",
        "userRemoveOne",
        "userRemoveMany",
        "graphqlSchema",
        "buildSchema",
        "uri"
      ],
      "mappings": ";;;;;;AAMA;;AACA;;AANA;AACA;;AAEA;AACA;AAIA,MAAMA,MAAM,oCAAZ;;AAEA;AACAA,IAAIC,SAAJ,GAAgBC,SAAhB,CAA0B;AACxBC,YAAU,aAAOC,WAAP,CAAmB,UAAnB,CADc;AAExBC,aAAW,aAAOD,WAAP,CAAmB,WAAnB,CAFa;AAGxBE,WAAS,aAAOF,WAAP,CAAmB,SAAnB,CAHe;AAIxBG,YAAU,aAAOH,WAAP,CAAmB,UAAnB,CAJc,EAIkB;AAC1CI,aAAW,aAAOJ,WAAP,CAAmB,OAAnB,CALa;AAMxBK,kBAAgB,aAAOL,WAAP,CAAmB,YAAnB,CANQ;AAOxBM,kBAAgB,aAAON,WAAP,CAAmB,YAAnB;AAPQ,CAA1B;AASA;AACA;;AAEAJ,IAAIW,YAAJ,GAAmBT,SAAnB,CAA6B;AAC3BU,cAAY,aAAOR,WAAP,CAAmB,WAAnB,CADe;AAE3BS,kBAAgB,aAAOT,WAAP,CAAmB,YAAnB,CAFW;AAG3BU,iBAAe,aAAOV,WAAP,CAAmB,WAAnB,CAHY;AAI3BW,kBAAgB,aAAOX,WAAP,CAAmB,YAAnB,CAJW;AAK3BY,kBAAgB,aAAOZ,WAAP,CAAmB,YAAnB,CALW;AAM3Ba,iBAAe,aAAOb,WAAP,CAAmB,WAAnB,CANY;AAO3Bc,kBAAgB,aAAOd,WAAP,CAAmB,YAAnB;AAPW,CAA7B;;AAUA,MAAMe,gBAAgBnB,IAAIoB,WAAJ,EAAtB;;AAEAD,cAAcE,GAAd,GAAoB,OAApB;;kBAEeF,a",
      "file": "schema.js",
      "sourceRoot": "/app/schema",
      "sourcesContent": [
        "/* @flow */\n// SINGLE SCHEMA ON SERVER\n// import { GQC } from 'graphql-compose';\n\n// MULTI SCHEMA MODE IN ONE SERVER\n// create new GQC from SchemaComposer\nimport { SchemaComposer } from 'graphql-compose';\nimport { UserTC } from './models/user';\n\nconst GQC = new SchemaComposer();\n\n// create GraphQL Schema with all available resolvers for User Type\nGQC.rootQuery().addFields({\n  userById: UserTC.getResolver('findById'),\n  userByIds: UserTC.getResolver('findByIds'),\n  userOne: UserTC.getResolver('findOne'),\n  userMany: UserTC.getResolver('findMany'), // .debug(), // debug info to console for this resolver\n  userTotal: UserTC.getResolver('count'),\n  userConnection: UserTC.getResolver('connection'),\n  userPagination: UserTC.getResolver('pagination'),\n});\n// For debug purposes you may display resolver internals in the following manner:\n// console.log(UserTC.getResolver('findMany').toString());\n\nGQC.rootMutation().addFields({\n  userCreate: UserTC.getResolver('createOne'),\n  userUpdateById: UserTC.getResolver('updateById'),\n  userUpdateOne: UserTC.getResolver('updateOne'),\n  userUpdateMany: UserTC.getResolver('updateMany'),\n  userRemoveById: UserTC.getResolver('removeById'),\n  userRemoveOne: UserTC.getResolver('removeOne'),\n  userRemoveMany: UserTC.getResolver('removeMany'),\n});\n\nconst graphqlSchema = GQC.buildSchema();\n\ngraphqlSchema.uri = '/user';\n\nexport default graphqlSchema;"
      ]
    },
    "mtime": 1521240286405
  },
  "{\"filename\":\"/app/schema/models/user.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/schema/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          },
          {
            "source": "graphql-compose-mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "composeWithMongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "UserSchema",
            "User",
            "UserTC"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "UserSchema",
              "exported": "UserSchema"
            },
            {
              "kind": "local",
              "local": "User",
              "exported": "User"
            },
            {
              "kind": "local",
              "local": "UserTC",
              "exported": "UserTC"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/schema/models/user.js",
      "filenameRelative": "/app/schema/models/user.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.js",
      "sourceFileName": "user.js",
      "sourceRoot": "/app/schema/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/schema/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserTC = exports.User = exports.UserSchema = undefined;\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nvar _graphqlComposeMongoose = require('graphql-compose-mongoose');\n\nvar _graphqlComposeMongoose2 = _interopRequireDefault(_graphqlComposeMongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst AccountTypeSchema = new _mongoose2.default.Schema({\n  language: String,\n  skill: {\n    type: String,\n    enum: ['free', 'plus', 'pro']\n  }\n}, {\n  _id: false\n});\n\nconst AddressSchema = new _mongoose2.default.Schema({\n  street: String,\n  geo: {\n    type: [Number], // [<longitude>, <latitude>]\n    index: '2dsphere' // create the geospatial index\n  }\n});\n\nconst UserSchema = exports.UserSchema = new _mongoose2.default.Schema({\n  name: {\n    type: String,\n    index: true\n  },\n  is_active: {\n    type: Boolean,\n    index: true\n  },\n  age: {\n    type: Number,\n    index: true\n  },\n  accountType: {\n    type: [AccountTypeSchema],\n    default: []\n  },\n  contacts: {\n    // another mongoose way for providing embedded documents\n    email: String,\n    phones: [String] // array of strings\n  },\n  gender: {\n    // enum field with values\n    type: String,\n    enum: ['male', 'female', 'ladyboy']\n  },\n  address: {\n    type: AddressSchema\n  },\n  otherData: {\n    type: _mongoose2.default.Schema.Types.Mixed,\n    description: 'Some dynamic data'\n  }\n}, {\n  collection: 'users'\n});\n\nUserSchema.index({ gender: 1, age: -1 });\n\nconst User = exports.User = _mongoose2.default.model('User', UserSchema);\n\nconst UserTC = exports.UserTC = (0, _graphqlComposeMongoose2.default)(User);\n\nUserTC.setResolver('findMany', UserTC.getResolver('findMany').addFilterArg({\n  name: 'geoDistance',\n  type: `input GeoDistance {\n      lng: Float!\n      lat: Float!\n      # Distance in meters\n      distance: Float!\n    }`,\n  description: 'Search by distance in meters',\n  query: (rawQuery, value, resolveParams) => {\n    // eslint-disable-line\n    if (!value.lng || !value.lat || !value.distance) return;\n    // read more https://docs.mongodb.com/manual/tutorial/query-a-2dsphere-index/\n    rawQuery['address.geo'] = {\n      $near: {\n        $geometry: {\n          type: 'Point',\n          coordinates: [value.lng, value.lat]\n        },\n        $maxDistance: value.distance // <distance in meters>\n      }\n    };\n  }\n})\n// /* FOR DEBUG */\n//   .debug()\n// /* OR MORE PRECISELY */\n//   .debugParams()\n//   .debugPayload()\n//   .debugExecTime()\n);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiQWNjb3VudFR5cGVTY2hlbWEiLCJTY2hlbWEiLCJsYW5ndWFnZSIsIlN0cmluZyIsInNraWxsIiwidHlwZSIsImVudW0iLCJfaWQiLCJBZGRyZXNzU2NoZW1hIiwic3RyZWV0IiwiZ2VvIiwiTnVtYmVyIiwiaW5kZXgiLCJVc2VyU2NoZW1hIiwibmFtZSIsImlzX2FjdGl2ZSIsIkJvb2xlYW4iLCJhZ2UiLCJhY2NvdW50VHlwZSIsImRlZmF1bHQiLCJjb250YWN0cyIsImVtYWlsIiwicGhvbmVzIiwiZ2VuZGVyIiwiYWRkcmVzcyIsIm90aGVyRGF0YSIsIlR5cGVzIiwiTWl4ZWQiLCJkZXNjcmlwdGlvbiIsImNvbGxlY3Rpb24iLCJVc2VyIiwibW9kZWwiLCJVc2VyVEMiLCJzZXRSZXNvbHZlciIsImdldFJlc29sdmVyIiwiYWRkRmlsdGVyQXJnIiwicXVlcnkiLCJyYXdRdWVyeSIsInZhbHVlIiwicmVzb2x2ZVBhcmFtcyIsImxuZyIsImxhdCIsImRpc3RhbmNlIiwiJG5lYXIiLCIkZ2VvbWV0cnkiLCJjb29yZGluYXRlcyIsIiRtYXhEaXN0YW5jZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOzs7O0FBQ0E7Ozs7OztBQUVBLE1BQU1BLG9CQUFvQixJQUFJLG1CQUFTQyxNQUFiLENBQ3hCO0FBQ0VDLFlBQVVDLE1BRFo7QUFFRUMsU0FBTztBQUNMQyxVQUFNRixNQUREO0FBRUxHLFVBQU0sQ0FBQyxNQUFELEVBQVMsTUFBVCxFQUFpQixLQUFqQjtBQUZEO0FBRlQsQ0FEd0IsRUFReEI7QUFDRUMsT0FBSztBQURQLENBUndCLENBQTFCOztBQWFBLE1BQU1DLGdCQUFnQixJQUFJLG1CQUFTUCxNQUFiLENBQW9CO0FBQ3hDUSxVQUFRTixNQURnQztBQUV4Q08sT0FBSztBQUNITCxVQUFNLENBQUNNLE1BQUQsQ0FESCxFQUNhO0FBQ2hCQyxXQUFPLFVBRkosQ0FFZ0I7QUFGaEI7QUFGbUMsQ0FBcEIsQ0FBdEI7O0FBUU8sTUFBTUMsa0NBQWEsSUFBSSxtQkFBU1osTUFBYixDQUN4QjtBQUNFYSxRQUFNO0FBQ0pULFVBQU1GLE1BREY7QUFFSlMsV0FBTztBQUZILEdBRFI7QUFLRUcsYUFBVztBQUNUVixVQUFNVyxPQURHO0FBRVRKLFdBQU87QUFGRSxHQUxiO0FBU0VLLE9BQUs7QUFDSFosVUFBTU0sTUFESDtBQUVIQyxXQUFPO0FBRkosR0FUUDtBQWFFTSxlQUFhO0FBQ1hiLFVBQU0sQ0FBQ0wsaUJBQUQsQ0FESztBQUVYbUIsYUFBUztBQUZFLEdBYmY7QUFpQkVDLFlBQVU7QUFDUjtBQUNBQyxXQUFPbEIsTUFGQztBQUdSbUIsWUFBUSxDQUFDbkIsTUFBRCxDQUhBLENBR1U7QUFIVixHQWpCWjtBQXNCRW9CLFVBQVE7QUFDTjtBQUNBbEIsVUFBTUYsTUFGQTtBQUdORyxVQUFNLENBQUMsTUFBRCxFQUFTLFFBQVQsRUFBbUIsU0FBbkI7QUFIQSxHQXRCVjtBQTJCRWtCLFdBQVM7QUFDUG5CLFVBQU1HO0FBREMsR0EzQlg7QUE4QkVpQixhQUFXO0FBQ1RwQixVQUFNLG1CQUFTSixNQUFULENBQWdCeUIsS0FBaEIsQ0FBc0JDLEtBRG5CO0FBRVRDLGlCQUFhO0FBRko7QUE5QmIsQ0FEd0IsRUFvQ3hCO0FBQ0VDLGNBQVk7QUFEZCxDQXBDd0IsQ0FBbkI7O0FBeUNQaEIsV0FBV0QsS0FBWCxDQUFpQixFQUFFVyxRQUFRLENBQVYsRUFBYU4sS0FBSyxDQUFDLENBQW5CLEVBQWpCOztBQUVPLE1BQU1hLHNCQUFPLG1CQUFTQyxLQUFULENBQWUsTUFBZixFQUF1QmxCLFVBQXZCLENBQWI7O0FBRUEsTUFBTW1CLDBCQUFTLHNDQUFvQkYsSUFBcEIsQ0FBZjs7QUFFUEUsT0FBT0MsV0FBUCxDQUNFLFVBREYsRUFFRUQsT0FBT0UsV0FBUCxDQUFtQixVQUFuQixFQUErQkMsWUFBL0IsQ0FBNEM7QUFDMUNyQixRQUFNLGFBRG9DO0FBRTFDVCxRQUFPOzs7OztNQUZtQztBQVExQ3VCLGVBQWEsOEJBUjZCO0FBUzFDUSxTQUFPLENBQUNDLFFBQUQsRUFBV0MsS0FBWCxFQUFrQkMsYUFBbEIsS0FBb0M7QUFBRTtBQUMzQyxRQUFJLENBQUNELE1BQU1FLEdBQVAsSUFBYyxDQUFDRixNQUFNRyxHQUFyQixJQUE0QixDQUFDSCxNQUFNSSxRQUF2QyxFQUFpRDtBQUNqRDtBQUNBTCxhQUFTLGFBQVQsSUFBMEI7QUFDeEJNLGFBQU87QUFDTEMsbUJBQVc7QUFDVHZDLGdCQUFNLE9BREc7QUFFVHdDLHVCQUFhLENBQUNQLE1BQU1FLEdBQVAsRUFBWUYsTUFBTUcsR0FBbEI7QUFGSixTQUROO0FBS0xLLHNCQUFjUixNQUFNSSxRQUxmLENBS3lCO0FBTHpCO0FBRGlCLEtBQTFCO0FBU0Q7QUFyQnlDLENBQTVDO0FBdUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTlCRiIsImZpbGUiOiJ1c2VyLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2NoZW1hL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5cbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgY29tcG9zZVdpdGhNb25nb29zZSBmcm9tICdncmFwaHFsLWNvbXBvc2UtbW9uZ29vc2UnO1xuXG5jb25zdCBBY2NvdW50VHlwZVNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoXG4gIHtcbiAgICBsYW5ndWFnZTogU3RyaW5nLFxuICAgIHNraWxsOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBlbnVtOiBbJ2ZyZWUnLCAncGx1cycsICdwcm8nXSxcbiAgICB9LFxuICB9LFxuICB7XG4gICAgX2lkOiBmYWxzZSxcbiAgfVxuKTtcblxuY29uc3QgQWRkcmVzc1NjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICBzdHJlZXQ6IFN0cmluZyxcbiAgZ2VvOiB7XG4gICAgdHlwZTogW051bWJlcl0sIC8vIFs8bG9uZ2l0dWRlPiwgPGxhdGl0dWRlPl1cbiAgICBpbmRleDogJzJkc3BoZXJlJywgLy8gY3JlYXRlIHRoZSBnZW9zcGF0aWFsIGluZGV4XG4gIH0sXG59KTtcblxuZXhwb3J0IGNvbnN0IFVzZXJTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKFxuICB7XG4gICAgbmFtZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgaW5kZXg6IHRydWUsXG4gICAgfSxcbiAgICBpc19hY3RpdmU6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBpbmRleDogdHJ1ZSxcbiAgICB9LFxuICAgIGFnZToge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgaW5kZXg6IHRydWUsXG4gICAgfSxcbiAgICBhY2NvdW50VHlwZToge1xuICAgICAgdHlwZTogW0FjY291bnRUeXBlU2NoZW1hXSxcbiAgICAgIGRlZmF1bHQ6IFtdLFxuICAgIH0sIFxuICAgIGNvbnRhY3RzOiB7XG4gICAgICAvLyBhbm90aGVyIG1vbmdvb3NlIHdheSBmb3IgcHJvdmlkaW5nIGVtYmVkZGVkIGRvY3VtZW50c1xuICAgICAgZW1haWw6IFN0cmluZyxcbiAgICAgIHBob25lczogW1N0cmluZ10sIC8vIGFycmF5IG9mIHN0cmluZ3NcbiAgICB9LFxuICAgIGdlbmRlcjoge1xuICAgICAgLy8gZW51bSBmaWVsZCB3aXRoIHZhbHVlc1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZW51bTogWydtYWxlJywgJ2ZlbWFsZScsICdsYWR5Ym95J10sXG4gICAgfSxcbiAgICBhZGRyZXNzOiB7XG4gICAgICB0eXBlOiBBZGRyZXNzU2NoZW1hLFxuICAgIH0sXG4gICAgb3RoZXJEYXRhOiB7XG4gICAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuTWl4ZWQsXG4gICAgICBkZXNjcmlwdGlvbjogJ1NvbWUgZHluYW1pYyBkYXRhJyxcbiAgICB9LFxuICB9LFxuICB7XG4gICAgY29sbGVjdGlvbjogJ3VzZXJzJyxcbiAgfVxuKTtcblxuVXNlclNjaGVtYS5pbmRleCh7IGdlbmRlcjogMSwgYWdlOiAtMSB9KTtcblxuZXhwb3J0IGNvbnN0IFVzZXIgPSBtb25nb29zZS5tb2RlbCgnVXNlcicsIFVzZXJTY2hlbWEpO1xuXG5leHBvcnQgY29uc3QgVXNlclRDID0gY29tcG9zZVdpdGhNb25nb29zZShVc2VyKTtcblxuVXNlclRDLnNldFJlc29sdmVyKFxuICAnZmluZE1hbnknLFxuICBVc2VyVEMuZ2V0UmVzb2x2ZXIoJ2ZpbmRNYW55JykuYWRkRmlsdGVyQXJnKHtcbiAgICBuYW1lOiAnZ2VvRGlzdGFuY2UnLFxuICAgIHR5cGU6IGBpbnB1dCBHZW9EaXN0YW5jZSB7XG4gICAgICBsbmc6IEZsb2F0IVxuICAgICAgbGF0OiBGbG9hdCFcbiAgICAgICMgRGlzdGFuY2UgaW4gbWV0ZXJzXG4gICAgICBkaXN0YW5jZTogRmxvYXQhXG4gICAgfWAsXG4gICAgZGVzY3JpcHRpb246ICdTZWFyY2ggYnkgZGlzdGFuY2UgaW4gbWV0ZXJzJyxcbiAgICBxdWVyeTogKHJhd1F1ZXJ5LCB2YWx1ZSwgcmVzb2x2ZVBhcmFtcykgPT4geyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgICBpZiAoIXZhbHVlLmxuZyB8fCAhdmFsdWUubGF0IHx8ICF2YWx1ZS5kaXN0YW5jZSkgcmV0dXJuO1xuICAgICAgLy8gcmVhZCBtb3JlIGh0dHBzOi8vZG9jcy5tb25nb2RiLmNvbS9tYW51YWwvdHV0b3JpYWwvcXVlcnktYS0yZHNwaGVyZS1pbmRleC9cbiAgICAgIHJhd1F1ZXJ5WydhZGRyZXNzLmdlbyddID0ge1xuICAgICAgICAkbmVhcjoge1xuICAgICAgICAgICRnZW9tZXRyeToge1xuICAgICAgICAgICAgdHlwZTogJ1BvaW50JyxcbiAgICAgICAgICAgIGNvb3JkaW5hdGVzOiBbdmFsdWUubG5nLCB2YWx1ZS5sYXRdLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgJG1heERpc3RhbmNlOiB2YWx1ZS5kaXN0YW5jZSwgLy8gPGRpc3RhbmNlIGluIG1ldGVycz5cbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSxcbiAgfSlcbiAgLy8gLyogRk9SIERFQlVHICovXG4gIC8vICAgLmRlYnVnKClcbiAgLy8gLyogT1IgTU9SRSBQUkVDSVNFTFkgKi9cbiAgLy8gICAuZGVidWdQYXJhbXMoKVxuICAvLyAgIC5kZWJ1Z1BheWxvYWQoKVxuICAvLyAgIC5kZWJ1Z0V4ZWNUaW1lKClcbik7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "AccountTypeSchema",
        "Schema",
        "language",
        "String",
        "skill",
        "type",
        "enum",
        "_id",
        "AddressSchema",
        "street",
        "geo",
        "Number",
        "index",
        "UserSchema",
        "name",
        "is_active",
        "Boolean",
        "age",
        "accountType",
        "default",
        "contacts",
        "email",
        "phones",
        "gender",
        "address",
        "otherData",
        "Types",
        "Mixed",
        "description",
        "collection",
        "User",
        "model",
        "UserTC",
        "setResolver",
        "getResolver",
        "addFilterArg",
        "query",
        "rawQuery",
        "value",
        "resolveParams",
        "lng",
        "lat",
        "distance",
        "$near",
        "$geometry",
        "coordinates",
        "$maxDistance"
      ],
      "mappings": ";;;;;;;AAEA;;;;AACA;;;;;;AAEA,MAAMA,oBAAoB,IAAI,mBAASC,MAAb,CACxB;AACEC,YAAUC,MADZ;AAEEC,SAAO;AACLC,UAAMF,MADD;AAELG,UAAM,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB;AAFD;AAFT,CADwB,EAQxB;AACEC,OAAK;AADP,CARwB,CAA1B;;AAaA,MAAMC,gBAAgB,IAAI,mBAASP,MAAb,CAAoB;AACxCQ,UAAQN,MADgC;AAExCO,OAAK;AACHL,UAAM,CAACM,MAAD,CADH,EACa;AAChBC,WAAO,UAFJ,CAEgB;AAFhB;AAFmC,CAApB,CAAtB;;AAQO,MAAMC,kCAAa,IAAI,mBAASZ,MAAb,CACxB;AACEa,QAAM;AACJT,UAAMF,MADF;AAEJS,WAAO;AAFH,GADR;AAKEG,aAAW;AACTV,UAAMW,OADG;AAETJ,WAAO;AAFE,GALb;AASEK,OAAK;AACHZ,UAAMM,MADH;AAEHC,WAAO;AAFJ,GATP;AAaEM,eAAa;AACXb,UAAM,CAACL,iBAAD,CADK;AAEXmB,aAAS;AAFE,GAbf;AAiBEC,YAAU;AACR;AACAC,WAAOlB,MAFC;AAGRmB,YAAQ,CAACnB,MAAD,CAHA,CAGU;AAHV,GAjBZ;AAsBEoB,UAAQ;AACN;AACAlB,UAAMF,MAFA;AAGNG,UAAM,CAAC,MAAD,EAAS,QAAT,EAAmB,SAAnB;AAHA,GAtBV;AA2BEkB,WAAS;AACPnB,UAAMG;AADC,GA3BX;AA8BEiB,aAAW;AACTpB,UAAM,mBAASJ,MAAT,CAAgByB,KAAhB,CAAsBC,KADnB;AAETC,iBAAa;AAFJ;AA9Bb,CADwB,EAoCxB;AACEC,cAAY;AADd,CApCwB,CAAnB;;AAyCPhB,WAAWD,KAAX,CAAiB,EAAEW,QAAQ,CAAV,EAAaN,KAAK,CAAC,CAAnB,EAAjB;;AAEO,MAAMa,sBAAO,mBAASC,KAAT,CAAe,MAAf,EAAuBlB,UAAvB,CAAb;;AAEA,MAAMmB,0BAAS,sCAAoBF,IAApB,CAAf;;AAEPE,OAAOC,WAAP,CACE,UADF,EAEED,OAAOE,WAAP,CAAmB,UAAnB,EAA+BC,YAA/B,CAA4C;AAC1CrB,QAAM,aADoC;AAE1CT,QAAO;;;;;MAFmC;AAQ1CuB,eAAa,8BAR6B;AAS1CQ,SAAO,CAACC,QAAD,EAAWC,KAAX,EAAkBC,aAAlB,KAAoC;AAAE;AAC3C,QAAI,CAACD,MAAME,GAAP,IAAc,CAACF,MAAMG,GAArB,IAA4B,CAACH,MAAMI,QAAvC,EAAiD;AACjD;AACAL,aAAS,aAAT,IAA0B;AACxBM,aAAO;AACLC,mBAAW;AACTvC,gBAAM,OADG;AAETwC,uBAAa,CAACP,MAAME,GAAP,EAAYF,MAAMG,GAAlB;AAFJ,SADN;AAKLK,sBAAcR,MAAMI,QALf,CAKyB;AALzB;AADiB,KAA1B;AASD;AArByC,CAA5C;AAuBA;AACA;AACA;AACA;AACA;AACA;AA9BF",
      "file": "user.js",
      "sourceRoot": "/app/schema/models",
      "sourcesContent": [
        "/* @flow */\n\nimport mongoose from 'mongoose';\nimport composeWithMongoose from 'graphql-compose-mongoose';\n\nconst AccountTypeSchema = new mongoose.Schema(\n  {\n    language: String,\n    skill: {\n      type: String,\n      enum: ['free', 'plus', 'pro'],\n    },\n  },\n  {\n    _id: false,\n  }\n);\n\nconst AddressSchema = new mongoose.Schema({\n  street: String,\n  geo: {\n    type: [Number], // [<longitude>, <latitude>]\n    index: '2dsphere', // create the geospatial index\n  },\n});\n\nexport const UserSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      index: true,\n    },\n    is_active: {\n      type: Boolean,\n      index: true,\n    },\n    age: {\n      type: Number,\n      index: true,\n    },\n    accountType: {\n      type: [AccountTypeSchema],\n      default: [],\n    }, \n    contacts: {\n      // another mongoose way for providing embedded documents\n      email: String,\n      phones: [String], // array of strings\n    },\n    gender: {\n      // enum field with values\n      type: String,\n      enum: ['male', 'female', 'ladyboy'],\n    },\n    address: {\n      type: AddressSchema,\n    },\n    otherData: {\n      type: mongoose.Schema.Types.Mixed,\n      description: 'Some dynamic data',\n    },\n  },\n  {\n    collection: 'users',\n  }\n);\n\nUserSchema.index({ gender: 1, age: -1 });\n\nexport const User = mongoose.model('User', UserSchema);\n\nexport const UserTC = composeWithMongoose(User);\n\nUserTC.setResolver(\n  'findMany',\n  UserTC.getResolver('findMany').addFilterArg({\n    name: 'geoDistance',\n    type: `input GeoDistance {\n      lng: Float!\n      lat: Float!\n      # Distance in meters\n      distance: Float!\n    }`,\n    description: 'Search by distance in meters',\n    query: (rawQuery, value, resolveParams) => { // eslint-disable-line\n      if (!value.lng || !value.lat || !value.distance) return;\n      // read more https://docs.mongodb.com/manual/tutorial/query-a-2dsphere-index/\n      rawQuery['address.geo'] = {\n        $near: {\n          $geometry: {\n            type: 'Point',\n            coordinates: [value.lng, value.lat],\n          },\n          $maxDistance: value.distance, // <distance in meters>\n        },\n      };\n    },\n  })\n  // /* FOR DEBUG */\n  //   .debug()\n  // /* OR MORE PRECISELY */\n  //   .debugParams()\n  //   .debugPayload()\n  //   .debugExecTime()\n);"
      ]
    },
    "mtime": 1521186953314
  }
}